<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_listener_8java" kind="file">
    <compoundname>Listener.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_listener" prot="public">com::leapmotion::leap::Listener</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="24" refid="classcom_1_1leapmotion_1_1leap_1_1_listener" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1ae7f2e02d1f441c8f9c0868168106c84b" kindref="member" tooltip="Constructs a Listener object.">Listener</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Listener(swigCPtr);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swigDirectorDisconnect()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swigReleaseOwnership()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Listener_change_ownership(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>swigCPtr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swigTakeOwnership()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Listener_change_ownership(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>swigCPtr,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1ae7f2e02d1f441c8f9c0868168106c84b" kindref="member" tooltip="Constructs a Listener object.">Listener</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Listener(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Listener_director_connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>swigCPtr,<sp/>swigCMemOwn,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a9350b36122e690e20078ba284701bed0" kindref="member" tooltip="Called once, when this Listener object is newly added to a Controller.">onInit</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onInit(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onInitSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a46b9ec2670695d44d4e9ddf77c8301c3" kindref="member" tooltip="Called when the Controller object connects to the Leap software, or when this Listener object is adde...">onConnect</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onConnect(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onConnectSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a860bf64a24bcb4ac5bce4e8d35c48783" kindref="member" tooltip="Called when the Controller object disconnects from the Leap software.">onDisconnect</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onDisconnect(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onDisconnectSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a583f06440d8676fcc808a1acbd6680cd" kindref="member" tooltip="Called when this application becomes the foreground application.">onFocusGained</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onFocusGained(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onFocusGainedSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a312bfdfa2ed0f85d357006eb492b4cee" kindref="member" tooltip="Called when this application loses the foreground focus.">onFocusLost</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onFocusLost(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onFocusLostSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a78fa3b1a0850e3d8410b7200f3d813af" kindref="member" tooltip="Called when this Listener object is removed from the Controller or the Controller instance is destroy...">onExit</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onExit(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onExitSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1afb0bdc73f5b4edf164a4b1134557f975" kindref="member" tooltip="Called when a new frame of hand and finger tracking data is available.">onFrame</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onFrame(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onFrameSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java"/>
  </compounddef>
</doxygen>
