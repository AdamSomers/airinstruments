<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_gesture_8java" kind="file">
    <compoundname>Gesture.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" prot="public">com::leapmotion::leap::Gesture</innerclass>
    <innerclass refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" prot="public">com::leapmotion::leap::Gesture::State</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1_1_swig_next" prot="private">com::leapmotion::leap::Gesture::State::SwigNext</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1_1_swig_next" prot="private">com::leapmotion::leap::Gesture::Type::SwigNext</innerclass>
    <innerclass refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" prot="public">com::leapmotion::leap::Gesture::Type</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="58" refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" kindref="member" tooltip="Constructs a new Gesture object.">Gesture</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Gesture_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Gesture(swigCPtr);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" kindref="member" tooltip="Constructs a new Gesture object.">Gesture</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Gesture__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" kindref="member" tooltip="Constructs a new Gesture object.">Gesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Gesture__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.getCPtr(rhs),<sp/>rhs),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a7420937c98ea7646f083e5c0a469fe3d" kindref="member" tooltip="The gesture type.">type</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type.swigToEnum(LeapJNI.Gesture_type(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.State<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a13f39cae216c5f285c526936a6b0af67" kindref="member" tooltip="The gesture state.">state</ref>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.State.swigToEnum(LeapJNI.Gesture_state(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ad3e6aa7ddce5cf3079bcc6259f7d7412" kindref="member" tooltip="The gesture ID.">id</ref>()<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_id(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a762ca0339845c9fd8f56eb9c50a9d939" kindref="member" tooltip="The elapsed duration of the recognized movement up to the frame containing this Gesture object...">duration</ref>()<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_duration(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ade91b8b357a0b65559f0b6e92259611a" kindref="member" tooltip="The elapsed duration in seconds.">durationSeconds</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_durationSeconds(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1acd58fdacb406067210d346766317c73d" kindref="member" tooltip="The Frame containing this Gesture instance.">frame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>(LeapJNI.Gesture_frame(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a774b6b0a846bc908140a9695446ec398" kindref="member" tooltip="The list of hands associated with this Gesture, if any.">hands</ref>()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref>(LeapJNI.Gesture_hands(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a43e5763a3e347a066aabd5cac4e0f899" kindref="member" tooltip="The list of fingers and tools associated with this Gesture, if any.">pointables</ref>()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref>(LeapJNI.Gesture_pointables(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a1fbc97e34f25c3e1bb2f6ffecc57c563" kindref="member" tooltip="Reports whether this Gesture instance represents a valid Gesture.">isValid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_isValid(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a9d1e2879db9699c3376ecad4ac6b5326" kindref="member" tooltip="Compare Gesture object equality.">equals</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_equals(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.getCPtr(rhs),<sp/>rhs);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a6e5c086a26fa919648e307887cdefcf2" kindref="member" tooltip="A string containing a brief, human-readable description of this Gesture.">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a5bf5a6582c95367b8a46ac0a220da5" kindref="member" tooltip="Returns an invalid Gesture object.">invalid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" kindref="member" tooltip="Constructs a new Gesture object.">Gesture</ref>(LeapJNI.Gesture_invalid(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_INVALID(-1),</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_SWIPE(1),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_CIRCLE(4),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_SCREEN_TAP(5),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_KEY_TAP(6),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue()<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref><sp/>swigToEnum(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>[]<sp/>swigValues<sp/>=<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>.class.getEnumConstants();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigValue<sp/>&lt;<sp/>swigValues.length<sp/>&amp;&amp;<sp/>swigValue<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>swigValues[swigValue].swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValues[swigValue];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref><sp/>swigEnum<sp/>:<sp/>swigValues)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigEnum.swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigEnum;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;No<sp/>enum<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>.class<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>value<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>swigValue);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unused&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>()<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>SwigNext.next++;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unused&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigValue;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>swigValue+1;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unused&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref><sp/>swigEnum)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigEnum.swigValue;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>this.swigValue+1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SwigNext<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>STATE_INVALID(-1),</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>STATE_START(1),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>STATE_UPDATE(2),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>STATE_STOP(3),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue()<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref><sp/>swigToEnum(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>[]<sp/>swigValues<sp/>=<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>.class.getEnumConstants();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigValue<sp/>&lt;<sp/>swigValues.length<sp/>&amp;&amp;<sp/>swigValue<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>swigValues[swigValue].swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValues[swigValue];</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref><sp/>swigEnum<sp/>:<sp/>swigValues)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigEnum.swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigEnum;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;No<sp/>enum<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>.class<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>value<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>swigValue);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unused&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>()<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>SwigNext.next++;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unused&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigValue;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>swigValue+1;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">&quot;unused&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref><sp/>swigEnum)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigEnum.swigValue;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>this.swigValue+1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SwigNext<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java"/>
  </compounddef>
</doxygen>
