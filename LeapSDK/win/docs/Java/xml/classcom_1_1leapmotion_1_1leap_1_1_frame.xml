<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="classcom_1_1leapmotion_1_1leap_1_1_frame" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Frame</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a2e611ff959bcc0b7f729f543038c6e42" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Frame.swigCPtr</definition>
        <argsstring></argsstring>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="23" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a3df4fa4e3067344c59dfe93cba52b850" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Frame.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="34" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae81958528ea78beaedb2ea4d85efa45d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>com.leapmotion.leap.Frame.Frame</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Frame</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="25" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1ab7156a636b8dcf6da427f7d57c63b29c" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Frame.getCPtr</definition>
        <argsstring>(Frame obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="30" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="30" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a572309cad7c605af29e6ca63d9ea132c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Frame.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="38" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a73e01ad097ed520ed0eb6189c156c618" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Frame.equals</definition>
        <argsstring>(Frame arg0)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object equality. </para>        </briefdescription>
        <detaileddescription>
<para>Two <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects are equal if and only if both <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects represent the exact same frame of tracking data and both <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects are valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="444" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="444" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a841c6a05eb2dfa190d3a249073aaf348" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>Finger com.leapmotion.leap.Frame.finger</definition>
        <argsstring>(int id)</argsstring>
        <name>finger</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a841c6a05eb2dfa190d3a249073aaf348" kindref="member">Frame::finger()</ref> function to retrieve the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object from this frame using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object, but if no finger with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a finger is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object representing that physical finger may have a different ID than that representing the finger in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object with the matching ID if one exists in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="176" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a63148fe55813b2c426a711cfa143f801" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
        <definition>FingerList com.leapmotion.leap.Frame.fingers</definition>
        <argsstring>()</argsstring>
        <name>fingers</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects detected in this frame, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no fingers are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects detected in this frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="154" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1aed613c567b9b3b9f8dcf52856c9a2030" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>com.leapmotion.leap.Frame.Frame</definition>
        <argsstring>()</argsstring>
        <name>Frame</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> instances created with this constructor are invalid. Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects by calling the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">Controller::frame()</ref> function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="56" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
        <definition>Gesture com.leapmotion.leap.Frame.gesture</definition>
        <argsstring>(int id)</argsstring>
        <name>gesture</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" kindref="member">Frame::gesture()</ref> function to return a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object in this frame using an ID obtained in an earlier frame. The function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object, but if there was no update for the gesture in this frame, then an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object is returned.</para><para>All <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> objects representing the same recognized movement share the same ID. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of an <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object in the frame with the specified ID if one exists; Otherwise, an Invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="228" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a308d136b5187166dcfd0f1be28aec2c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
        <definition>GestureList com.leapmotion.leap.Frame.gestures</definition>
        <argsstring>()</argsstring>
        <name>gestures</name>
        <briefdescription>
<para>The gestures recognized or continuing in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Circle and swipe gestures are updated every frame. Tap gestures only appear in the list for a single frame.</para><para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> the list of gestures. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="241" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a7c0ab00c5b66cc0b88b8f05d60d4a9f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
        <definition>GestureList com.leapmotion.leap.Frame.gestures</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>gestures</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> containing all gestures that have occured since the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>An earlier <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. The starting frame must still be in the frame history cache, which has a default length of 60 frames. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> The list of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> objects that have occured since the specified frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="256" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a75d80b1d6c46b04fc6c446c79ce3cc19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>Hand com.leapmotion.leap.Frame.hand</definition>
        <argsstring>(int id)</argsstring>
        <name>hand</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a75d80b1d6c46b04fc6c446c79ce3cc19" kindref="member">Frame::hand()</ref> function to retrieve the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object from this frame using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object, but if no hand with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a hand is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object representing that physical hand may have a different ID than that representing the physical hand in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object with the matching ID if one exists in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="110" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae95881f0ce37c72e4e74b0bd46e02cc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
        <definition>HandList com.leapmotion.leap.Frame.hands</definition>
        <argsstring>()</argsstring>
        <name>hands</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects detected in this frame, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no hands are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects detected in this frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="88" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1add4aa27e1b4181fb8c9bae5feaf4139d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.Frame.id</definition>
        <argsstring>()</argsstring>
        <name>id</name>
        <briefdescription>
<para>A unique ID for this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Consecutive frames processed by the Leap have consecutive increasing values.</para><para><simplesect kind="return"><para>The frame ID. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="67" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a895c3c63566e8987a11fcaee4f875829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Frame.isValid</definition>
        <argsstring>()</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Reports whether this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> instance is valid. </para>        </briefdescription>
        <detaileddescription>
<para>A valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> is one generated by the Leap::Controller object that contains tracking data for all detected entities. An invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> contains no actual tracking data, but you can call its functions without risk of a null pointer exception. The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> mechanism makes it more convenient to track individual data across the frame history. For example, you can invoke:</para><para><programlisting><codeline><highlight class="normal">Finger<sp/>finger<sp/>=<sp/>controller.frame(n).finger(fingerID);</highlight></codeline>
</programlisting></para><para>for an arbitrary <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> history value, &quot;n&quot;, without first checking whether frame(n) returned a null object. (You should still check that the returned <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> instance is valid.)</para><para><simplesect kind="return"><para>True, if this is a valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object; false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="420" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="420" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a91c0d83c637fb367e72216d22dac8fb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>Pointable com.leapmotion.leap.Frame.pointable</definition>
        <argsstring>(int id)</argsstring>
        <name>pointable</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a91c0d83c637fb367e72216d22dac8fb7" kindref="member">Frame::pointable()</ref> function to retrieve the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object from this frame using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object, but if no finger or tool with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a finger or tool is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object representing that finger or tool may have a different ID than that representing the finger or tool in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object with the matching ID if one exists in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="143" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1aeaadff41e48021771b3e33333c505d5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
        <definition>PointableList com.leapmotion.leap.Frame.pointables</definition>
        <argsstring>()</argsstring>
        <name>pointables</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects (fingers and tools) detected in this frame, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no fingers or tools are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects detected in this frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="121" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9570b870042931e39da08ac41b70e5d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Frame.rotationAngle</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>rotationAngle</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The angle of rotation around the rotation axis derived from the overall rotational motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned angle is expressed in radians measured clockwise around the rotation axis (using the right-hand rule) between the start and end frames. The value is always between 0 and pi radians (0 and 180 degrees).</para><para>The Leap derives frame rotation from the relative change in position and orientation of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then the angle of rotation is zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive value containing the heuristically determined rotational change between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="325" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a0812b9f900b648e20dc36529c353f3d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Frame.rotationAngle</definition>
        <argsstring>(Frame sinceFrame, Vector axis)</argsstring>
        <name>rotationAngle</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>axis</declname>
        </param>
        <briefdescription>
<para>The angle of rotation around the specified axis derived from the overall rotational motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned angle is expressed in radians measured clockwise around the rotation axis (using the right-hand rule) between the start and end frames. The value is always between -pi and pi radians (-180 and 180 degrees).</para><para>The Leap derives frame rotation from the relative change in position and orientation of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then the angle of rotation is zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis to measure rotation around. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value containing the heuristically determined rotational change between the current frame and that specified in the sinceFrame parameter around the given axis. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="350" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a84c9f63c0cf256ec3de2c375586e5eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Frame.rotationAxis</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>rotationAxis</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The axis of rotation derived from the overall rotational motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned direction vector is normalized.</para><para>The Leap derives frame rotation from the relative change in position and orientation of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, or if no rotation is detected between the two frames, a zero vector is returned.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A normalized direction <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the axis of the heuristically determined rotational change between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="301" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="301" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1ac7cfc29107e6bd94ecd4e851a40f88af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix com.leapmotion.leap.Frame.rotationMatrix</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>rotationMatrix</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The transform matrix expressing the rotation derived from the overall rotational motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The Leap derives frame rotation from the relative change in position and orientation of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then this method returns an identity matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A transformation <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref> containing the heuristically determined rotational change between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="370" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="370" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9d09300fae5e7b7f243758d1a1d44d2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Frame.scaleFactor</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>scaleFactor</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The scale factor derived from the overall motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The scale factor is always positive. A value of 1.0 indicates no scaling took place. Values between 0.0 and 1.0 indicate contraction and values greater than 1.0 indicate expansion.</para><para>The Leap derives scaling from the relative inward or outward motion of all objects detected in the field of view (independent of translation and rotation).</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then this method returns 1.0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative scaling. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive value representing the heuristically determined scaling change ratio between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="395" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="395" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1abf56bd79f7143e5e51a9c830bf0a5fbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.Frame.timestamp</definition>
        <argsstring>()</argsstring>
        <name>timestamp</name>
        <briefdescription>
<para>The frame capture time in microseconds elapsed since the Leap started. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The timestamp in microseconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="77" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a8b35e3a0bb912a2a9904bee41f6373da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref></type>
        <definition>Tool com.leapmotion.leap.Frame.tool</definition>
        <argsstring>(int id)</argsstring>
        <name>tool</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a8b35e3a0bb912a2a9904bee41f6373da" kindref="member">Frame::tool()</ref> function to retrieve the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object from this frame using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object, but if no tool with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a tool is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object representing that tool may have a different ID than that representing the tool in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object with the matching ID if one exists in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="209" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a1d4d3ca18d34b4df7422f18a735527ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
        <definition>ToolList com.leapmotion.leap.Frame.tools</definition>
        <argsstring>()</argsstring>
        <name>tools</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects detected in this frame, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no tools are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects detected in this frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="187" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9c0392d98f61df3c560c9895cbb41fcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Frame.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>A string containing a brief, human readable description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> as a string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="454" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="454" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a2248c1409975aa689bd63bc3970a8656" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Frame.translation</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>translation</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The change of position derived from the overall linear motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned translation vector provides the magnitude and direction of the movement in millimeters.</para><para>The Leap derives frame translation from the linear motion of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then this method returns a zero vector.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative translation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the heuristically determined change in position of all objects between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="279" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="279" bodyend="281"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a0aa54564365f6e4cb849bee2a2df4a73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
        <definition>static Frame com.leapmotion.leap.Frame.invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
<para>Returns an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>You can use the instance returned by this function in comparisons testing whether a given <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> instance is valid or invalid. (You can also use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a895c3c63566e8987a11fcaee4f875829" kindref="member">Frame::isValid()</ref> function.)</para><para><simplesect kind="return"><para>The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="434" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="434" bodyend="436"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> class represents a set of hand and finger tracking data detected in a single frame. </para>    </briefdescription>
    <detaileddescription>
<para>The Leap detects hands, fingers and tools within the tracking area, reporting their positions, orientations and motions in frames at the Leap frame rate.</para><para>Access <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects through an instance of a Leap <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref>. Implement a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> subclass to receive a callback event when a new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> is available. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="22" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="22" bodyend="458"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a572309cad7c605af29e6ca63d9ea132c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a73e01ad097ed520ed0eb6189c156c618" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a3df4fa4e3067344c59dfe93cba52b850" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a841c6a05eb2dfa190d3a249073aaf348" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>finger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a63148fe55813b2c426a711cfa143f801" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>fingers</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae81958528ea78beaedb2ea4d85efa45d" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>Frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1aed613c567b9b3b9f8dcf52856c9a2030" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>Frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a308d136b5187166dcfd0f1be28aec2c5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>gestures</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a7c0ab00c5b66cc0b88b8f05d60d4a9f7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>gestures</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ab7156a636b8dcf6da427f7d57c63b29c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Frame</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a75d80b1d6c46b04fc6c446c79ce3cc19" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae95881f0ce37c72e4e74b0bd46e02cc7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>hands</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1add4aa27e1b4181fb8c9bae5feaf4139d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a0aa54564365f6e4cb849bee2a2df4a73" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a895c3c63566e8987a11fcaee4f875829" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a91c0d83c637fb367e72216d22dac8fb7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1aeaadff41e48021771b3e33333c505d5d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9570b870042931e39da08ac41b70e5d0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>rotationAngle</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a0812b9f900b648e20dc36529c353f3d3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>rotationAngle</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a84c9f63c0cf256ec3de2c375586e5eba" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>rotationAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ac7cfc29107e6bd94ecd4e851a40f88af" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>rotationMatrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9d09300fae5e7b7f243758d1a1d44d2a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>scaleFactor</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a2e611ff959bcc0b7f729f543038c6e42" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1abf56bd79f7143e5e51a9c830bf0a5fbe" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>timestamp</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a8b35e3a0bb912a2a9904bee41f6373da" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>tool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a1d4d3ca18d34b4df7422f18a735527ad" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>tools</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9c0392d98f61df3c560c9895cbb41fcc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a2248c1409975aa689bd63bc3970a8656" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>translation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
