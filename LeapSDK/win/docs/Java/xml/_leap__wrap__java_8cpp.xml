<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_leap__wrap__java_8cpp" kind="file">
    <compoundname>Leap_wrap_java.cpp</compoundname>
    <includes local="no">jni.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">string</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">vector</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="yes">Leap.h</includes>
    <includes refid="_leap__wrap__java_8h" local="yes">Leap_wrap_java.h</includes>
    <incdepgraph>
      <node id="71">
        <label>Leap.h</label>
      </node>
      <node id="69">
        <label>stdint.h</label>
      </node>
      <node id="64">
        <label>stdlib.h</label>
      </node>
      <node id="67">
        <label>stdexcept</label>
      </node>
      <node id="66">
        <label>string</label>
      </node>
      <node id="72">
        <label>Leap_wrap_java.h</label>
        <link refid="_leap__wrap__java_8h_source"/>
      </node>
      <node id="65">
        <label>string.h</label>
      </node>
      <node id="68">
        <label>vector</label>
      </node>
      <node id="62">
        <label>/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp</label>
        <link refid="Leap_wrap_java.cpp"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>jni.h</label>
      </node>
      <node id="70">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_s_w_i_g___java_exceptions__t" prot="public">SWIG_JavaExceptions_t</innerclass>
    <innernamespace refid="namespace_swig">Swig</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a91b7b0dc42795a9766b801eb733543cf" prot="public" static="no">
        <name>SWIG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="480" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a348dca0399dff2bcea8e49cb9cb04991" prot="public" static="no">
        <name>SWIG_contract_assert</name>
        <param><defname>nullreturn</defname></param>
        <param><defname>expr</defname></param>
        <param><defname>msg</defname></param>
        <initializer>if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="259" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a08d7251e749eb4d7a032a647f48950a5" prot="public" static="no">
        <name>SWIG_DIRECTORS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="59" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1aea3c8b056dcc8c1ab93f6b825cd1371b" prot="public" static="no">
        <name>SWIGEXPORT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="169" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a6d0a7c65b3712775e92c8bdb7acdd0ee" prot="public" static="no">
        <name>SWIGINLINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="108" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a8f2319f775e5b9d5906c9ef25d9b819a" prot="public" static="no">
        <name>SWIGINTERN</name>
        <initializer>static SWIGUNUSED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="143" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1afc5b08bb3c3cd2e3fb2e34b775346153" prot="public" static="no">
        <name>SWIGINTERNINLINE</name>
        <initializer>SWIGINTERN SWIGINLINE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="148" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1aa44de7bf6024602ca7e923c0fa5bd119" prot="public" static="no">
        <name>SWIGJAVA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="58" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1adcd6410456ea7a76147d3ad95b9bcb36" prot="public" static="no">
        <name>SWIGSTDCALL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="179" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a7e84031693895e512662f5b390c6d0e4" prot="public" static="no">
        <name>SWIGTEMPLATEDISAMBIGUATOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="99" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a6ee41cd160d397aa76668bf4db65e2d1" prot="public" static="no">
        <name>SWIGUNUSED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="123" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a6a54164d0685c632e7540c5ad32a453a" prot="public" static="no">
        <name>SWIGUNUSEDPARM</name>
        <param><defname>p</defname></param>
        <initializer>p SWIGUNUSED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="137" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6" prot="public" static="no">
        <name>SWIG_JavaExceptionCodes</name>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6accbe98fef6893702d7fe5e460dc3aa57" prot="public">
          <name>SWIG_JavaOutOfMemoryError</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6a199e1efa751429198cb46a1aeee15bb7" prot="public">
          <name>SWIG_JavaIOException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6ab1afb65d7a91a2ce1dcbbc64e88a349a" prot="public">
          <name>SWIG_JavaRuntimeException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6af12f677ec45b7b3e71451e74d9b75694" prot="public">
          <name>SWIG_JavaIndexOutOfBoundsException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6a66d33030f15e58c604fbb649a9dd1bf2" prot="public">
          <name>SWIG_JavaArithmeticException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6ae9e1faedf7322cd8b18dfcda70701db3" prot="public">
          <name>SWIG_JavaIllegalArgumentException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6ab8355b629f74b9204e5d04826c142424" prot="public">
          <name>SWIG_JavaNullPointerException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6ac41e998929496bf1f42871aac04b1e97" prot="public">
          <name>SWIG_JavaDirectorPureVirtual</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6a6aacbda6ab6e6550234dace9d04e9e60" prot="public">
          <name>SWIG_JavaUnknownError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="213" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="213" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a58bb75c46dc33ebb0d79052a7964474a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1center</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1center</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2946" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2946" bodyend="2958"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa64503dad79d4931168c3ed4cd645a7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1classType</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1classType</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2903" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2903" bodyend="2912"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a554e5c7fda6036d0f5caf1380db25532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1normal</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1normal</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2961" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2961" bodyend="2973"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a994eb085f1b04befdaf4263d16983fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3006" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3006" bodyend="3018"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a01b5097f7dbfc1dbd4e7cbf6b55faa9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1progress</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1progress</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2976" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2976" bodyend="2988"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae7cfd1032b1367851c75d0c3ee83cb9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1radius</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1radius</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2991" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2991" bodyend="3003"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a132bbed90a30f38b62dfa2cc88483100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5554" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5554" bodyend="5560"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af7ab0497fd08444a0ed36da9b9d70253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getBool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getBool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4749" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4749" bodyend="4771"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a33ee886e278266ef75ed55037366ed23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getFloat</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getFloat</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4853" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4853" bodyend="4875"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8a782e50c02dbdd47846b7a1c937c1fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getInt32</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getInt32</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4801" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4801" bodyend="4823"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7cdf093247ee48c8437c4eb577c74cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4905" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4905" bodyend="4927"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adbe3b34b6de7e1b5a9f62a2b95f5a155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1save</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1save</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4965" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4965" bodyend="4977"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ada87dc6376987a9e0afef97e0a4c432d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1setBool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jboolean jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1setBool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4774" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4774" bodyend="4798"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afed8bfd475ce81f2803c080247797e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1setFloat</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jfloat jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1setFloat</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4878" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4878" bodyend="4902"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aac42c44128bcb502fd544602048564e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1setInt32</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1setInt32</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4826" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4826" bodyend="4850"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aafdedbf038e52c18e7a895f69b891413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1setString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1setString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4930" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4930" bodyend="4962"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aea75a30dce1255f30affd76c7cbd37b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5642" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5642" bodyend="5648"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad0d699880c4676969adb02fc7fe49a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1type</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1type</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4724" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4724" bodyend="4746"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a52ea745b35efc2a9d0f3238d13042c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1addListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1addListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5061" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5061" bodyend="5080"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae613254b4e30b1bd8401c60abaef6d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1calibratedScreens</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1calibratedScreens</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5152" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5152" bodyend="5164"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a223fdcf24bd9ebf57a68de624a8d2649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1config</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1config</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5137" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5137" bodyend="5149"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae7f3134d289e9ac83d6ffbd89f6962e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jboolean jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5167" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5167" bodyend="5179"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a264853b4ec9eb2dbc2e725987a5b4e13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5182" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5182" bodyend="5192"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9092de5711772bebfee1cb83d3f90285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5105" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5105" bodyend="5119"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7c7ae5a2128264e8dbacd6bb9bd2a767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5122" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5122" bodyend="5134"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af68c85515c8ddacb29638f1d11d7cf47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1hasFocus</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1hasFocus</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5046" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5046" bodyend="5058"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae493472549f10cc6dc0a0f10c241178b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1isConnected</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1isConnected</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5031" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5031" bodyend="5043"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a077ef056648ecb4f15655fcaed45aa4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1isGestureEnabled</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1isGestureEnabled</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5195" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5195" bodyend="5209"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a55d98fe64a705599735a8c5bc37bd4e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1removeListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1removeListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5083" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5083" bodyend="5102"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4413d40db78708765b168772841567ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5650" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5650" bodyend="5656"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3b71984edd2238aa54042efe507a6b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1CircleGesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1CircleGesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3021" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3021" bodyend="3028"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afc7045bd116b1dd5f12ebec9950a3b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Config</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Config</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4980" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4980" bodyend="4987"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8e24819ed307f4f3010f4aedcd36ca31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Controller</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Controller</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5002" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5002" bodyend="5009"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa69fd6a043feb794d712ff6376bce3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Finger</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Finger</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2031" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2031" bodyend="2038"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a34dde2e9513d648ea113763f2554c997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1FingerList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1FingerList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3850" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3850" bodyend="3857"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1ecea65eeebf3323ffff275d58b6614a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4702" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4702" bodyend="4709"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a50a7035922a8311f4cc5a2693f41198f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Gesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Gesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2765" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2765" bodyend="2772"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6de623710fab76df6988d9af0b8e6af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1GestureList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1GestureList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4123" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4123" bodyend="4130"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a84e0ef3922f15758c3a1f3e418a0b2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Hand</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Hand</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2540" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2540" bodyend="2547"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad286e8bc79c2d7a04ca97b2432be4d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1HandList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1HandList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4032" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4032" bodyend="4039"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a52cf871d670256b07e36ab454fd272c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1KeyTapGesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1KeyTapGesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3247" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3247" bodyend="3254"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a310fc6feda09608cf404b885cf9d4b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Listener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Listener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5224" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5224" bodyend="5231"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a77f8a1697dcd5c2b1cbf3a7bddc2dddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Matrix</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Matrix</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1727" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1727" bodyend="1734"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7693cc26dc73487d894b4b15c0df8f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1963" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1963" bodyend="1970"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a18ba07306707c45794236c4c1da87928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1PointableList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1PointableList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3759" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3759" bodyend="3766"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acd006427767de5a7a9e7462baa885a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Screen</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Screen</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3624" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3624" bodyend="3631"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0a44690a7262fe805bca9af669ff5d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1ScreenList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1ScreenList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4265" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4265" bodyend="4272"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a525c1011894b8575a45972e7c048aaa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1ScreenTapGesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1ScreenTapGesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3134" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3134" bodyend="3141"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a54f557b303896d5b99dae831e067fa10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1SwipeGesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1SwipeGesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2893" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2893" bodyend="2900"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4f8f501a1f8cc3a91f953d716d9775f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Tool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Tool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2099" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2099" bodyend="2106"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a86bb379db4d0ce188ffa4df2936ce27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1ToolList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1ToolList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3941" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3941" bodyend="3948"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a63eb6f25c55957204b2ced144549d106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Vector</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Vector</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1298" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1298" bodyend="1305"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8bfe9309d2b2a6f886368a8764cd0e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Finger_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Finger_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2004" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2004" bodyend="2013"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3e852cd6d14f8240d2d92b4d5f7a15f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Finger_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Finger_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5514" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5514" bodyend="5520"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7223274ba54041ecfeb59e13c076968a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Finger_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Finger_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2016" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2016" bodyend="2028"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad39a2915d0e23c6b550f1b448ee07467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1append</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1append</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3828" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3828" bodyend="3847"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acd2f269a60a7f95c4e6c67f56feb8c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3781" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3781" bodyend="3793"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afbdd1b19aa84743cdd77154e24f75673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3796" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3796" bodyend="3808"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a040091080d62d4a1e074ec734acc6ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3811" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3811" bodyend="3825"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a354f82e603afa413931955c2b0be2b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5594" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5594" bodyend="5600"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab20003bb7d34839ca9a907c3decf1c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4665" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4665" bodyend="4684"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad999b1bc8d50a34bc0beccd6f1656d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1finger</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1finger</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4396" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4396" bodyend="4410"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9e543099035558d5c978701fe1457daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1fingers</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1fingers</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4381" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4381" bodyend="4393"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad76151294da4a9f0cf5ab2bd53aa0ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1gesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1gesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4445" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4445" bodyend="4459"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae520260c0bc6eb0242f1944980c65a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4462" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4462" bodyend="4474"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a140a5b683c30a5b4fdcd23e065860883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4477" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4477" bodyend="4496"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a635e794ff9495ac2ef4f0183d8423f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1hand</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1hand</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4332" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4332" bodyend="4346"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a109d05e14ca856e6d27081d4f89e20f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1hands</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1hands</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4317" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4317" bodyend="4329"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a35d8ed3d75f176537fefe5f2b734687f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4287" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4287" bodyend="4299"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac6bdcc0c63261a3cc6b57a68b8094a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4653" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4653" bodyend="4662"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a253ccdda0e7883577f4f288cbd483bf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4638" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4638" bodyend="4650"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abf8b3f02f0fdaae8425e0ed24ab037f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4364" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4364" bodyend="4378"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af81d7077192b477f04fe52b39edeeeda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1pointables</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1pointables</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4349" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4349" bodyend="4361"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afaa420152044c52513396bffb0a2ca3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4543" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4543" bodyend="4562"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2ebedb95e6a8b3b4c87753ce3a46be32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4565" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4565" bodyend="4591"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4ff2412677e4a24ed27f00c015937b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4521" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4521" bodyend="4540"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac5f1c73468639342ac36443bfcec8e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1rotationMatrix</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationMatrix</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4594" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4594" bodyend="4613"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab485299e2134852cf65ec11b81da6438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1scaleFactor</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1scaleFactor</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4616" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4616" bodyend="4635"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0673775a9352f957ed623c2e6eab4e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5634" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5634" bodyend="5640"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a693d2edd4fe9b01b2068c595b1ca470b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1timestamp</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1timestamp</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4302" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4302" bodyend="4314"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a370b33be62d1e7b8f2649d83b8482a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1tool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1tool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4428" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4428" bodyend="4442"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7e461254ab7232c94ffd11e094898ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1tools</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1tools</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4413" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4413" bodyend="4425"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac5a65a4f7b37d494a655a5c568d78ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4687" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4687" bodyend="4699"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a43b252f62dfacc1bdc63d5e3ed67d0bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1translation</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1translation</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4499" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4499" bodyend="4518"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1add45d309fded32354844412382187be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1duration</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1duration</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2626" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2626" bodyend="2638"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af27e7d534aedf83c9690db167d3c6e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1durationSeconds</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1durationSeconds</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2641" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2641" bodyend="2653"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6c56e4881ab390a735c849f8e939bb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2716" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2716" bodyend="2735"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4e3bd97cd21dd0400811a0dfcc1a5e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2656" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2656" bodyend="2668"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6928ab98c1697b4c7f9abb38df1e6022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1hands</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1hands</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2671" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2671" bodyend="2683"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a89223690281c135764de4c1f00721a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2611" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2611" bodyend="2623"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a63e2a71b24d994c7aa61fe87c7764795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2753" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2753" bodyend="2762"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a11cbf924cb041809c00b3cc10c09655f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2701" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2701" bodyend="2713"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad04a8500d889b5dde79fc4ddad00589f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1pointables</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1pointables</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2686" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2686" bodyend="2698"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a37f078fafb78345ad8a02eeb741d53c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1state</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1state</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2596" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2596" bodyend="2608"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6653f6868f92d2e6e8b949e70adc3b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5538" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5538" bodyend="5544"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0275be30534b2510a7997401ede22619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2738" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2738" bodyend="2750"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa82c3d0fae4d2b08c8ce4d2d5e9f7bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1type</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1type</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2581" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2581" bodyend="2593"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a16d52e80320a900ce5cb4bc953f283cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1append</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1append</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4101" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4101" bodyend="4120"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af353ef4647e090ca6b490eb1042221f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4054" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4054" bodyend="4066"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abbe8cf37e067b6268da84d8a412799fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4069" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4069" bodyend="4081"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2424d627ade48723abdc2cb939b5a01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4084" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4084" bodyend="4098"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aad168119f453f198e082624adddb5dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5618" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5618" bodyend="5624"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6d7dbc47551c7e45f33956d4cfda446a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2292" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2292" bodyend="2304"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a88c51552b48443e1a55ac545b4b1e737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2503" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2503" bodyend="2522"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5d7c7fbd5cd614779e0d1db6f708fea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1finger</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1finger</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2198" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2198" bodyend="2212"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aecbee9ee9c92063cc48f93aedfc5838d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1fingers</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1fingers</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2183" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2183" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a97e04f94d1ca55268f4154757da0cc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2136" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2136" bodyend="2148"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adcdc5a3d97d235cd6e99a98a39e87491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2121" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2121" bodyend="2133"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae67327fd0ae7d0cae2eb0d39c1d496df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2491" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2491" bodyend="2500"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac17b1c4f2298b5d5e93004713f1629a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2476" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2476" bodyend="2488"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acc68d4d3662264cd2f6f77e8d6018149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1palmNormal</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1palmNormal</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2277" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2277" bodyend="2289"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab16b95f40e3de6ddb7c9a4a0f57399da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1palmPosition</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1palmPosition</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2247" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2247" bodyend="2259"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac9acbda63b9bb6f9fa4d8a679e1962d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1palmVelocity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1palmVelocity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2262" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2262" bodyend="2274"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a21f8df614fd69c526627265356befc6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2166" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2166" bodyend="2180"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac400abfa3271b418b070945854dd8f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1pointables</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1pointables</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2151" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2151" bodyend="2163"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee9044ecc199664e6164c519f268ffc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2381" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2381" bodyend="2400"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab8fafbb90ffdbfaa7c50d860d2e1641e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2403" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2403" bodyend="2429"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abc22f97e85d6ae00b0abee7059f8ebaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2359" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2359" bodyend="2378"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2cf8790c08d66e711bc358de08e307eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1rotationMatrix</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationMatrix</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2432" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2432" bodyend="2451"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a13bacaaf2cc229a3f55e45de41520e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1scaleFactor</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1scaleFactor</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2454" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2454" bodyend="2473"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7865739eef82a72e1e09bb5f77ba9a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1sphereCenter</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1sphereCenter</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2307" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2307" bodyend="2319"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a34b05d07ca985f947304265a2ac37814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1sphereRadius</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1sphereRadius</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2322" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2322" bodyend="2334"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a056973c3a06ecaf4379f680170389a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5530" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5530" bodyend="5536"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a031e0e39a9d2403ff6cece4c24f47a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1tool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1tool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2230" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2230" bodyend="2244"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab62b935d569a50a658ac39b6adbed4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1tools</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1tools</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2215" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2215" bodyend="2227"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ace6d89e2a6da09cc0d790a707ce41fd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2525" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2525" bodyend="2537"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa0616c9f1432c8c21f772397ec1234a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1translation</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1translation</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2337" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2337" bodyend="2356"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad22a0f9eb289ed314ff14c26a24cfc40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1append</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1append</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4010" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4010" bodyend="4029"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a02349679c12415f5d0e14198af9e20a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3963" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3963" bodyend="3975"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4a7bca11c2bae018094f72627eb3c128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3978" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3978" bodyend="3990"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6ef3e57a1eaa7e33457538aa8767f3d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3993" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3993" bodyend="4007"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a45a9f95a844b1f925d4b0479948938ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5610" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5610" bodyend="5616"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adc5e2027fa70fe4e4704dec17f1173b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1classType</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1classType</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3144" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3144" bodyend="3153"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3fe15807c131809484025ccd73160e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3202" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3202" bodyend="3214"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a40bafbab004d8ceaa5b6b5d4cb7a1888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3232" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3232" bodyend="3244"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a178cf30ec76633942f14b9f1ba5c2b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1position</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1position</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3187" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3187" bodyend="3199"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a931f57cc03a3a6373ac0551a252e00a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1progress</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1progress</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3217" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3217" bodyend="3229"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3ea373f604bcaebb6f356583bcbdc19a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5570" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5570" bodyend="5576"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a68f223d10b12ebc5dcf8168350b412dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1change_1ownership</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1change_1ownership</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jself</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>objarg</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jtake_or_release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5496" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5496" bodyend="5503"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4b904d1ef567f8cd0eadd3272ae4c040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1director_1connect</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1director_1connect</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jself</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>objarg</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jswig_mem_own</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jweak_global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5486" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5486" bodyend="5493"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee2d80d2ced99f01ef6589685b475482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onConnect</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onConnect</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5270" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5270" bodyend="5285"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a316b1bcab7e593ef109d69dfa1ca2143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onConnectSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onConnectSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5288" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5288" bodyend="5303"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae8c225537a11e44cb5e32f4ebcb014ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnect</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnect</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5306" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5306" bodyend="5321"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0ea8f7fd4b6bcbd399442e5c4ed67ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnectSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnectSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5324" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5324" bodyend="5339"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5e474e2e6084672c2aa5c8f55ea3d8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onExit</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onExit</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5414" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5414" bodyend="5429"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0637bad365fab89f5e7cf1c5d56031b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onExitSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onExitSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5432" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5432" bodyend="5447"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8dff47b1300237cfa33ba30a38ecfa5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusGained</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusGained</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5342" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5342" bodyend="5357"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aeab5937f2f3a9ca1b04df59c3a663c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusGainedSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusGainedSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5360" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5360" bodyend="5375"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a75ff1d40d634e7981bbf86ba29bac793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusLost</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusLost</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5378" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5378" bodyend="5393"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7e924e57284e0872b50df4a90c946e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusLostSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusLostSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5396" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5396" bodyend="5411"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac85023da6d7a57a1d7dfd03060841212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onFrame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onFrame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5450" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5450" bodyend="5465"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af486baba25d3b0792af05685e74da24f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onFrameSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onFrameSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5468" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5468" bodyend="5483"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ace540592c376244f59454c847945d64d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onInit</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onInit</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5234" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5234" bodyend="5249"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af9a40437c711d7c07a36a31a19830d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onInitSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onInitSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5252" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5252" bodyend="5267"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac2b6b96adbf6b69781e5174e8ec1f538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1574" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1574" bodyend="1593"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a56b84167f749f82f169e986ce5c97d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1identity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1identity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1461" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1461" bodyend="1470"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae1d2ed579c2aa8e4b8a19f836ce101ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1712" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1712" bodyend="1724"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a673f27c299f51cebcb2291d2048c70de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1698" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1698" bodyend="1709"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae79e214024414622ac73e057fd9e43e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1rigidInverse</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1rigidInverse</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1537" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1537" bodyend="1549"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9ea47e99d7b94956eff14ace8e0155aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1setRotation</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1setRotation</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1473" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1473" bodyend="1490"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5d5875f8352ae81cf8cb47327b592f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1times</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1times</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1552" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1552" bodyend="1571"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afd8d6796dc9d935f3bdb43e231991633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1596" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1596" bodyend="1608"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad79bf4d427a9da5a001dfed536e10548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1transformDirection</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1transformDirection</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1515" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1515" bodyend="1534"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a48e2ee4d28a03890ca50fb5c862d15c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1transformPoint</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1transformPoint</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1493" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1493" bodyend="1512"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab94018c2b176e0e83bbc49b2436e0843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1625" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1625" bodyend="1637"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a805f07981c0470dc4ec76474bc4ac18f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1611" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1611" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1ee053368d445ff97a05cc40f459467e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1654" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1654" bodyend="1666"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4418ca4dfe02b63ee2848325ed91bca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1640" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1640" bodyend="1651"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae6781d1d0e11604eb2aa9c203600416e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1683" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1683" bodyend="1695"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1ca4ca56c252c15d82d31b360d52ad1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1669" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1669" bodyend="1680"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2aa30be02a20e30af06958f609de749a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2915" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2915" bodyend="2924"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee7a9bd806cde5c818aaa22fe7c3b203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2927" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2927" bodyend="2943"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a283c01244eaaa7ad19a4b607814f0361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Config</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Config</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4712" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4712" bodyend="4721"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9dcbe7108ce17529e95b380065b79f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4990" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4990" bodyend="4999"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa4e450ab7de5da89970eda0e50fdcd34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5012" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5012" bodyend="5028"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab9904fe758126356be3d3cbef0504a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1973" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1973" bodyend="1982"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8fabd178b8a60b6bdc133eba6bd77312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1985" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1985" bodyend="2001"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4c566a42dd94e3cd643baa2edc56ef87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1FingerList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1FingerList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3769" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3769" bodyend="3778"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a30bdf87a38274e97809f188371ec942f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4275" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4275" bodyend="4284"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abd378c398b24c057e1bc11f434377640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2550" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2550" bodyend="2559"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a04b3beb6faec0da2afb490291aa3defd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2562" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2562" bodyend="2578"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a32a5834114e67b3351cd50d48ccb019a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1GestureList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1GestureList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4042" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4042" bodyend="4051"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aef9488c05d3ca372624a8ca37b80b6b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Hand</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Hand</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2109" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2109" bodyend="2118"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac0ee57d185450d53f6368518841b3aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1HandList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1HandList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3951" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3951" bodyend="3960"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0bf0c6cf4503ff7a033cb9dc5497ed95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3156" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3156" bodyend="3165"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0e491963b86be7cc87c81bb388a4eada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3168" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3168" bodyend="3184"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1d446eeaa38039df86912c7478c7ea9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Listener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Listener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5212" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5212" bodyend="5221"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afbea97998d9d0e4d9a2afa72dc38b904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1308" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1308" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac6129e3a0ba84d0c6681ce456e823354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1320" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1320" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a842f5635544b376b2ce88d8170f21788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_12</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_12</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1339" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1339" bodyend="1369"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9a3719835a41d0525642684fd3c1ddef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_13</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_13</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg4</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg4_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1372" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1372" bodyend="1409"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab248973b2bdf1447c1288b9913749f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_14</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_14</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1412" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1412" bodyend="1430"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a531de24971251292b143338568982643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_15</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_15</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1433" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1433" bodyend="1458"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a13cf652e4fcc32c7fee7306a120ad397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1737" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1737" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa3624dc60c3e2b3531b2f8e5146cc437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1PointableList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1PointableList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3634" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3634" bodyend="3643"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af45300444a8c3744bcd1d06442a26bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Screen</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Screen</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3257" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3257" bodyend="3266"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa7a6210d50cb3c1073a540f4b7c40f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1ScreenList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1ScreenList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4133" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4133" bodyend="4142"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aeae868fec56e127de5ea1a239fef5530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3043" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3043" bodyend="3052"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab485013e191c6f72ff8de21362b7217f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3055" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3055" bodyend="3071"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a19b7458491789f0d63f81dfa35116355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2787" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2787" bodyend="2796"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1c6498a95254a7b8722fd987a1bbadd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2799" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2799" bodyend="2815"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac84e28cdae6c522157d2258a0cd871f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2041" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2041" bodyend="2050"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7cb7a06b9e1b433fc3faf38bd879a985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2053" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2053" bodyend="2069"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa0acf45ffb6b8a5c6b0791d46f6b34b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1ToolList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1ToolList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3860" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3860" bodyend="3869"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1dfa73e856719273a556cfd5e89895e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="705" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="705" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a405bf07f3950f370dc13f4812d2883f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2, jfloat jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="717" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="717" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a584c5a3f3b8dbd2211af301ade4da7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_12</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_12</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="735" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="735" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a403ad92abe4592b0fb725dc6691f206c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1824" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1824" bodyend="1836"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af97fe05ef80b66b96b063642e3f1d0de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1926" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1926" bodyend="1945"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa60efc1b1f7a5b5fbeb9c44d52711d56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1764" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1764" bodyend="1776"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a02db44326380ef7870fe285489a05b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1hand</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1hand</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1779" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1779" bodyend="1791"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aac58aa14eb97075333c043ac76d88d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1749" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1749" bodyend="1761"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aaf9c53b8acaf214483736302cba82528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1914" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1914" bodyend="1923"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a39366b4f1652f432911fbb1b8508785b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1isFinger</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1isFinger</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1869" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1869" bodyend="1881"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acdee2ca3330e33bac59bc94dbe04f46c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1isTool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1isTool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1884" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1884" bodyend="1896"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7a6f419aa2eda2221bd09555d1cd3a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1899" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1899" bodyend="1911"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a44626e08087e538ade60f7043bc02e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1length</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1length</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1854" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1854" bodyend="1866"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a95b79aa592ae9ceba1ad8ab3774a897e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5506" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5506" bodyend="5512"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7906ecaa9e7c39d620bb51d7289798db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1tipPosition</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1tipPosition</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1794" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1794" bodyend="1806"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1a3538215497617e20edbf33316a7f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1tipVelocity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1tipVelocity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1809" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1809" bodyend="1821"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abf1eef4ca8d3c13a36f9d4070c2f717c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1948" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1948" bodyend="1960"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7eb16660aa56f94af276833c238b4f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1width</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1width</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1839" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1839" bodyend="1851"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a14944eb2b140dd778d6910a17fa2e6b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3693" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3693" bodyend="3712"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee4b7824717badbe6627a0c583d15736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3715" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3715" bodyend="3734"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5b7849033b1e397562532dd0b4a408c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_12</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_12</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3737" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3737" bodyend="3756"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a091c8f4f5b95e8f5a2ab8f5cd89511e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3646" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3646" bodyend="3658"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa31beed6d09ae8bf356f47c8c511b812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3661" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3661" bodyend="3673"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae836c36eb629e5b1f9c45c9f37826353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3676" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3676" bodyend="3690"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab6ac31db86b15a51b1b20cba731dbcd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5586" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5586" bodyend="5592"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aca5578fcf852cd067ae7ad09c612d701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1bottomLeftCorner</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1bottomLeftCorner</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3478" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3478" bodyend="3490"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af9a0ec6fd2fe8221c5032d3196655822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1distanceToPoint</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1distanceToPoint</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3538" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3538" bodyend="3557"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aade1efcb1f46a510102e2ff19cc94076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3587" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3587" bodyend="3606"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adaa5465f3e91d2ed4bf1c89a15b31660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1heightPixels</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1heightPixels</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3523" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3523" bodyend="3535"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a938995755866fa26f672585f9cf483bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1horizontalAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1horizontalAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3448" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3448" bodyend="3460"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a08dc4b35564c6c5f3e503f428b897896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3269" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3269" bodyend="3281"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2c47f2cdaba566a0ef436847dff015a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3, jfloat jarg4)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3284" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3284" bodyend="3307"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4dd6dd9bf261f6b5bcd94868679713cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3310" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3310" bodyend="3331"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5fb013840bd2137c0846bca9f12e4681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_12</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4, jfloat jarg5)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_12</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg4</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3334" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3334" bodyend="3364"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad623964374add43a3498c9d342508c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_13</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_13</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3367" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3367" bodyend="3395"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8fa07787af3630c53163400211e6a2bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3575" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3575" bodyend="3584"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aacb724ce65bec0e41bd2952878a2239f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3560" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3560" bodyend="3572"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af2e2aa0c6ae53f589d4e44b16113b49a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1normal</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1normal</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3493" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3493" bodyend="3505"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adacf9818ab4d8b1c0da06ea2877f89c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3, jfloat jarg4)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3398" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3398" bodyend="3421"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac2589541eaa61e11dbe6261effc2ecbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3424" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3424" bodyend="3445"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6e9266caeb93ece2e8b06c4eeed6e91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5578" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5578" bodyend="5584"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a312835b1d91942d5e80f099707758f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3609" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3609" bodyend="3621"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa38e04117e0cf3ea3ae28ee4faea643d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1verticalAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1verticalAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3463" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3463" bodyend="3475"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aaab26e7b78d3d1988a6986980ff9841e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1widthPixels</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1widthPixels</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3508" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3508" bodyend="3520"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a59eee9a3a26d9a990f28103ce1b9751d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreen</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreen</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4243" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4243" bodyend="4262"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a23fb86c6d0353ebfefe6bb6dbbc953ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4192" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4192" bodyend="4211"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a89bef68bbb018318886cb93685cc4b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4214" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4214" bodyend="4240"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5b8b6c52861e1c46198669aae8921d24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4145" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4145" bodyend="4157"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a18b89b5820f01ae96d23f65d681e841d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4160" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4160" bodyend="4172"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a01070ef2d0d8fa2d8ceeb5a16a82a04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4175" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4175" bodyend="4189"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab878c3382d4bf3188442e00ee02714f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5626" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5626" bodyend="5632"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ade3aa8ba19f3186353cb95abc968601d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1classType</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1classType</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3031" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3031" bodyend="3040"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a108b4244c6941ee3cd5450f6cbe03752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3089" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3089" bodyend="3101"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a396079bb3fd60b720a2ce9afaaafda18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3119" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3119" bodyend="3131"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7b7e30dab7aa15f74982e0713bff39e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1position</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1position</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3074" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3074" bodyend="3086"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2e3b70d0c38babfe8f5270f3363e3f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1progress</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1progress</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3104" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3104" bodyend="3116"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aac773839ca21f3e061e83df5147d0be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5562" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5562" bodyend="5568"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a59c4b6c837b9b406e173be48a051becf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_swig_1module_1init</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_swig_1module_1init</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5658" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5658" bodyend="5693"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acbba45c9026ac6f75dbc05d944f3bdf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1classType</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1classType</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2775" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2775" bodyend="2784"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aefacaa9e150bb1537aa26bdbd29fd064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2848" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2848" bodyend="2860"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ace84952c39003cc3e766b25c13658eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2878" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2878" bodyend="2890"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af00cea975b56a246b501db1b02255167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1position</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1position</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2833" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2833" bodyend="2845"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac0b4319903db890edf99bb7cd4d22ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1speed</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1speed</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2863" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2863" bodyend="2875"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a760a0a76ae9cf1bf79b8fa4cd439d314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1startPosition</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1startPosition</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2818" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2818" bodyend="2830"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acdb4a59373b49d2cee0ac4a83b758de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5546" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5546" bodyend="5552"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3a2e468984a1ea77e59bb10263c60030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Tool_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Tool_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2072" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2072" bodyend="2081"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a788df0889b60e0341866209f1673d655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Tool_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Tool_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5522" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5522" bodyend="5528"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2d50adb0bd2cf33a119c90245c12917c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Tool_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Tool_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2084" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2084" bodyend="2096"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aab746701f460487fd5d662d94491d122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1append</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1append</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3919" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3919" bodyend="3938"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a22cb90079f5222297db2ecb6b3102db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3872" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3872" bodyend="3884"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af3d9fc84f5f0b44312dc68ffe87c7672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3887" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3887" bodyend="3899"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a20c0f859fdc15adcf46be379c34fdbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3902" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3902" bodyend="3916"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a51005ae1744e7b72f2e1221698b0d0ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5602" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5602" bodyend="5608"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8e70468c7c41db4f5d4cc4c0c1fe35ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1angleTo</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1angleTo</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="926" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="926" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1f67fea99dad9e156ffdef8f5e1589ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1backward</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1backward</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="862" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="862" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2993b1a4459162373c562262f67d3f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1cross</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1cross</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1015" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1015" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5c0b00261fff6d73c904b7689db746be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1distanceTo</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1distanceTo</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="904" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="904" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7d6150b3b12a1fa597f85cc4f5adc2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1divide</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1divide</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1128" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1128" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a876919bd69eb397f991fcf7d8fdc419b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1dot</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1dot</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="993" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="993" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a894f80f06d3ebc6cbb04516270ffa711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1down</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1down</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="826" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="826" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae91dd2e71142d8e33f9e8231bdb0373d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1160" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1160" bodyend="1179"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a944dbe75d1f50d2191211bf7806bf49f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1forward</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1forward</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="850" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="850" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9954531e983ab64905344e8b680bddb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1197" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1197" bodyend="1211"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae75e360e972e4695555f1f48cccbb2c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1182" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1182" bodyend="1194"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9ed3fd5e998eb312f49d7ded2b1bce5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1left</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1left</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="802" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="802" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee2e75f08752609d094ceb860706510a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1magnitude</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1magnitude</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="874" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="874" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6c299c83ec1c059617b8b3162ed603e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1magnitudeSquared</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1magnitudeSquared</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="889" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="889" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a43a3fcd36feb7b69c21282f04383804e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1minus</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1minus</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1089" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1089" bodyend="1108"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a73c5e575b7011138e30569a838fd14b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1normalized</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1normalized</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1037" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1037" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af69bcfe5d94d82b7a8845f88e9fb089e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1opposite</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1opposite</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1052" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1052" bodyend="1064"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a02132491adfc3cc7ca46c1a14ae46c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1pitch</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1pitch</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="948" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="948" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af970a8647b8cb6c5573cbb1241e0cf3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1plus</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1plus</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1067" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1067" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aeb894fe1f312e614a88b06510ba757d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1right</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1right</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="814" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="814" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3d7cfebb3bd643365a5cd18510daf566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1roll</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1roll</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="978" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="978" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acebbde38bb18c8e00bad369439a0f60e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1times</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1times</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1111" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1111" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3b384a61c5cecb94809ffd80b623f31c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1145" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1145" bodyend="1157"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af15077ec2baa5312b6162b817bd8c6dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1up</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1up</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="838" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="838" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af6948da54d38080b70b7ae1631714512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1x_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1x_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1227" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1227" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ade047174a5851e09d4a1ada8307517c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1x_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1x_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1214" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1214" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a488ba2768d6d5f1fa883214a96143437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1xAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1xAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="766" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="766" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4e92b5fc66d884a2f7bfc89aebdc261f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1y_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1y_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1255" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1255" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a52c1930a54d1fa5b2d1c6e03c55cba49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1y_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1y_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1242" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1242" bodyend="1252"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a55631310b5eb017a4bfe4aaf3af13c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1yaw</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1yaw</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="963" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="963" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0d409b6050e658d1595553be3ea97a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1yAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1yAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="778" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="778" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac20a3f6073980ecbba5d7f608355bd61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1z_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1z_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1283" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1283" bodyend="1295"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9a1d4cdbb6e375d91e1b9c7f95eb063f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1z_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1z_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1270" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1270" bodyend="1280"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6a518c1b3a871949770ba75eab437c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1zAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1zAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="790" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="790" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af6b814e3e2faeeec7fc21b3ec1ec12b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1zero</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1zero</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="754" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="754" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a50835e3dfe68b1dee04cfb8d012a72e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SWIG_JavaThrowException</definition>
        <argsstring>(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg)</argsstring>
        <name>SWIG_JavaThrowException</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>SWIG_JavaExceptionCodes</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="231" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="231" bodyend="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>not<sp/>intended<sp/>to<sp/>be<sp/>easily<sp/>readable<sp/>and<sp/>contains<sp/>a<sp/>number<sp/>of<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>coding<sp/>conventions<sp/>designed<sp/>to<sp/>improve<sp/>portability<sp/>and<sp/>efficiency.<sp/>Do<sp/>not<sp/>make</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify<sp/>the<sp/>SWIG<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>interface<sp/>file<sp/>instead.<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>dynamically<sp/>loading<sp/>the<sp/>Leap<sp/>C#<sp/>DLL,<sp/>set<sp/>the<sp/>DLL<sp/>search<sp/>path<sp/>to<sp/>look<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>the<sp/>directory.<sp/>This<sp/>will<sp/>allow<sp/>loading<sp/>the<sp/>Leap.dll.<sp/>Create<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Leap<sp/>C#<sp/>DLL<sp/>with<sp/>the<sp/>/DELAYLOAD:Leap.dll<sp/>link<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>BOOL<sp/>WINAPI<sp/>DllMain(</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>_In_<sp/>HINSTANCE<sp/>hinstDLL,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>_In_<sp/>DWORD<sp/>fdwReason,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>_In_<sp/>LPVOID<sp/>lpvReserved)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpvReserved<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TCHAR<sp/>lpPrevPathName[1024];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>restore<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdwReason<sp/>==<sp/>DLL_PROCESS_ATTACH)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>lpPathName[1024];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>GetDllDirectory(static_cast&lt;DWORD&gt;(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lpPrevPathName)<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpPrevPathName);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>len<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lpPrevPathName))<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpPrevPathName[len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(GetModuleFileName(static_cast&lt;HMODULE&gt;(hinstDLL),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpPathName,<sp/>static_cast&lt;DWORD&gt;(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lpPathName))));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>len<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lpPathName))<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>len;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpPathName[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>||<sp/>lpPathName[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpPathName[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore<sp/>=<sp/>SetDllDirectory(lpPathName);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdwReason<sp/>==<sp/>DLL_PROCESS_DETACH)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(restore<sp/>&amp;&amp;<sp/>lpPrevPathName[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDllDirectory(lpPrevPathName);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGJAVA</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SWIG_DIRECTORS</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>SwigValueWrapper<sp/>is<sp/>described<sp/>in<sp/>swig.swg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SwigValueWrapper<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SwigMovePointer<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*ptr;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>SwigMovePointer(T<sp/>*p)<sp/>:<sp/>ptr(p)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>~SwigMovePointer()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ptr;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>SwigMovePointer&amp;<sp/>operator=(SwigMovePointer&amp;<sp/>rhs)<sp/>{<sp/>T*<sp/>oldptr<sp/>=<sp/>ptr;<sp/>ptr<sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>oldptr;<sp/>ptr<sp/>=<sp/>rhs.ptr;<sp/>rhs.ptr<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}<sp/>pointer;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>SwigValueWrapper&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SwigValueWrapper&lt;T&gt;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>SwigValueWrapper(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SwigValueWrapper&lt;T&gt;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>SwigValueWrapper()<sp/>:<sp/>pointer(0)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>SwigValueWrapper&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)<sp/>{<sp/>SwigMovePointer<sp/>tmp(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(t));<sp/>pointer<sp/>=<sp/>tmp;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>T&amp;()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pointer.ptr;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>T<sp/>*operator&amp;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer.ptr;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/>SwigValueInit()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>section<sp/>contains<sp/>generic<sp/>SWIG<sp/>labels<sp/>for<sp/>method/variable</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>declarations/attributes,<sp/>and<sp/>other<sp/>compiler<sp/>dependent<sp/>labels.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>template<sp/>workaround<sp/>for<sp/>compilers<sp/>that<sp/>cannot<sp/>correctly<sp/>implement<sp/>the<sp/>C++<sp/>standard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGTEMPLATEDISAMBIGUATOR</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__SUNPRO_CC)<sp/>&amp;&amp;<sp/>(__SUNPRO_CC<sp/>&lt;=<sp/>0x560)</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SWIGTEMPLATEDISAMBIGUATOR<sp/>template</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__HP_aCC)</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Needed<sp/>even<sp/>with<sp/>`aCC<sp/>-AA&apos;<sp/>when<sp/>`aCC<sp/>-V&apos;<sp/>reports<sp/>HP<sp/>ANSI<sp/>C++<sp/>B3910B<sp/>A.03.55<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>find<sp/>a<sp/>maximum<sp/>version<sp/>that<sp/>requires<sp/>this,<sp/>the<sp/>test<sp/>would<sp/>be<sp/>__HP_aCC<sp/>&lt;=<sp/>35500<sp/>for<sp/>A.03.55<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SWIGTEMPLATEDISAMBIGUATOR<sp/>template</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SWIGTEMPLATEDISAMBIGUATOR</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inline<sp/>attribute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGINLINE</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__cplusplus)<sp/>||<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__STRICT_ANSI__))</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGINLINE<sp/>inline</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGINLINE</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>attribute<sp/>recognised<sp/>by<sp/>some<sp/>compilers<sp/>to<sp/>avoid<sp/>&apos;unused&apos;<sp/>warnings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGUNUSED</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC__)</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>!(defined(__cplusplus))<sp/>||<sp/>(__GNUC__<sp/>&gt;<sp/>3<sp/>||<sp/>(__GNUC__<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>4))</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGUNUSED<sp/>__attribute__<sp/>((__unused__))<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGUNUSED</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__ICC)</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGUNUSED<sp/>__attribute__<sp/>((__unused__))<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGUNUSED<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_MSC_UNSUPPRESS_4505</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>pragma<sp/>warning(disable<sp/>:<sp/>4505)<sp/></highlight><highlight class="comment">/*<sp/>unreferenced<sp/>local<sp/>function<sp/>has<sp/>been<sp/>removed<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGUNUSEDPARM</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGUNUSEDPARM(p)</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGUNUSEDPARM(p)<sp/>p<sp/>SWIGUNUSED<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>internal<sp/>SWIG<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGINTERN</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SWIGINTERN<sp/>static<sp/>SWIGUNUSED</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>internal<sp/>inline<sp/>SWIG<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGINTERNINLINE</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SWIGINTERNINLINE<sp/>SWIGINTERN<sp/>SWIGINLINE</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>exporting<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>&gt;=<sp/>4)<sp/>||<sp/>(__GNUC__<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>4)</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>GCC_HASCLASSVISIBILITY</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>GCC_HASCLASSVISIBILITY</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGEXPORT</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__WIN32__)<sp/>||<sp/>defined(__CYGWIN__)</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(STATIC_LINKED)</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGEXPORT</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGEXPORT<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(GCC_HASCLASSVISIBILITY)</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGEXPORT<sp/>__attribute__<sp/>((visibility(&quot;default&quot;)))</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGEXPORT</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>calling<sp/>conventions<sp/>for<sp/>Windows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGSTDCALL</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__WIN32__)<sp/>||<sp/>defined(__CYGWIN__)</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGSTDCALL<sp/>__stdcall</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGSTDCALL</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deal<sp/>with<sp/>Microsoft&apos;s<sp/>attempt<sp/>at<sp/>deprecating<sp/>C<sp/>standard<sp/>runtime<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(_CRT_SECURE_NO_DEPRECATE)</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_CRT_SECURE_NO_DEPRECATE</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deal<sp/>with<sp/>Microsoft&apos;s<sp/>attempt<sp/>at<sp/>deprecating<sp/>methods<sp/>in<sp/>the<sp/>standard<sp/>C++<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(_SCL_SECURE_NO_DEPRECATE)</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_SCL_SECURE_NO_DEPRECATE</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Fix<sp/>for<sp/>jlong<sp/>on<sp/>some<sp/>versions<sp/>of<sp/>gcc<sp/>on<sp/>Windows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__INTEL_COMPILER)</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__int64;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Fix<sp/>for<sp/>jlong<sp/>on<sp/>64-bit<sp/>x86<sp/>Solaris<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__x86_64)</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>_LP64</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>undef<sp/>_LP64</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;jni.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Support<sp/>for<sp/>throwing<sp/>Java<sp/>exceptions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>SWIG_JavaOutOfMemoryError<sp/>=<sp/>1,<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>SWIG_JavaIOException,<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>SWIG_JavaRuntimeException,<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>SWIG_JavaIndexOutOfBoundsException,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>SWIG_JavaArithmeticException,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>SWIG_JavaIllegalArgumentException,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>SWIG_JavaNullPointerException,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>SWIG_JavaDirectorPureVirtual,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>SWIG_JavaUnknownError</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}<sp/>SWIG_JavaExceptionCodes;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>SWIG_JavaExceptionCodes<sp/>code;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*java_exception;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}<sp/>SWIG_JavaExceptions_t;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIGUNUSED<sp/>SWIG_JavaThrowException(JNIEnv<sp/>*jenv,<sp/>SWIG_JavaExceptionCodes<sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>jclass<sp/>excep;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SWIG_JavaExceptions_t<sp/>java_exceptions[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaOutOfMemoryError,<sp/></highlight><highlight class="stringliteral">&quot;java/lang/OutOfMemoryError&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaIOException,<sp/></highlight><highlight class="stringliteral">&quot;java/io/IOException&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaRuntimeException,<sp/></highlight><highlight class="stringliteral">&quot;java/lang/RuntimeException&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/></highlight><highlight class="stringliteral">&quot;java/lang/IndexOutOfBoundsException&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaArithmeticException,<sp/></highlight><highlight class="stringliteral">&quot;java/lang/ArithmeticException&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaIllegalArgumentException,<sp/></highlight><highlight class="stringliteral">&quot;java/lang/IllegalArgumentException&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;java/lang/NullPointerException&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaDirectorPureVirtual,<sp/></highlight><highlight class="stringliteral">&quot;java/lang/RuntimeException&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaUnknownError,<sp/><sp/></highlight><highlight class="stringliteral">&quot;java/lang/UnknownError&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(SWIG_JavaExceptionCodes)0,<sp/><sp/></highlight><highlight class="stringliteral">&quot;java/lang/UnknownError&quot;</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SWIG_JavaExceptions_t<sp/>*except_ptr<sp/>=<sp/>java_exceptions;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(except_ptr-&gt;code<sp/>!=<sp/>code<sp/>&amp;&amp;<sp/>except_ptr-&gt;code)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>except_ptr++;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>jenv-&gt;ExceptionClear();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>excep<sp/>=<sp/>jenv-&gt;FindClass(except_ptr-&gt;java_exception);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(excep)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;ThrowNew(excep,<sp/>msg);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Contract<sp/>support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_contract_assert(nullreturn,<sp/>expr,<sp/>msg)<sp/>if<sp/>(!(expr))<sp/>{SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIllegalArgumentException,<sp/>msg);<sp/>return<sp/>nullreturn;<sp/>}<sp/>else</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>director.swg</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>support<sp/>for<sp/>director<sp/>classes<sp/>that<sp/>proxy</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>method<sp/>calls<sp/>from<sp/>C++<sp/>to<sp/>Java<sp/>extensions.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Swig<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>object<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JObjectWrapper<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>JObjectWrapper()<sp/>:<sp/>jthis_(NULL),<sp/>weak_global_(true)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>~JObjectWrapper()<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jobj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mem_own,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>weak_global)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!jthis_)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/>weak_global;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jobj)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>((weak_global_<sp/>||<sp/>!mem_own)<sp/>?<sp/>jenv-&gt;NewWeakGlobalRef(jobj)<sp/>:<sp/>jenv-&gt;NewGlobalRef(jobj));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;JObjectWrapper::set(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jobj<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(weak_global<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;weak_global&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;global_ref&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jthis_<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;JObjectWrapper::set(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jobj<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(weak_global<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;weak_global&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;global_ref&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>-&gt;<sp/>already<sp/>set&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>jobject<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(JNIEnv<sp/>*jenv)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;JObjectWrapper::get(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jthis_)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>jthis_;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>-&gt;<sp/>return<sp/>new<sp/>local<sp/>ref&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(jthis_<sp/>?<sp/>jenv-&gt;NewLocalRef(jthis_)<sp/>:<sp/>jthis_);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>release(JNIEnv<sp/>*jenv)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;JObjectWrapper::release(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jthis_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(weak_global_<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;weak<sp/>global<sp/>ref&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;global<sp/>ref&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jthis_)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weak_global_)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;IsSameObject(jthis_,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;DeleteWeakGlobalRef((jweak)jthis_);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;DeleteGlobalRef(jthis_);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>jobject<sp/>peek()<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jthis_;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>proxy<sp/>releases<sp/>ownership<sp/>of<sp/>C++<sp/>object,<sp/>C++<sp/>object<sp/>is<sp/>now</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>responsible<sp/>for<sp/>destruction<sp/>(creates<sp/>NewGlobalRef<sp/>to<sp/>pin<sp/>Java</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxy)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>java_change_ownership(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jself,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>take_or_release)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(take_or_release)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>takes<sp/>ownership<sp/>of<sp/>C++<sp/>object&apos;s<sp/>lifetime.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!weak_global_)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;DeleteGlobalRef(jthis_);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>jenv-&gt;NewWeakGlobalRef(jself);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>releases<sp/>ownership<sp/>of<sp/>C++<sp/>object&apos;s<sp/>lifetime<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weak_global_)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;DeleteWeakGlobalRef((jweak)jthis_);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>jenv-&gt;NewGlobalRef(jself);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>Java<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>jobject<sp/>jthis_;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>or<sp/>global<sp/>reference<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>weak_global_;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>director<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Director<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>Java<sp/>virtual<sp/>machine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>JavaVM<sp/>*swig_jvm_;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(_MSC_VER)<sp/>&amp;&amp;<sp/>(_MSC_VER&lt;1300)</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JNIEnvWrapper;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JNIEnvWrapper;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Utility<sp/>class<sp/>for<sp/>managing<sp/>the<sp/>JNI<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JNIEnvWrapper<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Director<sp/>*director_;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>*jenv_;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>env_status;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnvWrapper(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Director<sp/>*director)<sp/>:<sp/>director_(director),<sp/>jenv_(0),<sp/>env_status(0)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__ANDROID__)</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>**jenv<sp/>=<sp/>&amp;jenv_;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**jenv<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;jenv_;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env_status<sp/>=<sp/>director_-&gt;swig_jvm_-&gt;GetEnv((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;jenv_,<sp/>JNI_VERSION_1_2);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SWIG_JAVA_ATTACH_CURRENT_THREAD_AS_DAEMON)</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attach<sp/>a<sp/>daemon<sp/>thread<sp/>to<sp/>the<sp/>JVM.<sp/>Useful<sp/>when<sp/>the<sp/>JVM<sp/>should<sp/>not<sp/>wait<sp/>for<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>thread<sp/>to<sp/>exit<sp/>upon<sp/>shutdown.<sp/>Only<sp/>for<sp/>jdk-1.4<sp/>and<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director_-&gt;swig_jvm_-&gt;AttachCurrentThreadAsDaemon(jenv,<sp/>NULL);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director_-&gt;swig_jvm_-&gt;AttachCurrentThread(jenv,<sp/>NULL);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~JNIEnvWrapper()<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(SWIG_JAVA_NO_DETACH_CURRENT_THREAD)</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>JVMs,<sp/>eg<sp/>jdk-1.4.2<sp/>and<sp/>lower<sp/>on<sp/>Solaris<sp/>have<sp/>a<sp/>bug<sp/>and<sp/>crash<sp/>with<sp/>the<sp/>DetachCurrentThread<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>without<sp/>this<sp/>call,<sp/>the<sp/>JVM<sp/>hangs<sp/>on<sp/>exit<sp/>when<sp/>the<sp/>thread<sp/>was<sp/>not<sp/>created<sp/>by<sp/>the<sp/>JVM<sp/>and<sp/>creates<sp/>a<sp/>memory<sp/>leak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_status<sp/>==<sp/>JNI_EDETACHED)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director_-&gt;swig_jvm_-&gt;DetachCurrentThread();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>*getJNIEnv()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jenv_;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>object<sp/>wrapper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>JObjectWrapper<sp/>swig_self_;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disconnect<sp/>director<sp/>from<sp/>Java<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swig_disconnect_director_self(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*disconn_method)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnvWrapper<sp/>jnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>*jenv<sp/>=<sp/>jnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jobject<sp/>jobj<sp/>=<sp/>swig_self_.peek();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Swig::Director::disconnect_director_self(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jobj<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(jobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jmethodID<sp/>disconn_meth<sp/>=<sp/>jenv-&gt;GetMethodID(jenv-&gt;GetObjectClass(jobj),<sp/>disconn_method,<sp/></highlight><highlight class="stringliteral">&quot;()V&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disconn_meth)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Swig::Director::disconnect_director_self<sp/>upcall<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>disconn_method<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;CallVoidMethod(jobj,<sp/>disconn_meth);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>Director(JNIEnv<sp/>*jenv)<sp/>:<sp/>swig_jvm_((JavaVM<sp/>*)<sp/>NULL),<sp/>swig_self_()<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Acquire<sp/>the<sp/>Java<sp/>VM<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;GetJavaVM(&amp;swig_jvm_);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~Director()<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnvWrapper<sp/>jnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>*jenv<sp/>=<sp/>jnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swig_self_.release(jenv);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swig_set_self(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jself,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mem_own,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>weak_global)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swig_self_.set(jenv,<sp/>jself,<sp/>mem_own,<sp/>weak_global);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>jobject<sp/>swig_get_self(JNIEnv<sp/>*jenv)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swig_self_.get(jenv);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>C++<sp/>object&apos;s<sp/>ownership,<sp/>relative<sp/>to<sp/>Java</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swig_java_change_ownership(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jself,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>take_or_release)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swig_self_.java_change_ownership(jenv,<sp/>jself,<sp/>take_or_release);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Swig<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>jclass<sp/>jclass_LeapJNI<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>jmethodID<sp/>director_methids[7];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>C99<sp/>official<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;Leap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*<sp/>C++<sp/>director<sp/>class<sp/>methods</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/>---------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Leap_wrap_java.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal">SwigDirector_Listener::SwigDirector_Listener(JNIEnv<sp/>*jenv)<sp/>:<sp/>Leap::Listener(),<sp/>Swig::Director(jenv)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">SwigDirector_Listener::~SwigDirector_Listener()<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>swig_disconnect_director_self(</highlight><highlight class="stringliteral">&quot;swigDirectorDisconnect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onInit(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[0])<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onInit(arg0);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[0],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>upcall<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onConnect(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[1])<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onConnect(arg0);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[1],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>upcall<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onDisconnect(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[2])<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onDisconnect(arg0);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[2],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>upcall<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onFocusGained(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[3])<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onFocusGained(arg0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[3],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>upcall<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onFocusLost(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[4])<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onFocusLost(arg0);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[4],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>upcall<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onExit(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[5])<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onExit(arg0);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[5],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>upcall<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onFrame(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[6])<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onFrame(arg0);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[6],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>upcall<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::swig_connect_director(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jself,<sp/>jclass<sp/>jcls,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swig_mem_own,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>weak_global)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mname;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mdesc;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>jmethodID<sp/>base_methid;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>}<sp/>methods[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onInit&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Controller;)V&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onConnect&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Controller;)V&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onDisconnect&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Controller;)V&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onFocusGained&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Controller;)V&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onFocusLost&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Controller;)V&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onExit&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Controller;)V&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onFrame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Controller;)V&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>jclass<sp/>baseclass<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swig_set_self(jenv,<sp/>jself,<sp/>swig_mem_own,<sp/>weak_global))<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!baseclass)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseclass<sp/>=<sp/>jenv-&gt;FindClass(</highlight><highlight class="stringliteral">&quot;com/leapmotion/leap/Listener&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!baseclass)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseclass<sp/>=<sp/>(jclass)<sp/>jenv-&gt;NewGlobalRef(baseclass);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>derived<sp/>=<sp/>(jenv-&gt;IsSameObject(baseclass,<sp/>jcls)<sp/>?<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>7;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!methods[i].base_methid)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>methods[i].base_methid<sp/>=<sp/>jenv-&gt;GetMethodID(baseclass,<sp/>methods[i].mname,<sp/>methods[i].mdesc);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!methods[i].base_methid)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swig_override[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(derived)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jmethodID<sp/>methid<sp/>=<sp/>jenv-&gt;GetMethodID(jcls,<sp/>methods[i].mname,<sp/>methods[i].mdesc);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swig_override[i]<sp/>=<sp/>(methid<sp/>!=<sp/>methods[i].base_methid);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;ExceptionClear();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="702"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="704"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jfloat<sp/>jarg1,<sp/>jfloat<sp/>jarg2,<sp/>jfloat<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg1<sp/>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>(float)jarg1;<sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>(float)jarg3;<sp/></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector(arg1,arg2,arg3);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_12(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1zero(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::zero();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1xAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::xAxis();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1yAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::yAxis();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1zAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::zAxis();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1left(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::left();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1right(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::right();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1down(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::down();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1up(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::up();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1forward(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::forward();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1backward(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::backward();</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1magnitude(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;magnitude();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1magnitudeSquared(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;magnitudeSquared();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1distanceTo(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;distanceTo((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1angleTo(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;angleTo((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1pitch(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pitch();</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1yaw(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;yaw();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1roll(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;roll();</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1dot(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;dot((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1cross(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;cross((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1normalized(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;normalized();</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1opposite(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>-();</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1plus(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>+((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1minus(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>-((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1times(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>*(arg2);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1divide(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>/(arg2);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>[](arg2);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1x_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;x<sp/>=<sp/>arg2;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1x_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)<sp/>((arg1)-&gt;x);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1y_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;y<sp/>=<sp/>arg2;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1y_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)<sp/>((arg1)-&gt;y);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1z_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;z<sp/>=<sp/>arg2;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1z_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)<sp/>((arg1)-&gt;z);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Vector(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix();</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Matrix<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_12(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_13(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_,<sp/>jlong<sp/>jarg4,<sp/>jobject<sp/>jarg4_)<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg4<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/>(void)jarg4_;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg4;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg4)<sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg4);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_14(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1,arg2);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_15(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1,arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1identity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>&amp;Leap::Matrix::identity();</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1setRotation(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jfloat<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>(float)jarg3;<sp/></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>(arg1)-&gt;setRotation((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1transformPoint(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;transformPoint((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1transformDirection(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;transformDirection((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1rigidInverse(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>result;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rigidInverse();</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Matrix<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1times(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>result;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Matrix<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>*((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Matrix<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Matrix<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;<sp/></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;xBasis<sp/>=<sp/>*arg2;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)&amp;<sp/>((arg1)-&gt;xBasis);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;<sp/></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;yBasis<sp/>=<sp/>*arg2;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)&amp;<sp/>((arg1)-&gt;yBasis);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;<sp/></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;zBasis<sp/>=<sp/>*arg2;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)&amp;<sp/>((arg1)-&gt;zBasis);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;<sp/></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;origin<sp/>=<sp/>*arg2;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)&amp;<sp/>((arg1)-&gt;origin);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Matrix(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Pointable<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable();</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame();</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1hand(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Hand<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;hand();</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Hand((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Hand<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1tipPosition(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tipPosition();</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1tipVelocity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tipVelocity();</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1width(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;width();</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1length(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;length();</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1isFinger(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isFinger();</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1isTool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isTool();</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>&amp;Leap::Pointable::invalid();</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Finger<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger();</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Finger<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Finger_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Finger<sp/>*)<sp/>&amp;Leap::Finger::invalid();</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Finger_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*arg1<sp/>=<sp/>(Leap::Finger<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Finger<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Finger<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Finger(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*arg1<sp/>=<sp/>(Leap::Finger<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Finger<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Tool<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool();</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Tool<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Tool_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Tool<sp/>*)<sp/>&amp;Leap::Tool::invalid();</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Tool_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*arg1<sp/>=<sp/>(Leap::Tool<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Tool<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Tool<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Tool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*arg1<sp/>=<sp/>(Leap::Tool<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Tool<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Hand(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Hand<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Hand();</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame();</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1pointables(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::PointableList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointables();</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::PointableList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::PointableList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable(arg2);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1fingers(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::FingerList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;fingers();</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>*(Leap::FingerList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::FingerList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::FingerList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1finger(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>result;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;finger(arg2);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Finger<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1tools(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::ToolList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tools();</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/>*(Leap::ToolList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ToolList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::ToolList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1tool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>result;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tool(arg2);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Tool<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1palmPosition(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;palmPosition();</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1palmVelocity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;palmVelocity();</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1palmNormal(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;palmNormal();</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1sphereCenter(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;sphereCenter();</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1sphereRadius(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;sphereRadius();</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1translation(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;translation((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAxis((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAngle((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAngle((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationMatrix(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>result;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationMatrix((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Matrix<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1scaleFactor(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;scaleFactor((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>&amp;Leap::Hand::invalid();</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Hand<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Hand(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Gesture();</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Gesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1type(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;type();</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1state(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/>Leap::Gesture::State<sp/>result;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::State)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;state();</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1duration(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/>int64_t<sp/>result;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int64_t)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;duration();</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1durationSeconds(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;durationSeconds();</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame();</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1hands(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::HandList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;hands();</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/>*(Leap::HandList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::HandList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::HandList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1pointables(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::PointableList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointables();</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::PointableList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::PointableList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>&amp;Leap::Gesture::invalid();</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Gesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="2772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1classType(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)Leap::SwipeGesture::classType();</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::SwipeGesture();</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/>*(Leap::SwipeGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::SwipeGesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/>*(Leap::SwipeGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1startPosition(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;startPosition();</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1position(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;position();</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1speed(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;speed();</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable();</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1SwipeGesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1classType(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)Leap::CircleGesture::classType();</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::CircleGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::CircleGesture();</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/>*(Leap::CircleGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::CircleGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::CircleGesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/>*(Leap::CircleGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1center(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;center();</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1normal(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;normal();</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1progress(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;progress();</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1radius(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;radius();</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable();</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1CircleGesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1classType(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)Leap::ScreenTapGesture::classType();</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ScreenTapGesture();</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ScreenTapGesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1position(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;position();</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"></highlight></codeline>
<codeline lineno="3104"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1progress(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::ScreenTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;progress();</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable();</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1ScreenTapGesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1classType(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)Leap::KeyTapGesture::classType();</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::KeyTapGesture();</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::KeyTapGesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1position(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::KeyTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;position();</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::KeyTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1progress(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::KeyTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;progress();</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::KeyTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable();</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1KeyTapGesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Screen(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Screen<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen();</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jboolean<sp/>jarg3,<sp/>jfloat<sp/>jarg4)<sp/>{</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg4<sp/>;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>(float)jarg4;<sp/></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;intersect((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3,arg4);</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jboolean<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;intersect((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3);</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_12(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_,<sp/>jboolean<sp/>jarg4,<sp/>jfloat<sp/>jarg5)<sp/>{</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg4<sp/>;</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg5<sp/>;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>jarg4<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/>arg5<sp/>=<sp/>(float)jarg5;<sp/></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;intersect((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3,arg4,arg5);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_13(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_,<sp/>jboolean<sp/>jarg4)<sp/>{</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg4<sp/>;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>jarg4<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;intersect((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3,arg4);</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jboolean<sp/>jarg3,<sp/>jfloat<sp/>jarg4)<sp/>{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg4<sp/>;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>(float)jarg4;<sp/></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;project((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3,arg4);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jboolean<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;project((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3);</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1horizontalAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;horizontalAxis();</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1verticalAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;verticalAxis();</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1bottomLeftCorner(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;bottomLeftCorner();</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal"></highlight></codeline>
<codeline lineno="3493"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1normal(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;normal();</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1widthPixels(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;widthPixels();</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1heightPixels(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;heightPixels();</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1distanceToPoint(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;distanceToPoint((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"></highlight></codeline>
<codeline lineno="3574"><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>&amp;Leap::Screen::invalid();</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Screen<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Screen(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1PointableList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::PointableList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::PointableList();</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"></highlight></codeline>
<codeline lineno="3646"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::PointableList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"></highlight></codeline>
<codeline lineno="3661"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::PointableList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::PointableList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::PointableList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::PointableList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::FingerList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_12(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::ToolList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1PointableList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1FingerList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::FingerList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::FingerList();</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/>*(Leap::FingerList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>result;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Finger<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1append(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::FingerList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>*(Leap::FingerList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1FingerList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1ToolList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ToolList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ToolList();</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/>*(Leap::ToolList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>result;</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Tool<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1append(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::ToolList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/>*(Leap::ToolList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"></highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1ToolList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"></highlight></codeline>
<codeline lineno="3951"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1HandList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::HandList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::HandList();</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/>*(Leap::HandList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::HandList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::HandList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Hand<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::HandList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Hand((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Hand<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"></highlight></codeline>
<codeline lineno="4010"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1append(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::HandList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::HandList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/>*(Leap::HandList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1HandList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1GestureList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::GestureList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::GestureList();</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/>*(Leap::GestureList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::GestureList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"></highlight></codeline>
<codeline lineno="4069"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::GestureList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Gesture<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::GestureList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Gesture((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Gesture<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"></highlight></codeline>
<codeline lineno="4100"><highlight class="normal"></highlight></codeline>
<codeline lineno="4101"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1append(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::GestureList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::GestureList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/>*(Leap::GestureList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1GestureList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"></highlight></codeline>
<codeline lineno="4133"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1ScreenList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ScreenList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ScreenList();</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/>*(Leap::ScreenList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"></highlight></codeline>
<codeline lineno="4145"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"></highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Screen<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Screen<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"></highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Screen<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;closestScreenHit((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Screen<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Screen<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;closestScreenHit((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Screen<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreen(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Screen<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;closestScreen((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Screen<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1ScreenList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Frame<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame();</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/>int64_t<sp/>result;</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int64_t)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1timestamp(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/>int64_t<sp/>result;</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int64_t)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;timestamp();</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"></highlight></codeline>
<codeline lineno="4317"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1hands(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::HandList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;hands();</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/>*(Leap::HandList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::HandList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::HandList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"></highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1hand(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Hand<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;hand(arg2);</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Hand((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Hand<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"></highlight></codeline>
<codeline lineno="4348"><highlight class="normal"></highlight></codeline>
<codeline lineno="4349"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1pointables(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::PointableList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointables();</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::PointableList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::PointableList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable(arg2);</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1fingers(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::FingerList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;fingers();</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/>*(Leap::FingerList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::FingerList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::FingerList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"></highlight></codeline>
<codeline lineno="4396"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1finger(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>result;</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;finger(arg2);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Finger<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"></highlight></codeline>
<codeline lineno="4413"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1tools(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::ToolList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tools();</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/>*(Leap::ToolList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ToolList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::ToolList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"></highlight></codeline>
<codeline lineno="4427"><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1tool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>result;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tool(arg2);</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Tool<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1gesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Gesture<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;gesture(arg2);</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Gesture((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Gesture<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"></highlight></codeline>
<codeline lineno="4461"><highlight class="normal"></highlight></codeline>
<codeline lineno="4462"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::GestureList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;gestures();</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/>*(Leap::GestureList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::GestureList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::GestureList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::GestureList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;gestures((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/>*(Leap::GestureList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::GestureList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::GestureList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"></highlight></codeline>
<codeline lineno="4498"><highlight class="normal"></highlight></codeline>
<codeline lineno="4499"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1translation(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;translation((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"></highlight></codeline>
<codeline lineno="4520"><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAxis((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"></highlight></codeline>
<codeline lineno="4542"><highlight class="normal"></highlight></codeline>
<codeline lineno="4543"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAngle((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"></highlight></codeline>
<codeline lineno="4565"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAngle((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"></highlight></codeline>
<codeline lineno="4594"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationMatrix(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>result;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationMatrix((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Matrix<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"></highlight></codeline>
<codeline lineno="4615"><highlight class="normal"></highlight></codeline>
<codeline lineno="4616"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1scaleFactor(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;scaleFactor((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"></highlight></codeline>
<codeline lineno="4637"><highlight class="normal"></highlight></codeline>
<codeline lineno="4638"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"></highlight></codeline>
<codeline lineno="4652"><highlight class="normal"></highlight></codeline>
<codeline lineno="4653"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>&amp;Leap::Frame::invalid();</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"></highlight></codeline>
<codeline lineno="4687"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"></highlight></codeline>
<codeline lineno="4701"><highlight class="normal"></highlight></codeline>
<codeline lineno="4702"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Config(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Config<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Config();</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/>*(Leap::Config<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"></highlight></codeline>
<codeline lineno="4723"><highlight class="normal"></highlight></codeline>
<codeline lineno="4724"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1type(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/>Leap::Config::ValueType<sp/>result;</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Config::ValueType)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;type((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"></highlight></codeline>
<codeline lineno="4748"><highlight class="normal"></highlight></codeline>
<codeline lineno="4749"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getBool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getBool((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"></highlight></codeline>
<codeline lineno="4773"><highlight class="normal"></highlight></codeline>
<codeline lineno="4774"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1setBool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2,<sp/>jboolean<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)(arg1)-&gt;setBool((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3);</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"></highlight></codeline>
<codeline lineno="4800"><highlight class="normal"></highlight></codeline>
<codeline lineno="4801"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getInt32(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getInt32((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"></highlight></codeline>
<codeline lineno="4825"><highlight class="normal"></highlight></codeline>
<codeline lineno="4826"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1setInt32(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2,<sp/>jint<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>(int32_t)jarg3;<sp/></highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)(arg1)-&gt;setInt32((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3);</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"></highlight></codeline>
<codeline lineno="4853"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getFloat(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getFloat((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"></highlight></codeline>
<codeline lineno="4877"><highlight class="normal"></highlight></codeline>
<codeline lineno="4878"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1setFloat(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2,<sp/>jfloat<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>(float)jarg3;<sp/></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)(arg1)-&gt;setFloat((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3);</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"></highlight></codeline>
<codeline lineno="4904"><highlight class="normal"></highlight></codeline>
<codeline lineno="4905"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getString((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"></highlight></codeline>
<codeline lineno="4929"><highlight class="normal"></highlight></codeline>
<codeline lineno="4930"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1setString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2,<sp/>jstring<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg3)<sp/>{</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>std::string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg3_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg3,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/>std::string<sp/>arg3_str(arg3_pstr);</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>&amp;arg3_str;</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg3,<sp/>arg3_pstr);<sp/></highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)(arg1)-&gt;setString((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"></highlight></codeline>
<codeline lineno="4964"><highlight class="normal"></highlight></codeline>
<codeline lineno="4965"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1save(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)(arg1)-&gt;save();</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Config(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"></highlight></codeline>
<codeline lineno="4989"><highlight class="normal"></highlight></codeline>
<codeline lineno="4990"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Controller<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Controller();</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"></highlight></codeline>
<codeline lineno="5001"><highlight class="normal"></highlight></codeline>
<codeline lineno="5002"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Controller(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="5009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"></highlight></codeline>
<codeline lineno="5012"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Listener<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Controller<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Controller(*arg1);</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"></highlight></codeline>
<codeline lineno="5030"><highlight class="normal"></highlight></codeline>
<codeline lineno="5031"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1isConnected(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isConnected();</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"></highlight></codeline>
<codeline lineno="5046"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1hasFocus(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;hasFocus();</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"></highlight></codeline>
<codeline lineno="5060"><highlight class="normal"></highlight></codeline>
<codeline lineno="5061"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1addListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Listener<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)(arg1)-&gt;addListener(*arg2);</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"></highlight></codeline>
<codeline lineno="5082"><highlight class="normal"></highlight></codeline>
<codeline lineno="5083"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1removeListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Listener<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)(arg1)-&gt;removeListener(*arg2);</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"></highlight></codeline>
<codeline lineno="5104"><highlight class="normal"></highlight></codeline>
<codeline lineno="5105"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame(arg2);</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"></highlight></codeline>
<codeline lineno="5121"><highlight class="normal"></highlight></codeline>
<codeline lineno="5122"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame();</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"></highlight></codeline>
<codeline lineno="5136"><highlight class="normal"></highlight></codeline>
<codeline lineno="5137"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1config(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Config<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;config();</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/>*(Leap::Config<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Config((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Config<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"></highlight></codeline>
<codeline lineno="5151"><highlight class="normal"></highlight></codeline>
<codeline lineno="5152"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1calibratedScreens(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::ScreenList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;calibratedScreens();</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/>*(Leap::ScreenList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ScreenList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::ScreenList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"></highlight></codeline>
<codeline lineno="5166"><highlight class="normal"></highlight></codeline>
<codeline lineno="5167"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2,<sp/>jboolean<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(Leap::Gesture::Type)jarg2;<sp/></highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;enableGesture(arg2,arg3);</highlight></codeline>
<codeline lineno="5179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"></highlight></codeline>
<codeline lineno="5181"><highlight class="normal"></highlight></codeline>
<codeline lineno="5182"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(Leap::Gesture::Type)jarg2;<sp/></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;enableGesture(arg2);</highlight></codeline>
<codeline lineno="5192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"></highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1isGestureEnabled(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(Leap::Gesture::Type)jarg2;<sp/></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isGestureEnabled(arg2);</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"></highlight></codeline>
<codeline lineno="5211"><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Listener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Listener<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SwigDirector_Listener(jenv);</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/>*(Leap::Listener<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"></highlight></codeline>
<codeline lineno="5223"><highlight class="normal"></highlight></codeline>
<codeline lineno="5224"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Listener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="5231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"></highlight></codeline>
<codeline lineno="5233"><highlight class="normal"></highlight></codeline>
<codeline lineno="5234"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onInit(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onInit((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"></highlight></codeline>
<codeline lineno="5251"><highlight class="normal"></highlight></codeline>
<codeline lineno="5252"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onInitSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onInit((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"></highlight></codeline>
<codeline lineno="5269"><highlight class="normal"></highlight></codeline>
<codeline lineno="5270"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onConnect(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onConnect((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"></highlight></codeline>
<codeline lineno="5287"><highlight class="normal"></highlight></codeline>
<codeline lineno="5288"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onConnectSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onConnect((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"></highlight></codeline>
<codeline lineno="5305"><highlight class="normal"></highlight></codeline>
<codeline lineno="5306"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnect(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onDisconnect((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"></highlight></codeline>
<codeline lineno="5323"><highlight class="normal"></highlight></codeline>
<codeline lineno="5324"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnectSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onDisconnect((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"></highlight></codeline>
<codeline lineno="5341"><highlight class="normal"></highlight></codeline>
<codeline lineno="5342"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusGained(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onFocusGained((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"></highlight></codeline>
<codeline lineno="5359"><highlight class="normal"></highlight></codeline>
<codeline lineno="5360"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusGainedSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onFocusGained((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"></highlight></codeline>
<codeline lineno="5377"><highlight class="normal"></highlight></codeline>
<codeline lineno="5378"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusLost(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onFocusLost((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"></highlight></codeline>
<codeline lineno="5395"><highlight class="normal"></highlight></codeline>
<codeline lineno="5396"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onFocusLostSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onFocusLost((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"></highlight></codeline>
<codeline lineno="5413"><highlight class="normal"></highlight></codeline>
<codeline lineno="5414"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onExit(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onExit((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"></highlight></codeline>
<codeline lineno="5431"><highlight class="normal"></highlight></codeline>
<codeline lineno="5432"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onExitSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onExit((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"></highlight></codeline>
<codeline lineno="5449"><highlight class="normal"></highlight></codeline>
<codeline lineno="5450"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onFrame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onFrame((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"></highlight></codeline>
<codeline lineno="5467"><highlight class="normal"></highlight></codeline>
<codeline lineno="5468"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onFrameSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">&quot;Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onFrame((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"></highlight></codeline>
<codeline lineno="5485"><highlight class="normal"></highlight></codeline>
<codeline lineno="5486"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1director_1connect(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jobject<sp/>jself,<sp/>jlong<sp/>objarg,<sp/>jboolean<sp/>jswig_mem_own,<sp/>jboolean<sp/>jweak_global)<sp/>{</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*obj<sp/>=<sp/>*((Leap::Listener<sp/>**)&amp;objarg);</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/>SwigDirector_Listener<sp/>*director<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">SwigDirector_Listener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(director)<sp/>{</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/>director-&gt;swig_connect_director(jenv,<sp/>jself,<sp/>jenv-&gt;GetObjectClass(jself),<sp/>(jswig_mem_own<sp/>==<sp/>JNI_TRUE),<sp/>(jweak_global<sp/>==<sp/>JNI_TRUE));</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"></highlight></codeline>
<codeline lineno="5495"><highlight class="normal"></highlight></codeline>
<codeline lineno="5496"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1change_1ownership(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jobject<sp/>jself,<sp/>jlong<sp/>objarg,<sp/>jboolean<sp/>jtake_or_release)<sp/>{</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*obj<sp/>=<sp/>*((Leap::Listener<sp/>**)&amp;objarg);</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/>SwigDirector_Listener<sp/>*director<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">SwigDirector_Listener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(director)<sp/>{</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/>director-&gt;swig_java_change_ownership(jenv,<sp/>jself,<sp/>jtake_or_release<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"></highlight></codeline>
<codeline lineno="5506"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Finger_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Finger<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"></highlight></codeline>
<codeline lineno="5522"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Tool_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Tool<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"></highlight></codeline>
<codeline lineno="5530"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"></highlight></codeline>
<codeline lineno="5538"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"></highlight></codeline>
<codeline lineno="5546"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"></highlight></codeline>
<codeline lineno="5554"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"></highlight></codeline>
<codeline lineno="5562"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"></highlight></codeline>
<codeline lineno="5570"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"></highlight></codeline>
<codeline lineno="5578"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"></highlight></codeline>
<codeline lineno="5586"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"></highlight></codeline>
<codeline lineno="5594"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"></highlight></codeline>
<codeline lineno="5602"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"></highlight></codeline>
<codeline lineno="5610"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"></highlight></codeline>
<codeline lineno="5618"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"></highlight></codeline>
<codeline lineno="5626"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"></highlight></codeline>
<codeline lineno="5634"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"></highlight></codeline>
<codeline lineno="5642"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"></highlight></codeline>
<codeline lineno="5650"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="5656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"></highlight></codeline>
<codeline lineno="5658"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_swig_1module_1init(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*method;</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signature;</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/>}<sp/>methods[7]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SwigDirector_Listener_onInit&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Listener;J)V&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SwigDirector_Listener_onConnect&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Listener;J)V&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SwigDirector_Listener_onDisconnect&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Listener;J)V&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SwigDirector_Listener_onFocusGained&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Listener;J)V&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SwigDirector_Listener_onFocusLost&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Listener;J)V&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SwigDirector_Listener_onExit&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Listener;J)V&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SwigDirector_Listener_onFrame&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;(Lcom/leapmotion/leap/Listener;J)V&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/>Swig::jclass_LeapJNI<sp/>=<sp/>(jclass)<sp/>jenv-&gt;NewGlobalRef(jcls);</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Swig::jclass_LeapJNI)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(methods)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(methods[0]));<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/>Swig::director_methids[i]<sp/>=<sp/>jenv-&gt;GetStaticMethodID(jcls,<sp/>methods[i].method,<sp/>methods[i].signature);</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Swig::director_methids[i])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"></highlight></codeline>
<codeline lineno="5695"><highlight class="normal"></highlight></codeline>
<codeline lineno="5696"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="5697"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5699"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp"/>
  </compounddef>
</doxygen>
