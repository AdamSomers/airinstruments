<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_controller_8java" kind="file">
    <compoundname>Controller.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_controller" prot="public">com::leapmotion::leap::Controller</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="53" refid="classcom_1_1leapmotion_1_1leap_1_1_controller" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a615807b6ff5b7d7b4323096988fba8bf" kindref="member" tooltip="Constructs a Controller object.">Controller</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Controller_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap Motion Controller.">Controller</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Controller(swigCPtr);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a615807b6ff5b7d7b4323096988fba8bf" kindref="member" tooltip="Constructs a Controller object.">Controller</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Controller__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a615807b6ff5b7d7b4323096988fba8bf" kindref="member" tooltip="Constructs a Controller object.">Controller</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>listener)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Controller__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.getCPtr(listener),<sp/>listener),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a80a13bc6fc939b6b40791b03bd314ed3" kindref="member" tooltip="Reports whether this Controller is connected to the Leap device.">isConnected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Controller_isConnected(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a2eb2f7b29f1fedaa3e7b68f9bbff9287" kindref="member" tooltip="Reports whether this application is the focused, foreground application.">hasFocus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Controller_hasFocus(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad19466e5c1fd3c1e9ea894a33d643695" kindref="member" tooltip="Adds a listener to this Controller.">addListener</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>listener)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Controller_addListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.getCPtr(listener),<sp/>listener);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a33ae2103e110125fdb2eb6054b33ef7b" kindref="member" tooltip="Remove a listener from the list of listeners that will receive Leap events.">removeListener</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>listener)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Controller_removeListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.getCPtr(listener),<sp/>listener);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member" tooltip="Returns a frame of tracking data from the Leap.">frame</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>history)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>(LeapJNI.Controller_frame__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>history),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member" tooltip="Returns a frame of tracking data from the Leap.">frame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>(LeapJNI.Controller_frame__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound" tooltip="The Config class provides access to Leap system configuration information.">Config</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a7f1782f297d729edbda9df347e5ad220" kindref="member" tooltip="Returns a Config object, which you can use to query the Leap system for configuration information...">config</ref>()<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound" tooltip="The Config class provides access to Leap system configuration information.">Config</ref>(LeapJNI.Controller_config(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound" tooltip="The ScreenList class represents a list of Screen objects.">ScreenList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a566d7f4f612e29d1ec443ffcc4fdaa0b" kindref="member" tooltip="The list of screens whose positions have been identified by using the Leap application Screen Locator...">calibratedScreens</ref>()<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound" tooltip="The ScreenList class represents a list of Screen objects.">ScreenList</ref>(LeapJNI.Controller_calibratedScreens(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad49179bb7ada9753e50d63d640b7e2b6" kindref="member" tooltip="Enables or disables reporting of a specified gesture type.">enableGesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/>type,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Controller_enableGesture__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>type.swigValue(),<sp/>enable);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad49179bb7ada9753e50d63d640b7e2b6" kindref="member" tooltip="Enables or disables reporting of a specified gesture type.">enableGesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Controller_enableGesture__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>type.swigValue());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad445c8142735bdaef98685d1391865c3" kindref="member" tooltip="Reports whether the specified gesture type is enabled.">isGestureEnabled</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Controller_isGestureEnabled(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>type.swigValue());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java"/>
  </compounddef>
</doxygen>
