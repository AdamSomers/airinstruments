<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="classcom_1_1leapmotion_1_1leap_1_1_listener" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Listener</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a2e5759c1e4cac52df5069e0ede671518" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Listener.swigCPtr</definition>
        <argsstring></argsstring>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1acd9b4c3e2eca32372b3ec2053060ab11" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Listener.swigCMemOwn</definition>
        <argsstring></argsstring>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="26" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a080011667b8f715d60f3c77d84fe6996" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="37" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a6bcbd74164a7f501cda05fca2e25b2ce" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>com.leapmotion.leap.Listener.Listener</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Listener</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1af47f445444ec5eb2acb54c6492e1a338" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.swigDirectorDisconnect</definition>
        <argsstring>()</argsstring>
        <name>swigDirectorDisconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="51" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="51" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a1b701dcae0621671ae02a7bf82ce4f92" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Listener.getCPtr</definition>
        <argsstring>(Listener obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="33" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a687eefc3e1173aed394bdd7da34bc860" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Listener.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="41" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1ae7f2e02d1f441c8f9c0868168106c84b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>com.leapmotion.leap.Listener.Listener</definition>
        <argsstring>()</argsstring>
        <name>Listener</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="68" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a46b9ec2670695d44d4e9ddf77c8301c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onConnect</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onConnect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object connects to the Leap software, or when this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> object is added to a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> that is already connected. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting></programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="94" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a860bf64a24bcb4ac5bce4e8d35c48783" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onDisconnect</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onDisconnect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object disconnects from the Leap software. </para>        </briefdescription>
        <detaileddescription>
<para>The controller can disconnect when the Leap device is unplugged, the user shuts the Leap software down, or the Leap software encounters an unrecoverable error.</para><para><programlisting></programlisting></para><para>Note: When you launch a Leap-enabled application in a debugger, the Leap library does not disconnect from the application. This is to allow you to step through code without losing the connection because of time outs.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="113" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a78fa3b1a0850e3d8410b7200f3d813af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onExit</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onExit</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> object is removed from the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> or the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> instance is destroyed. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting></programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="158" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a583f06440d8676fcc808a1acbd6680cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onFocusGained</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onFocusGained</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when this application becomes the foreground application. </para>        </briefdescription>
        <detaileddescription>
<para>Only the foreground application receives tracking data from the Leap Motion <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref>. This function is only called when the controller object is in a connected state.</para><para><programlisting></programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="129" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a312bfdfa2ed0f85d357006eb492b4cee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onFocusLost</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onFocusLost</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when this application loses the foreground focus. </para>        </briefdescription>
        <detaileddescription>
<para>Only the foreground application receives tracking data from the Leap Motion <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref>. This function is only called when the controller object is in a connected state.</para><para><programlisting></programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="145" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1afb0bdc73f5b4edf164a4b1134557f975" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onFrame</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onFrame</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when a new frame of hand and finger tracking data is available. </para>        </briefdescription>
        <detaileddescription>
<para>Access the new frame data using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">Controller::frame()</ref> function.</para><para><programlisting></programlisting></para><para>Note, the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> skips any pending onFrame events while your onFrame handler executes. If your implementation takes too long to return, one or more frames can be skipped. The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> still inserts the skipped frames into the frame history. You can access recent frames by setting the history parameter when calling the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">Controller::frame()</ref> function. You can determine if any pending onFrame events were skipped by comparing the ID of the most recent frame with the ID of the last received frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="179" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a9350b36122e690e20078ba284701bed0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onInit</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onInit</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called once, when this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> object is newly added to a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting></programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="81" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1ac6fdcd80b9f4724041a4735a9c87d689" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.swigReleaseOwnership</definition>
        <argsstring>()</argsstring>
        <name>swigReleaseOwnership</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="56" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a8189543607557012e98654bd5642d6f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.swigTakeOwnership</definition>
        <argsstring>()</argsstring>
        <name>swigTakeOwnership</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="61" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="61" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> class defines a set of callback functions that you can override in a subclass to respond to events dispatched by the Leap. </para>    </briefdescription>
    <detaileddescription>
<para>To handle Leap events, create an instance of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> subclass and assign it to the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> instance. The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> calls the relevant <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> callback function when an event occurs, passing in a reference to itself. You do not have to implement callbacks for events you do not want to handle.</para><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object calls these <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> functions from a thread created by the Leap library, not the thread used to create or set the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> instance. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="24" bodyend="183"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a687eefc3e1173aed394bdd7da34bc860" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a080011667b8f715d60f3c77d84fe6996" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a1b701dcae0621671ae02a7bf82ce4f92" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a6bcbd74164a7f501cda05fca2e25b2ce" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>Listener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1ae7f2e02d1f441c8f9c0868168106c84b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>Listener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a46b9ec2670695d44d4e9ddf77c8301c3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onConnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a860bf64a24bcb4ac5bce4e8d35c48783" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onDisconnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a78fa3b1a0850e3d8410b7200f3d813af" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onExit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a583f06440d8676fcc808a1acbd6680cd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onFocusGained</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a312bfdfa2ed0f85d357006eb492b4cee" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onFocusLost</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1afb0bdc73f5b4edf164a4b1134557f975" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onFrame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a9350b36122e690e20078ba284701bed0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onInit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1acd9b4c3e2eca32372b3ec2053060ab11" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a2e5759c1e4cac52df5069e0ede671518" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1af47f445444ec5eb2acb54c6492e1a338" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigDirectorDisconnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1ac6fdcd80b9f4724041a4735a9c87d689" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigReleaseOwnership</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a8189543607557012e98654bd5642d6f8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigTakeOwnership</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
