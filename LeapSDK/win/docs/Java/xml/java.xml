<?xml version="1.0" standalone="yes"?>
<doxygen version="1.8.2"><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::BoolArray</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a6193c5677f2e068b9b5be919795df9ce" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.BoolArray.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="12" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1af43ad2f50b88472237fe63f309756045" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.BoolArray.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="13" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a9c8da85fa8039e3299501b653f36a8ab" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.BoolArray.BoolArray</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>BoolArray</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="15" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1ad5b9868e5124cc1743a964647b80d543" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.BoolArray.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="24" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a348eb551f2649c13b6d4e1817ae468ea" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.BoolArray.getCPtr</definition>
        <argsstring>(BoolArray obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type>BoolArray</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="20" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a0f75eb6f1aafb966cd71dd83efe7d753" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.BoolArray.add</definition>
        <argsstring>(boolean x)</argsstring>
        <name>add</name>
        <param>
          <type>boolean</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="66" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1ad514eb9f7a0c44106a8c9ccb4ed66ccc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.BoolArray.BoolArray</definition>
        <argsstring>()</argsstring>
        <name>BoolArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a1e5ab921227ed9f38c09bf12367e9dd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.BoolArray.BoolArray</definition>
        <argsstring>(long n)</argsstring>
        <name>BoolArray</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="42" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1ac955329836353f57a475b2b9d035b3f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.BoolArray.capacity</definition>
        <argsstring>()</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="50" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a33185c2f2f1cf1d78361797315514d4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.BoolArray.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="62" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a516b15aeec3e4b4dccab65f6e1926637" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.BoolArray.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a3d06aa8aa930527461dd4f3ab0af76e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.BoolArray.get</definition>
        <argsstring>(int i)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a0e63d09479aaa9710a2faec08caa1be8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.BoolArray.isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="58" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a5aab2293a2ecf6f60081fc6147f322a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.BoolArray.reserve</definition>
        <argsstring>(long n)</argsstring>
        <name>reserve</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="54" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a75e8cdb5d120daba894b5f79c7325012" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.BoolArray.set</definition>
        <argsstring>(int i, boolean val)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a53d5972bc93fc02e85fe972326cd8998" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.BoolArray.size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="46" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="11" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" bodystart="11" bodyend="78"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a0f75eb6f1aafb966cd71dd83efe7d753" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a9c8da85fa8039e3299501b653f36a8ab" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>BoolArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1ad514eb9f7a0c44106a8c9ccb4ed66ccc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>BoolArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a1e5ab921227ed9f38c09bf12367e9dd0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>BoolArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1ac955329836353f57a475b2b9d035b3f3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a33185c2f2f1cf1d78361797315514d4f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a516b15aeec3e4b4dccab65f6e1926637" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1ad5b9868e5124cc1743a964647b80d543" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a3d06aa8aa930527461dd4f3ab0af76e0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a348eb551f2649c13b6d4e1817ae468ea" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a0e63d09479aaa9710a2faec08caa1be8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a5aab2293a2ecf6f60081fc6147f322a7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a75e8cdb5d120daba894b5f79c7325012" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a53d5972bc93fc02e85fe972326cd8998" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1af43ad2f50b88472237fe63f309756045" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array_1a6193c5677f2e068b9b5be919795df9ce" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::BoolArray</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::CircleGesture</compoundname>
    <basecompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" prot="public" virt="non-virtual">com.leapmotion.leap.Gesture</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1aaa65505fd80c5dfaa4687997aba409be" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.CircleGesture.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="34" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a523ea42e1ac2bb3bc752a7f07cb2977c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.CircleGesture.CircleGesture</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>CircleGesture</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="36" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a60e8a51edb796190615fd75253ddd26d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.CircleGesture.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="45" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="45" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1aec3527dbb32d1f2e03c227028741a2b6" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.CircleGesture.getCPtr</definition>
        <argsstring>(CircleGesture obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="41" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="41" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a83c3b2eb0729375f3dc1ef532d35f1ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.CircleGesture.center</definition>
        <argsstring>()</argsstring>
        <name>center</name>
        <briefdescription>
<para>The center point of the circle within the Leap frame of reference. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> The center of the circle in mm from the Leap origin. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="98" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1af03263629b924c674d5d486a3082d45c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.CircleGesture.CircleGesture</definition>
        <argsstring>()</argsstring>
        <name>CircleGesture</name>
        <briefdescription>
<para>Constructs a new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>An uninitialized <ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref> object is considered invalid. Get valid instances of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref> class from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="77" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a07a445ec7e283df5fa6f2a28512dcb47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.CircleGesture.CircleGesture</definition>
        <argsstring>(Gesture rhs)</argsstring>
        <name>CircleGesture</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref> object from an instance of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance to specialize. This <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance must be a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="88" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1ab5f17d4f1d5a0cf57fba4ec95d901b45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.CircleGesture.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="49" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1ae1ce3748c0f520f0beabc2f97448141c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.CircleGesture.normal</definition>
        <argsstring>()</argsstring>
        <name>normal</name>
        <briefdescription>
<para>Returns the normal vector for the circle being traced. </para>        </briefdescription>
        <detaileddescription>
<para>If you draw the circle clockwise, the normal vector points in the same general direction as the pointable object drawing the circle. If you draw the circle counterclockwise, the normal points back toward the pointable. If the angle between the normal and the pointable object drawing the circle is less than 90 degrees, then the circle is clockwise.</para><para>std::string clockwiseness; if (circle.pointable().direction().angleTo(circle.normal()) &lt;= PI/4) { clockwiseness = "clockwise"; } else { clockwiseness = "counterclockwise"; }</para><para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> the normal vector for the circle being traced </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="123" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a1e145a98d76932ca3d8cc5ade9cfd35d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>Pointable com.leapmotion.leap.CircleGesture.pointable</definition>
        <argsstring>()</argsstring>
        <name>pointable</name>
        <briefdescription>
<para>The finger performing the circle gesture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object representing the circling finger. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="163" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a2f5ba747ab2f04fe5e9d3163b1ca3186" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.CircleGesture.progress</definition>
        <argsstring>()</argsstring>
        <name>progress</name>
        <briefdescription>
<para>The number of times the finger tip has traversed the circle. </para>        </briefdescription>
        <detaileddescription>
<para>Progress is reported as a positive number of the number. For example, a progress value of .5 indicates that the finger has gone halfway around, while a value of 3 indicates that the finger has gone around the the circle three times.</para><para>Progress starts where the circle gesture began. Since it the circle must be partially formed before the Leap can recognize it, progress will be greater than zero when a circle gesture first appears in the frame.</para><para><simplesect kind="return"><para>float A positive number indicating the gesture progress. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="143" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a4847a085466bb5a10a7a68516ef6c748" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.CircleGesture.radius</definition>
        <argsstring>()</argsstring>
        <name>radius</name>
        <briefdescription>
<para>The radius of the circle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The circle radius in mm. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="153" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="153" bodyend="155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1ab756335888069ab496e292e7ad95a732" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Gesture.Type</type>
        <definition>static Gesture.Type com.leapmotion.leap.CircleGesture.classType</definition>
        <argsstring>()</argsstring>
        <name>classType</name>
        <briefdescription>
<para>The circle gesture type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Type The type value designating a circle gesture. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="66" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="66" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref> classes represents a circular finger movement. </para>    </briefdescription>
    <detaileddescription>
<para>A circle movement is recognized when the tip of a finger draws a circle within the Leap field of view.</para><para><image type="html" name="Leap_Gesture_Circle.png"/>
</para><para><bold>Important:</bold> To use circle gestures in your application, you must enable recognition of the circle gesture. You can enable recognition with:</para><para>Controller::enableGesture(Gesture::TYPE_CIRCLE);</para><para>Circle gestures are continuous. The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref> objects for the gesture have three possible states:</para><para><itemizedlist>
<listitem><para><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a08a0b226a98401b97c02976216496665" kindref="member">State::STATE_START</ref> <ndash/> The circle gesture has just started. The movement has progressed far enough for the recognizer to classify it as a circle.</para></listitem><listitem><para><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a832ff106172999d7e3fffcad7a0e7528" kindref="member">State::STATE_UPDATE</ref> <ndash/> The circle gesture is continuing.</para></listitem><listitem><para><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1af2e2b06f6734aa0f62194068b0abbdfc" kindref="member">State::STATE_STOP</ref> <ndash/> The circle gesture is finished. </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
      </node>
      <node id="2">
        <label>com.leapmotion.leap.CircleGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
      </node>
      <node id="4">
        <label>com.leapmotion.leap.CircleGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java" bodystart="33" bodyend="167"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a83c3b2eb0729375f3dc1ef532d35f1ba" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>center</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a523ea42e1ac2bb3bc752a7f07cb2977c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>CircleGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1af03263629b924c674d5d486a3082d45c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>CircleGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a07a445ec7e283df5fa6f2a28512dcb47" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>CircleGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1ab756335888069ab496e292e7ad95a732" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>classType</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1ab5f17d4f1d5a0cf57fba4ec95d901b45" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a762ca0339845c9fd8f56eb9c50a9d939" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>duration</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ade91b8b357a0b65559f0b6e92259611a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>durationSeconds</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a9d1e2879db9699c3376ecad4ac6b5326" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a60e8a51edb796190615fd75253ddd26d" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1acd58fdacb406067210d346766317c73d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a2c538af15c0678e7913cf4c1fa9b15" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a16d3c85153f2c90a77ba8c5c74c055b8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1aec3527dbb32d1f2e03c227028741a2b6" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1aacff5dba75bff58ece36726127ffd4d8" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Gesture."><scope>com::leapmotion::leap::CircleGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::CircleGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a774b6b0a846bc908140a9695446ec398" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>hands</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ad3e6aa7ddce5cf3079bcc6259f7d7412" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a5bf5a6582c95367b8a46ac0a220da5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a1fbc97e34f25c3e1bb2f6ffecc57c563" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1ae1ce3748c0f520f0beabc2f97448141c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>normal</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a1e145a98d76932ca3d8cc5ade9cfd35d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a43e5763a3e347a066aabd5cac4e0f899" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a2f5ba747ab2f04fe5e9d3163b1ca3186" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>progress</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a4847a085466bb5a10a7a68516ef6c748" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>radius</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a13f39cae216c5f285c526936a6b0af67" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>state</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1aaa65505fd80c5dfaa4687997aba409be" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a6e5c086a26fa919648e307887cdefcf2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a7420937c98ea7646f083e5c0a469fe3d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::CircleGesture</scope><name>type</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_config" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Config</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
    <innerclass refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" prot="public">com::leapmotion::leap::Config::ValueType</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_config_1ae416e55278cb201a88fabfa4823dd22d" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Config.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="19" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a2381b3a2b3d2a6ed01398279c70fecec" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Config.Config</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Config</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="21" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a0447a7e630c9d7c13324ae5cf343a36d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Config.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="30" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="30" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a00e48860ad0b8fc6f8e848dd16e39cea" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Config.getCPtr</definition>
        <argsstring>(Config obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="26" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="26" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a27f0fe3690e0de400698fa6266d7d5e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Config.Config</definition>
        <argsstring>()</argsstring>
        <name>Config</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="47" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a36f2686236f09b12a13b779c9a623016" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Config.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="34" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a50f4e307e234b2387b64f416732e1e07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Config.getBool</definition>
        <argsstring>(String key)</argsstring>
        <name>getBool</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the boolean representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a07ff11e86a2233250f46d49d394ec91b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BoolArray</type>
        <definition>BoolArray com.leapmotion.leap.Config.getBoolArray</definition>
        <argsstring>(String key)</argsstring>
        <name>getBoolArray</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the boolean array representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="122" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1acc353081411ad88366a3f696fcefa679" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double com.leapmotion.leap.Config.getDouble</definition>
        <argsstring>(String key)</argsstring>
        <name>getDouble</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the double precision representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="110" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1afedf98b202dafa25fdec7e6e61c87d48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DoubleArray</type>
        <definition>DoubleArray com.leapmotion.leap.Config.getDoubleArray</definition>
        <argsstring>(String key)</argsstring>
        <name>getDoubleArray</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the double precision array representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="146" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a49ffe2193e8afe570121f7ba67b1e897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Config.getFloat</definition>
        <argsstring>(String key)</argsstring>
        <name>getFloat</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the floating point representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="104" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1abe55dd23a26d8d963e27e9908558b9c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FloatArray</type>
        <definition>FloatArray com.leapmotion.leap.Config.getFloatArray</definition>
        <argsstring>(String key)</argsstring>
        <name>getFloatArray</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the floating point array representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="140" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a2edc24df6e3cf0d5393f4a2329b759ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.Config.getInt32</definition>
        <argsstring>(String key)</argsstring>
        <name>getInt32</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the 32-bit integer representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="80" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a7601d1a3f6eff618deb0d3886bcd813f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Int32Array</type>
        <definition>Int32Array com.leapmotion.leap.Config.getInt32Array</definition>
        <argsstring>(String key)</argsstring>
        <name>getInt32Array</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the 32-bit integer array representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="128" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1af1299d7c3b26cd66e2bc170be586cb42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.Config.getInt64</definition>
        <argsstring>(String key)</argsstring>
        <name>getInt64</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the 64-bit integer representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="86" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1ac7b16ec05befb0eeb35a8f9361ffbbc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Config.getString</definition>
        <argsstring>(String key)</argsstring>
        <name>getString</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the string representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="116" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a58371033ba5132537b45a2c959d1f2ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StringArray</type>
        <definition>StringArray com.leapmotion.leap.Config.getStringArray</definition>
        <argsstring>(String key)</argsstring>
        <name>getStringArray</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the string array representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="152" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a9dce281c9de4b4b6f4debfcdcb904374" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.Config.getUInt32</definition>
        <argsstring>(String key)</argsstring>
        <name>getUInt32</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the unsigned 32-bit integer representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="92" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1aa0524c5946e1f4a5651753f133348cd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32Array</type>
        <definition>UInt32Array com.leapmotion.leap.Config.getUInt32Array</definition>
        <argsstring>(String key)</argsstring>
        <name>getUInt32Array</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the unsigned 32-bit integer array representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="134" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a527d6ccd07eafa27a03483065038d0fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>java.math.BigInteger</type>
        <definition>java.math.BigInteger com.leapmotion.leap.Config.getUInt64</definition>
        <argsstring>(String key)</argsstring>
        <name>getUInt64</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the unsigned 64-bit integer representation for the specified key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="98" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1abfd2fdac052a84fc2bb987878cc68ede" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Config.isArray</definition>
        <argsstring>(String key)</argsstring>
        <name>isArray</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Reports whether the value is an array of homogeneous objects. </para>        </briefdescription>
        <detaileddescription>
<para>The type of the objects in the array is returned using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a045db7e824cfbb29b3ac81abcbda7159" kindref="member">Config::type()</ref> function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="68" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_config_1a045db7e824cfbb29b3ac81abcbda7159" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Config.ValueType</type>
        <definition>Config.ValueType com.leapmotion.leap.Config.type</definition>
        <argsstring>(String key)</argsstring>
        <name>type</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Reports the natural data type for the value related to the specified key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key for the looking up the value in the configuration dictionary. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The native data type of the value, that is, the type that does not require a data conversion. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="59" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="59" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref> class provides access to Leap system configuration information. </para>    </briefdescription>
    <detaileddescription>
<para>Reserved for future use; the keys necessary to obtain configuration values are not yet documented. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="18" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="18" bodyend="230"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a2381b3a2b3d2a6ed01398279c70fecec" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>Config</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a27f0fe3690e0de400698fa6266d7d5e0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>Config</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a36f2686236f09b12a13b779c9a623016" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a0447a7e630c9d7c13324ae5cf343a36d" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a50f4e307e234b2387b64f416732e1e07" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getBool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a07ff11e86a2233250f46d49d394ec91b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getBoolArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a00e48860ad0b8fc6f8e848dd16e39cea" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Config</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1acc353081411ad88366a3f696fcefa679" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getDouble</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1afedf98b202dafa25fdec7e6e61c87d48" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getDoubleArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a49ffe2193e8afe570121f7ba67b1e897" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getFloat</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1abe55dd23a26d8d963e27e9908558b9c0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getFloatArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a2edc24df6e3cf0d5393f4a2329b759ad" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getInt32</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a7601d1a3f6eff618deb0d3886bcd813f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getInt32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1af1299d7c3b26cd66e2bc170be586cb42" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getInt64</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1ac7b16ec05befb0eeb35a8f9361ffbbc7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a58371033ba5132537b45a2c959d1f2ad" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getStringArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a9dce281c9de4b4b6f4debfcdcb904374" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getUInt32</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1aa0524c5946e1f4a5651753f133348cd2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getUInt32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a527d6ccd07eafa27a03483065038d0fe" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>getUInt64</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1abfd2fdac052a84fc2bb987878cc68ede" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>isArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1ae416e55278cb201a88fabfa4823dd22d" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a045db7e824cfbb29b3ac81abcbda7159" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config</scope><name>type</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_controller" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Controller</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1aa1af06cd220f36177fde378bd0bd7ab8" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Controller.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="53" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad30d1294f92f61ae576a35e21ef51aa0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Controller.Controller</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Controller</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="55" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a4b77531c68a947c4ac7e99d20706b482" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Controller.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="64" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="64" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a6510fbbf87490b33127cf9356a4d80ba" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Controller.getCPtr</definition>
        <argsstring>(Controller obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="60" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="60" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad19466e5c1fd3c1e9ea894a33d643695" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Controller.addListener</definition>
        <argsstring>(Listener listener)</argsstring>
        <name>addListener</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Adds a listener to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> dispatches Leap events to each associated listener. The order in which listener callback functions are invoked is arbitrary. If you pass a listener to the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref>'s constructor function, it is automatically added to the list and can be removed with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a33ae2103e110125fdb2eb6054b33ef7b" kindref="member">Controller::removeListener()</ref> function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>A subclass of Leap::Listener implementing the callback functions for the Leap events you want to handle in your application. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the listener was successfully added to the list of listeners. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="140" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a566d7f4f612e29d1ec443ffcc4fdaa0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref></type>
        <definition>ScreenList com.leapmotion.leap.Controller.calibratedScreens</definition>
        <argsstring>()</argsstring>
        <name>calibratedScreens</name>
        <briefdescription>
<para>The list of screens whose positions have been identified by using the Leap application <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> Locator. </para>        </briefdescription>
        <detaileddescription>
<para>The list always contains at least one entry representing the default screen. If the user has not registered the location of this default screen, then the coordinates, directions, and other values reported by the functions in its <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object will not be accurate. Other monitor screens only appear in the list if their positions have been registered using the Leap <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> Locator.</para><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object represents the position and orientation of a display monitor screen within the Leap coordinate system. For example, if the screen location is known, you can get Leap coordinates for the bottom-left corner of the screen. Registering the screen location also allows the Leap to calculate the point on the screen at which a finger or tool is pointing.</para><para>A user can run the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> Locator tool from the Leap application Settings window. Avoid assuming that a screen location is known or that an existing position is still correct. The registered position is only valid as long as the relative position of the Leap device and the monitor screen remain constant.</para><para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref> A list containing the screens whose positions have been registered by the user using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> Locator tool. The list always contains at least one entry representing the default monitor. If the user has not run the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> Locator or has moved the Leap device or screen since running it, the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object for this entry only contains default values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="235" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a7f1782f297d729edbda9df347e5ad220" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
        <definition>Config com.leapmotion.leap.Controller.config</definition>
        <argsstring>()</argsstring>
        <name>config</name>
        <briefdescription>
<para>Returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref> object, which you can use to query the Leap system for configuration information. </para>        </briefdescription>
        <detaileddescription>
<para>Reserved for future use. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="199" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a615807b6ff5b7d7b4323096988fba8bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Controller.Controller</definition>
        <argsstring>()</argsstring>
        <name>Controller</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>When creating a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object, you may optionally pass in a reference to an instance of a subclass of Leap::Listener. Alternatively, you may add a listener using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad19466e5c1fd3c1e9ea894a33d643695" kindref="member">Controller::addListener()</ref> function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="87" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1aba118706333695d21b853c0ded607b2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Controller.Controller</definition>
        <argsstring>(Listener listener)</argsstring>
        <name>Controller</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>When creating a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object, you may optionally pass in a reference to an instance of a subclass of Leap::Listener. Alternatively, you may add a listener using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad19466e5c1fd3c1e9ea894a33d643695" kindref="member">Controller::addListener()</ref> function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of Leap::Listener implementing the callback functions for the Leap events you want to handle in your application. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="102" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a37c93891be49b06aa9af80622c41b681" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Controller.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="68" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="68" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad49179bb7ada9753e50d63d640b7e2b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Controller.enableGesture</definition>
        <argsstring>(Gesture.Type type, boolean enable)</argsstring>
        <name>enableGesture</name>
        <param>
          <type>Gesture.Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables or disables reporting of a specified gesture type. </para>        </briefdescription>
        <detaileddescription>
<para>By default, all gesture types are disabled. When disabled, gestures of the disabled type are never reported and will not appear in the frame gesture list.</para><para>As a performance optimization, only enable recognition for the types of movements that you use in your application.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of gesture to enable or disable. Must be a member of the <ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound">Gesture::Type</ref> enumeration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True, to enable the specified gesture type; False, to disable. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad445c8142735bdaef98685d1391865c3" kindref="member">Controller::isGestureEnabled()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="256" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a4efb4a5c95d733c4949746e569eb38fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Controller.enableGesture</definition>
        <argsstring>(Gesture.Type type)</argsstring>
        <name>enableGesture</name>
        <param>
          <type>Gesture.Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Enables or disables reporting of a specified gesture type. </para>        </briefdescription>
        <detaileddescription>
<para>By default, all gesture types are disabled. When disabled, gestures of the disabled type are never reported and will not appear in the frame gesture list.</para><para>As a performance optimization, only enable recognition for the types of movements that you use in your application.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of gesture to enable or disable. Must be a member of the <ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound">Gesture::Type</ref> enumeration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True, to enable the specified gesture type; False, to disable. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad445c8142735bdaef98685d1391865c3" kindref="member">Controller::isGestureEnabled()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="277" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="277" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a2c4cbec7ffa3d187a41c136279e145df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
        <definition>Frame com.leapmotion.leap.Controller.frame</definition>
        <argsstring>(int history)</argsstring>
        <name>frame</name>
        <param>
          <type>int</type>
          <declname>history</declname>
        </param>
        <briefdescription>
<para>Returns a frame of tracking data from the Leap. </para>        </briefdescription>
        <detaileddescription>
<para>Use the optional history parameter to specify which frame to retrieve. Call <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">frame()</ref> or frame(0) to access the most recent frame; call frame(1) to access the previous frame, and so on. If you use a history value greater than the number of stored frames, then the controller returns an invalid frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>history</parametername>
</parameternamelist>
<parameterdescription>
<para>The age of the frame to return, counting backwards from the most recent frame (0) into the past and up to the maximum age (59). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified frame; or, if no history parameter is specified, the newest frame. If a frame is not available at the specified history position, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="172" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
        <definition>Frame com.leapmotion.leap.Controller.frame</definition>
        <argsstring>()</argsstring>
        <name>frame</name>
        <briefdescription>
<para>Returns a frame of tracking data from the Leap. </para>        </briefdescription>
        <detaileddescription>
<para>Use the optional history parameter to specify which frame to retrieve. Call <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">frame()</ref> or frame(0) to access the most recent frame; call frame(1) to access the previous frame, and so on. If you use a history value greater than the number of stored frames, then the controller returns an invalid frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>history</parametername>
</parameternamelist>
<parameterdescription>
<para>The age of the frame to return, counting backwards from the most recent frame (0) into the past and up to the maximum age (59). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified frame; or, if no history parameter is specified, the newest frame. If a frame is not available at the specified history position, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="190" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a80a13bc6fc939b6b40791b03bd314ed3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Controller.isConnected</definition>
        <argsstring>()</argsstring>
        <name>isConnected</name>
        <briefdescription>
<para>Reports whether this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> is connected to the Leap device. </para>        </briefdescription>
        <detaileddescription>
<para>When you first create a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object, <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a80a13bc6fc939b6b40791b03bd314ed3" kindref="member">isConnected()</ref> returns false. After the controller finishes initializing and connects to the Leap, <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a80a13bc6fc939b6b40791b03bd314ed3" kindref="member">isConnected()</ref> will return true.</para><para>You can either handle the onConnect event using a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> instance or poll the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a80a13bc6fc939b6b40791b03bd314ed3" kindref="member">isConnected()</ref> function if you need to wait for your application to be connected to the Leap before performing some other operation.</para><para><simplesect kind="return"><para>True, if connected; false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="121" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad445c8142735bdaef98685d1391865c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Controller.isGestureEnabled</definition>
        <argsstring>(Gesture.Type type)</argsstring>
        <name>isGestureEnabled</name>
        <param>
          <type>Gesture.Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Reports whether the specified gesture type is enabled. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True, if the specified type is enabled; false, otherwise. </para></simplesect>
<simplesect kind="see"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad49179bb7ada9753e50d63d640b7e2b6" kindref="member">Controller::enableGesture()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="288" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_controller_1a33ae2103e110125fdb2eb6054b33ef7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Controller.removeListener</definition>
        <argsstring>(Listener listener)</argsstring>
        <name>removeListener</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Remove a listener from the list of listeners that will receive Leap events. </para>        </briefdescription>
        <detaileddescription>
<para>A listener must be removed if its lifetime is shorter than the controller to which it is listening.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the listener was successfully removed from the list of listeners. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="154" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="154" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> class is your main interface to the Leap device. </para>    </briefdescription>
    <detaileddescription>
<para>Create an instance of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> class to access frames of tracking data and configuration information. <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> data can be polled at any time using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">Controller::frame()</ref> function. Call <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">frame()</ref> or frame(0) to get the most recent frame. Set the history parameter to a positive integer to access previous frames. A controller stores up to 60 frames in its frame history.</para><para>Polling is an appropriate strategy for applications which already have an intrinsic update loop, such as a game. You can also add an instance of a subclass of Leap::Listener to the controller to handle events as they occur. The Leap dispatches events to the listener upon initialization and exiting, on connection changes, and when a new frame of tracking data is available. When these events occur, the controller object invokes the appropriate callback function defined in your subclass of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref>.</para><para>To access frames of tracking data as they become available: #. Implement a subclass of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> class and override the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1afb0bdc73f5b4edf164a4b1134557f975" kindref="member">Listener::onFrame()</ref> function. #. In your <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1afb0bdc73f5b4edf164a4b1134557f975" kindref="member">Listener::onFrame()</ref> function, call the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">Controller::frame()</ref> function to access the newest frame of tracking data. #. To start receiving frames, create a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object and add an instance of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> subclass to the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad19466e5c1fd3c1e9ea894a33d643695" kindref="member">Controller::addListener()</ref> function.</para><para>When an instance of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> subclass is added to a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object, it calls the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a9350b36122e690e20078ba284701bed0" kindref="member">Listener::onInit()</ref> function when the listener is ready for use. When a connection is established between the controller and the Leap, the controller calls the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a46b9ec2670695d44d4e9ddf77c8301c3" kindref="member">Listener::onConnect()</ref> function. At this point, your application will start receiving frames of data. The controller calls the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1afb0bdc73f5b4edf164a4b1134557f975" kindref="member">Listener::onFrame()</ref> function each time a new frame is available. If the controller loses its connection with the Leap software or device for any reason, it calls the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a860bf64a24bcb4ac5bce4e8d35c48783" kindref="member">Listener::onDisconnect()</ref> function. If the listener is removed from the controller or the controller is destroyed, it calls the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a78fa3b1a0850e3d8410b7200f3d813af" kindref="member">Listener::onExit()</ref> function. At that point, unless the listener is added to another controller again, it will no longer receive frames of tracking data.</para><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object is multithreaded and calls the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> functions on its own thread, not on an application thread. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" line="52" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java" bodystart="52" bodyend="292"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad19466e5c1fd3c1e9ea894a33d643695" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>addListener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a566d7f4f612e29d1ec443ffcc4fdaa0b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>calibratedScreens</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a7f1782f297d729edbda9df347e5ad220" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>config</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad30d1294f92f61ae576a35e21ef51aa0" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>Controller</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a615807b6ff5b7d7b4323096988fba8bf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>Controller</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1aba118706333695d21b853c0ded607b2b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>Controller</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a37c93891be49b06aa9af80622c41b681" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad49179bb7ada9753e50d63d640b7e2b6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>enableGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a4efb4a5c95d733c4949746e569eb38fa" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>enableGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a4b77531c68a947c4ac7e99d20706b482" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a2c4cbec7ffa3d187a41c136279e145df" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a6510fbbf87490b33127cf9356a4d80ba" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Controller</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a80a13bc6fc939b6b40791b03bd314ed3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>isConnected</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad445c8142735bdaef98685d1391865c3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>isGestureEnabled</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a33ae2103e110125fdb2eb6054b33ef7b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>removeListener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1aa1af06cd220f36177fde378bd0bd7ab8" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Controller</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_double_array" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::DoubleArray</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ab80ed02007d1a4fcf03262d7909d04b6" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.DoubleArray.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="12" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ad519b6fcb55b44f9e6c09ddc983dc386" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.DoubleArray.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="13" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a3ade225f184e6a105e3b59ebb741db67" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.DoubleArray.DoubleArray</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>DoubleArray</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="15" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a287d7478ca8466dff1eb3c541160fa75" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.DoubleArray.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="24" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a403e0cce1b1fe7fcaf8aea2270b19cfd" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.DoubleArray.getCPtr</definition>
        <argsstring>(DoubleArray obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type>DoubleArray</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="20" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ac02aac004fb09e72ead6eb18d52a8488" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.DoubleArray.add</definition>
        <argsstring>(double x)</argsstring>
        <name>add</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="66" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ad52463464c43822a5b5163348954e12b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.DoubleArray.capacity</definition>
        <argsstring>()</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="50" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a0eb90974fa15a8f5c141077256a342bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.DoubleArray.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="62" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a3fa722d79ee2d91e9cfdfc447928f6e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.DoubleArray.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a8b3fe73680d9010595a8f8691f7c7d8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.DoubleArray.DoubleArray</definition>
        <argsstring>()</argsstring>
        <name>DoubleArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1aaa80f6ff69f0929d0780e525cb8727ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.DoubleArray.DoubleArray</definition>
        <argsstring>(long n)</argsstring>
        <name>DoubleArray</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="42" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a9db9f2e151f3b9076479163e9dbb4059" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double com.leapmotion.leap.DoubleArray.get</definition>
        <argsstring>(int i)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1afabb9a81b58ce140da1401c38dfdc0ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.DoubleArray.isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="58" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a2f1b9226557391c50efac18efdb0577f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.DoubleArray.reserve</definition>
        <argsstring>(long n)</argsstring>
        <name>reserve</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="54" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ad2546658c3676e4f46e8e98d9524dffa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.DoubleArray.set</definition>
        <argsstring>(int i, double val)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a4576fe64f05b126db2a4a0fef4fb56e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.DoubleArray.size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="46" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" line="11" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java" bodystart="11" bodyend="78"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ac02aac004fb09e72ead6eb18d52a8488" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ad52463464c43822a5b5163348954e12b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a0eb90974fa15a8f5c141077256a342bf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a3fa722d79ee2d91e9cfdfc447928f6e5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a3ade225f184e6a105e3b59ebb741db67" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>DoubleArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a8b3fe73680d9010595a8f8691f7c7d8f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>DoubleArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1aaa80f6ff69f0929d0780e525cb8727ed" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>DoubleArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a287d7478ca8466dff1eb3c541160fa75" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a9db9f2e151f3b9076479163e9dbb4059" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a403e0cce1b1fe7fcaf8aea2270b19cfd" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1afabb9a81b58ce140da1401c38dfdc0ea" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a2f1b9226557391c50efac18efdb0577f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ad2546658c3676e4f46e8e98d9524dffa" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1a4576fe64f05b126db2a4a0fef4fb56e6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ad519b6fcb55b44f9e6c09ddc983dc386" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_double_array_1ab80ed02007d1a4fcf03262d7909d04b6" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::DoubleArray</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_finger" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Finger</compoundname>
    <basecompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" prot="public" virt="non-virtual">com.leapmotion.leap.Pointable</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_finger_1a0d3e5f0b413b5c449d6b7ff08550bfaa" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Finger.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="26" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_1a8c0874acdba4e60263c74216b20b7972" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Finger.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="37" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_1a741eebc420620d30dd85f6b10e784c3f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Finger.Finger</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Finger</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="28" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_1ab59cc2c8ab4e31cc8ecd9f99485e5ff2" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Finger.getCPtr</definition>
        <argsstring>(Finger obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="33" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_1abd92dbfc4c93c89a619622b2c67ca9d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Finger.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="41" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="41" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_1aaed2941cf3c49c6fd56a6d012007889e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Finger.Finger</definition>
        <argsstring>()</argsstring>
        <name>Finger</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>An uninitialized finger is considered invalid. Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> or a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="59" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_1a5b64c1364ab62e5bd4912ded243553bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Finger.Finger</definition>
        <argsstring>(Pointable arg0)</argsstring>
        <name>Finger</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>If the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object represents a finger, creates a copy of it as a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object; otherwise, creates an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="68" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_1ac70aef945e2bd5788f386b3acaa2063c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Finger.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>A string containing a brief, human readable description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object as a string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="92" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="92" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_1ad7757644ee6f23a55b37f343d81498da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>static Finger com.leapmotion.leap.Finger.invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
<para>Returns an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>You can use the instance returned by this function in comparisons testing whether a given <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> instance is valid or invalid. (You can also use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" kindref="member">Finger::isValid()</ref> function.)</para><para><simplesect kind="return"><para>The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="82" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="82" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> class represents a tracked finger. </para>    </briefdescription>
    <detaileddescription>
<para>Fingers are <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects that the Leap has classified as a finger. Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> or a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object.</para><para>Note that <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects can be invalid, which means that they do not contain valid tracking data and do not correspond to a physical finger. Invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects can be the result of asking for a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object using an ID from an earlier frame when no <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects with that ID exist in the current frame. A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object created from the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> constructor is also invalid. Test for validity with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" kindref="member">Finger::isValid()</ref> function. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>com.leapmotion.leap.Pointable</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_pointable"/>
      </node>
      <node id="12">
        <label>com.leapmotion.leap.Finger</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_finger"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15">
        <label>com.leapmotion.leap.Pointable</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_pointable"/>
      </node>
      <node id="14">
        <label>com.leapmotion.leap.Finger</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_finger"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java" bodystart="25" bodyend="96"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1abd92dbfc4c93c89a619622b2c67ca9d3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1affbc3d564e74967addf273eb7006e7ae" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a39b00dc8ec7e54c5e07e591b38db29cf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1a8c0874acdba4e60263c74216b20b7972" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1a741eebc420620d30dd85f6b10e784c3f" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>Finger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1aaed2941cf3c49c6fd56a6d012007889e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>Finger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1a5b64c1364ab62e5bd4912ded243553bc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>Finger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a0fc9745b4aa3f0284880647b4b482612" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1ab59cc2c8ab4e31cc8ecd9f99485e5ff2" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a7f3051e6807456cb21e23d97543b5181" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Pointable."><scope>com::leapmotion::leap::Finger</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Finger</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a10e06f1db3177a259a5e0966fb361e7a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a46e7a47f1aa97fb073b61bc6eb1b2031" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1ad7757644ee6f23a55b37f343d81498da" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af8a0d3d9dc96d7d86545e604f41cb6af" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>isFinger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a1a939138ab33f2d76e0aebdbdc28861e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>isTool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1aa8f442aa58b8694384327f29111a0c41" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>length</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ad5e0cc39f620718a50710fa6c3ab2812" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>Pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af2d1ea38d8b44a706cc86c32769b7cb5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>Pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1a0d3e5f0b413b5c449d6b7ff08550bfaa" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a34729c90d3c4b38a6f5994ae1ad14ee2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>tipPosition</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af7389a76398c7928d339c73f5af02d9e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>tipVelocity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1ac70aef945e2bd5788f386b3acaa2063c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1abba55cfb2de52af88b5a1faec2b1923b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Finger</scope><name>width</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::FingerList</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Iterable&lt; Finger &gt;</basecompoundref>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator" prot="public">com::leapmotion::leap::FingerList::FingerListIterator</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1afd8029aee4c717f519e74736da4bd0e1" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.FingerList.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="18" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a53c22bfdacf7fa16a462dd53c6b162a1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.FingerList.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="29" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a1f57d9e48816c106d687cfa5a12630ba" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.FingerList.FingerList</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>FingerList</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="20" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1ae2ae6f005f434e9d90d705b4bd0e5533" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.FingerList.getCPtr</definition>
        <argsstring>(FingerList obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="25" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a8e6b14cfb9c11b1c1c7851dcac7e129e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
        <definition>FingerList com.leapmotion.leap.FingerList.append</definition>
        <argsstring>(FingerList other)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the members of the specifed <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref> to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref> object containing <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects to append to the end of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="99" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1abcbed77727c5ae54426a6a18553ebcb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.FingerList.count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
<para>Returns the number of fingers in this list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of fingers in this list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a4023c6b3f9779b1b573c197a2721a0aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.FingerList.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a6a6d2ea9901391848a26714f18c4e504" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.FingerList.empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Reports whether the list is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True, if the list has no members. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="79" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a0729a37753c58128aadb4366526b23fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.FingerList.FingerList</definition>
        <argsstring>()</argsstring>
        <name>FingerList</name>
        <briefdescription>
<para>Constructs an empty list of fingers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="61" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a2a191ab810e14b2366160260574090e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>Finger com.leapmotion.leap.FingerList.get</definition>
        <argsstring>(int index)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Access a list member by its position in the list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero-based list position index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object at the specified index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="89" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a3124cc33510f7436ee21da91e0d82af3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>java.util.Iterator&lt; <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> &gt;</type>
        <definition>java.util.Iterator&lt;Finger&gt; com.leapmotion.leap.FingerList.iterator</definition>
        <argsstring>()</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="55" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="55" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref> class represents a list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>Get a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref> object by calling <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a63148fe55813b2c426a711cfa143f801" kindref="member">Frame::fingers()</ref>. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="17" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="17" bodyend="103"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a8e6b14cfb9c11b1c1c7851dcac7e129e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1abcbed77727c5ae54426a6a18553ebcb0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a4023c6b3f9779b1b573c197a2721a0aa" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a6a6d2ea9901391848a26714f18c4e504" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a53c22bfdacf7fa16a462dd53c6b162a1" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a1f57d9e48816c106d687cfa5a12630ba" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>FingerList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a0729a37753c58128aadb4366526b23fc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>FingerList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a2a191ab810e14b2366160260574090e5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1ae2ae6f005f434e9d90d705b4bd0e5533" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::FingerList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a3124cc33510f7436ee21da91e0d82af3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>iterator</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1afd8029aee4c717f519e74736da4bd0e1" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::FingerList</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::FingerList::FingerListIterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">java::util::Iterator&lt; Finger &gt;</basecompoundref>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator_1a006e5fbb1dd1d81898e24ba3e469d7f8" prot="package" static="no" mutable="no">
        <type>int</type>
        <definition>int com.leapmotion.leap.FingerList.FingerListIterator.index</definition>
        <argsstring/>
        <name>index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="45" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator_1a7d9c2c52f7888047ec7a4e95d41b3d50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.FingerList.FingerListIterator.hasNext</definition>
        <argsstring>()</argsstring>
        <name>hasNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator_1a6616c5f98c6827cb3190fa9f4f829419" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>Finger com.leapmotion.leap.FingerList.FingerListIterator.next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="49" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator_1a2ddb43f946b06140a585dd64ad64b65a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.FingerList.FingerListIterator.remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="52" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="52" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" line="44" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java" bodystart="44" bodyend="54"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator_1a7d9c2c52f7888047ec7a4e95d41b3d50" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList::FingerListIterator</scope><name>hasNext</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator_1a006e5fbb1dd1d81898e24ba3e469d7f8" prot="package" virt="non-virtual"><scope>com::leapmotion::leap::FingerList::FingerListIterator</scope><name>index</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator_1a6616c5f98c6827cb3190fa9f4f829419" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList::FingerListIterator</scope><name>next</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator_1a2ddb43f946b06140a585dd64ad64b65a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FingerList::FingerListIterator</scope><name>remove</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_float_array" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::FloatArray</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a930bddb8e07a76fe1e1454a0a77d1a34" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.FloatArray.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="12" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a72ecf9649bb4d7b7819b0af0088edb7b" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.FloatArray.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="13" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1ae6ecabaf4199fbb13f2e6731a3fd85a7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.FloatArray.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a8b3fe3dcbc97ce13c9888aa5dda1b015" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.FloatArray.FloatArray</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>FloatArray</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="15" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="15" bodyend="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a0e12ab16694a9e3b67982ac1f61721a3" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.FloatArray.getCPtr</definition>
        <argsstring>(FloatArray obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type>FloatArray</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="20" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1ae37ded4dade1a8e4ec048aa4043fb4ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.FloatArray.add</definition>
        <argsstring>(float x)</argsstring>
        <name>add</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="66" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1aa177cd4fcce4f23b8a21bbfd15eba7c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.FloatArray.capacity</definition>
        <argsstring>()</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="50" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1aa9a199378d19ba8fa8e70021d8dc2ce8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.FloatArray.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="62" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a7c23e849fd46ae3b1c439c01d69ff8d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.FloatArray.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a96fc48a90644b57abcd11f37c967bf5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.FloatArray.FloatArray</definition>
        <argsstring>()</argsstring>
        <name>FloatArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a48cd09fb7a20e81495e287e260d7adb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.FloatArray.FloatArray</definition>
        <argsstring>(long n)</argsstring>
        <name>FloatArray</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="42" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a6825dc08307507d033c206b8b6a6ba9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.FloatArray.get</definition>
        <argsstring>(int i)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a7db36fc73e22f642b3bdc61c203528ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.FloatArray.isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="58" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1ab4b7965809abfec73f254351c25b0c03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.FloatArray.reserve</definition>
        <argsstring>(long n)</argsstring>
        <name>reserve</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="54" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a2f186c650eb75d48c3a851652585e5b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.FloatArray.set</definition>
        <argsstring>(int i, float val)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_float_array_1af71ba5d70cc640448e3e2d4f3638cfa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.FloatArray.size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="46" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" line="11" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java" bodystart="11" bodyend="78"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1ae37ded4dade1a8e4ec048aa4043fb4ca" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1aa177cd4fcce4f23b8a21bbfd15eba7c5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1aa9a199378d19ba8fa8e70021d8dc2ce8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a7c23e849fd46ae3b1c439c01d69ff8d7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1ae6ecabaf4199fbb13f2e6731a3fd85a7" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a8b3fe3dcbc97ce13c9888aa5dda1b015" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>FloatArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a96fc48a90644b57abcd11f37c967bf5a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>FloatArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a48cd09fb7a20e81495e287e260d7adb7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>FloatArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a6825dc08307507d033c206b8b6a6ba9b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a0e12ab16694a9e3b67982ac1f61721a3" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a7db36fc73e22f642b3bdc61c203528ef" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1ab4b7965809abfec73f254351c25b0c03" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a2f186c650eb75d48c3a851652585e5b2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1af71ba5d70cc640448e3e2d4f3638cfa7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a72ecf9649bb4d7b7819b0af0088edb7b" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_float_array_1a930bddb8e07a76fe1e1454a0a77d1a34" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::FloatArray</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_frame" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Frame</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a2e611ff959bcc0b7f729f543038c6e42" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Frame.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="23" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a3df4fa4e3067344c59dfe93cba52b850" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Frame.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="34" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae81958528ea78beaedb2ea4d85efa45d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Frame.Frame</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Frame</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="25" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1ab7156a636b8dcf6da427f7d57c63b29c" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Frame.getCPtr</definition>
        <argsstring>(Frame obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="30" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="30" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a572309cad7c605af29e6ca63d9ea132c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Frame.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="38" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a73e01ad097ed520ed0eb6189c156c618" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Frame.equals</definition>
        <argsstring>(Frame arg0)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object equality. </para>        </briefdescription>
        <detaileddescription>
<para>Two <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects are equal if and only if both <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects represent the exact same frame of tracking data and both <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects are valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="444" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="444" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a841c6a05eb2dfa190d3a249073aaf348" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>Finger com.leapmotion.leap.Frame.finger</definition>
        <argsstring>(int id)</argsstring>
        <name>finger</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a841c6a05eb2dfa190d3a249073aaf348" kindref="member">Frame::finger()</ref> function to retrieve the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object from this frame using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object, but if no finger with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a finger is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object representing that physical finger may have a different ID than that representing the finger in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object with the matching ID if one exists in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="176" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a63148fe55813b2c426a711cfa143f801" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
        <definition>FingerList com.leapmotion.leap.Frame.fingers</definition>
        <argsstring>()</argsstring>
        <name>fingers</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects detected in this frame, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no fingers are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects detected in this frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="154" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1aed613c567b9b3b9f8dcf52856c9a2030" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Frame.Frame</definition>
        <argsstring>()</argsstring>
        <name>Frame</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> instances created with this constructor are invalid. Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects by calling the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">Controller::frame()</ref> function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="56" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
        <definition>Gesture com.leapmotion.leap.Frame.gesture</definition>
        <argsstring>(int id)</argsstring>
        <name>gesture</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" kindref="member">Frame::gesture()</ref> function to return a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object in this frame using an ID obtained in an earlier frame. The function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object, but if there was no update for the gesture in this frame, then an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object is returned.</para><para>All <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> objects representing the same recognized movement share the same ID. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of an <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object in the frame with the specified ID if one exists; Otherwise, an Invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="228" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a308d136b5187166dcfd0f1be28aec2c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
        <definition>GestureList com.leapmotion.leap.Frame.gestures</definition>
        <argsstring>()</argsstring>
        <name>gestures</name>
        <briefdescription>
<para>The gestures recognized or continuing in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Circle and swipe gestures are updated every frame. Tap gestures only appear in the list for a single frame.</para><para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> the list of gestures. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="241" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a7c0ab00c5b66cc0b88b8f05d60d4a9f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
        <definition>GestureList com.leapmotion.leap.Frame.gestures</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>gestures</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> containing all gestures that have occured since the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>An earlier <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. The starting frame must still be in the frame history cache, which has a default length of 60 frames. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> The list of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> objects that have occured since the specified frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="256" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a75d80b1d6c46b04fc6c446c79ce3cc19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>Hand com.leapmotion.leap.Frame.hand</definition>
        <argsstring>(int id)</argsstring>
        <name>hand</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a75d80b1d6c46b04fc6c446c79ce3cc19" kindref="member">Frame::hand()</ref> function to retrieve the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object from this frame using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object, but if no hand with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a hand is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object representing that physical hand may have a different ID than that representing the physical hand in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object with the matching ID if one exists in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="110" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae95881f0ce37c72e4e74b0bd46e02cc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
        <definition>HandList com.leapmotion.leap.Frame.hands</definition>
        <argsstring>()</argsstring>
        <name>hands</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects detected in this frame, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no hands are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects detected in this frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="88" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1add4aa27e1b4181fb8c9bae5feaf4139d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.Frame.id</definition>
        <argsstring>()</argsstring>
        <name>id</name>
        <briefdescription>
<para>A unique ID for this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Consecutive frames processed by the Leap have consecutive increasing values.</para><para><simplesect kind="return"><para>The frame ID. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="67" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a895c3c63566e8987a11fcaee4f875829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Frame.isValid</definition>
        <argsstring>()</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Reports whether this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> instance is valid. </para>        </briefdescription>
        <detaileddescription>
<para>A valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> is one generated by the Leap::Controller object that contains tracking data for all detected entities. An invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> contains no actual tracking data, but you can call its functions without risk of a null pointer exception. The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> mechanism makes it more convenient to track individual data across the frame history. For example, you can invoke:</para><para><programlisting><codeline><highlight class="normal">Finger<sp/>finger<sp/>=<sp/>controller.frame(n).finger(fingerID);</highlight></codeline>
</programlisting></para><para>for an arbitrary <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> history value, "n", without first checking whether frame(n) returned a null object. (You should still check that the returned <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> instance is valid.)</para><para><simplesect kind="return"><para>True, if this is a valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object; false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="420" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="420" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a91c0d83c637fb367e72216d22dac8fb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>Pointable com.leapmotion.leap.Frame.pointable</definition>
        <argsstring>(int id)</argsstring>
        <name>pointable</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a91c0d83c637fb367e72216d22dac8fb7" kindref="member">Frame::pointable()</ref> function to retrieve the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object from this frame using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object, but if no finger or tool with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a finger or tool is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object representing that finger or tool may have a different ID than that representing the finger or tool in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object with the matching ID if one exists in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="143" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1aeaadff41e48021771b3e33333c505d5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
        <definition>PointableList com.leapmotion.leap.Frame.pointables</definition>
        <argsstring>()</argsstring>
        <name>pointables</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects (fingers and tools) detected in this frame, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no fingers or tools are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects detected in this frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="121" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9570b870042931e39da08ac41b70e5d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Frame.rotationAngle</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>rotationAngle</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The angle of rotation around the rotation axis derived from the overall rotational motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned angle is expressed in radians measured clockwise around the rotation axis (using the right-hand rule) between the start and end frames. The value is always between 0 and pi radians (0 and 180 degrees).</para><para>The Leap derives frame rotation from the relative change in position and orientation of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then the angle of rotation is zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive value containing the heuristically determined rotational change between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="325" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a0812b9f900b648e20dc36529c353f3d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Frame.rotationAngle</definition>
        <argsstring>(Frame sinceFrame, Vector axis)</argsstring>
        <name>rotationAngle</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>axis</declname>
        </param>
        <briefdescription>
<para>The angle of rotation around the specified axis derived from the overall rotational motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned angle is expressed in radians measured clockwise around the rotation axis (using the right-hand rule) between the start and end frames. The value is always between -pi and pi radians (-180 and 180 degrees).</para><para>The Leap derives frame rotation from the relative change in position and orientation of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then the angle of rotation is zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis to measure rotation around. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value containing the heuristically determined rotational change between the current frame and that specified in the sinceFrame parameter around the given axis. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="350" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a84c9f63c0cf256ec3de2c375586e5eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Frame.rotationAxis</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>rotationAxis</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The axis of rotation derived from the overall rotational motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned direction vector is normalized.</para><para>The Leap derives frame rotation from the relative change in position and orientation of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, or if no rotation is detected between the two frames, a zero vector is returned.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A normalized direction <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the axis of the heuristically determined rotational change between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="301" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="301" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1ac7cfc29107e6bd94ecd4e851a40f88af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix com.leapmotion.leap.Frame.rotationMatrix</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>rotationMatrix</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The transform matrix expressing the rotation derived from the overall rotational motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The Leap derives frame rotation from the relative change in position and orientation of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then this method returns an identity matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A transformation <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref> containing the heuristically determined rotational change between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="370" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="370" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9d09300fae5e7b7f243758d1a1d44d2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Frame.scaleFactor</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>scaleFactor</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The scale factor derived from the overall motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The scale factor is always positive. A value of 1.0 indicates no scaling took place. Values between 0.0 and 1.0 indicate contraction and values greater than 1.0 indicate expansion.</para><para>The Leap derives scaling from the relative inward or outward motion of all objects detected in the field of view (independent of translation and rotation).</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then this method returns 1.0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative scaling. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive value representing the heuristically determined scaling change ratio between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="395" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="395" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1abf56bd79f7143e5e51a9c830bf0a5fbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.Frame.timestamp</definition>
        <argsstring>()</argsstring>
        <name>timestamp</name>
        <briefdescription>
<para>The frame capture time in microseconds elapsed since the Leap started. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The timestamp in microseconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="77" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a8b35e3a0bb912a2a9904bee41f6373da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref></type>
        <definition>Tool com.leapmotion.leap.Frame.tool</definition>
        <argsstring>(int id)</argsstring>
        <name>tool</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object with the specified ID in this frame. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a8b35e3a0bb912a2a9904bee41f6373da" kindref="member">Frame::tool()</ref> function to retrieve the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object from this frame using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object, but if no tool with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a tool is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object representing that tool may have a different ID than that representing the tool in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object with the matching ID if one exists in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="209" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a1d4d3ca18d34b4df7422f18a735527ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
        <definition>ToolList com.leapmotion.leap.Frame.tools</definition>
        <argsstring>()</argsstring>
        <name>tools</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects detected in this frame, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no tools are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects detected in this frame. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="187" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9c0392d98f61df3c560c9895cbb41fcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Frame.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>A string containing a brief, human readable description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> as a string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="454" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="454" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a2248c1409975aa689bd63bc3970a8656" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Frame.translation</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>translation</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The change of position derived from the overall linear motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned translation vector provides the magnitude and direction of the movement in millimeters.</para><para>The Leap derives frame translation from the linear motion of all objects detected in the field of view.</para><para>If either this frame or sinceFrame is an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, then this method returns a zero vector.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative translation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the heuristically determined change in position of all objects between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="279" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="279" bodyend="281"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_frame_1a0aa54564365f6e4cb849bee2a2df4a73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
        <definition>static Frame com.leapmotion.leap.Frame.invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
<para>Returns an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>You can use the instance returned by this function in comparisons testing whether a given <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> instance is valid or invalid. (You can also use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a895c3c63566e8987a11fcaee4f875829" kindref="member">Frame::isValid()</ref> function.)</para><para><simplesect kind="return"><para>The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="434" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="434" bodyend="436"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> class represents a set of hand and finger tracking data detected in a single frame. </para>    </briefdescription>
    <detaileddescription>
<para>The Leap detects hands, fingers and tools within the tracking area, reporting their positions, orientations and motions in frames at the Leap frame rate.</para><para>Access <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects through an instance of a Leap <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref>. Implement a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> subclass to receive a callback event when a new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> is available. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" line="22" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java" bodystart="22" bodyend="458"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a572309cad7c605af29e6ca63d9ea132c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a73e01ad097ed520ed0eb6189c156c618" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a3df4fa4e3067344c59dfe93cba52b850" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a841c6a05eb2dfa190d3a249073aaf348" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>finger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a63148fe55813b2c426a711cfa143f801" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>fingers</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae81958528ea78beaedb2ea4d85efa45d" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>Frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1aed613c567b9b3b9f8dcf52856c9a2030" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>Frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a308d136b5187166dcfd0f1be28aec2c5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>gestures</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a7c0ab00c5b66cc0b88b8f05d60d4a9f7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>gestures</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ab7156a636b8dcf6da427f7d57c63b29c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Frame</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a75d80b1d6c46b04fc6c446c79ce3cc19" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae95881f0ce37c72e4e74b0bd46e02cc7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>hands</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1add4aa27e1b4181fb8c9bae5feaf4139d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a0aa54564365f6e4cb849bee2a2df4a73" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a895c3c63566e8987a11fcaee4f875829" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a91c0d83c637fb367e72216d22dac8fb7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1aeaadff41e48021771b3e33333c505d5d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9570b870042931e39da08ac41b70e5d0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>rotationAngle</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a0812b9f900b648e20dc36529c353f3d3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>rotationAngle</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a84c9f63c0cf256ec3de2c375586e5eba" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>rotationAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ac7cfc29107e6bd94ecd4e851a40f88af" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>rotationMatrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9d09300fae5e7b7f243758d1a1d44d2a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>scaleFactor</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a2e611ff959bcc0b7f729f543038c6e42" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1abf56bd79f7143e5e51a9c830bf0a5fbe" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>timestamp</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a8b35e3a0bb912a2a9904bee41f6373da" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>tool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a1d4d3ca18d34b4df7422f18a735527ad" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>tools</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9c0392d98f61df3c560c9895cbb41fcc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a2248c1409975aa689bd63bc3970a8656" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Frame</scope><name>translation</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_gesture" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Gesture</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" prot="public" virt="non-virtual">com.leapmotion.leap.CircleGesture</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" prot="public" virt="non-virtual">com.leapmotion.leap.KeyTapGesture</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" prot="public" virt="non-virtual">com.leapmotion.leap.ScreenTapGesture</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" prot="public" virt="non-virtual">com.leapmotion.leap.SwipeGesture</derivedcompoundref>
    <innerclass refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" prot="public">com::leapmotion::leap::Gesture::State</innerclass>
    <innerclass refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" prot="public">com::leapmotion::leap::Gesture::Type</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a77f5af1f99e06c8dc53e0a4f9290c3ec" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Gesture.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="59" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1aa001b4b04d96ce2efa3b1403a4cd5ade" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Gesture.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a2c538af15c0678e7913cf4c1fa9b15" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Gesture</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Gesture</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="61" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="61" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1aacff5dba75bff58ece36726127ffd4d8" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Gesture.getCPtr</definition>
        <argsstring>(Gesture obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="66" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="66" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8f508ae426230deeb56f5a88a0a104cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Gesture.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="74" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a762ca0339845c9fd8f56eb9c50a9d939" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.Gesture.duration</definition>
        <argsstring>()</argsstring>
        <name>duration</name>
        <briefdescription>
<para>The elapsed duration of the recognized movement up to the frame containing this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object, in microseconds. </para>        </briefdescription>
        <detaileddescription>
<para>The duration reported for the first <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> in the sequence (with the STATE_START state) will typically be a small positive number since the movement must progress far enough for the Leap to recognize it as an intentional gesture.</para><para><simplesect kind="return"><para>int64_t the elapsed duration in microseconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="155" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ade91b8b357a0b65559f0b6e92259611a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Gesture.durationSeconds</definition>
        <argsstring>()</argsstring>
        <name>durationSeconds</name>
        <briefdescription>
<para>The elapsed duration in seconds. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a762ca0339845c9fd8f56eb9c50a9d939" kindref="member">duration()</ref> </para></simplesect>
<simplesect kind="return"><para>float the elapsed duration in seconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="165" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a9d1e2879db9699c3376ecad4ac6b5326" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Gesture.equals</definition>
        <argsstring>(Gesture rhs)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object equality. </para>        </briefdescription>
        <detaileddescription>
<para>Two Gestures are equal if they represent the same snapshot of the same recognized movement. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="228" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1acd58fdacb406067210d346766317c73d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
        <definition>Frame com.leapmotion.leap.Gesture.frame</definition>
        <argsstring>()</argsstring>
        <name>frame</name>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> containing this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> The parent <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="175" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Gesture</definition>
        <argsstring>()</argsstring>
        <name>Gesture</name>
        <briefdescription>
<para>Constructs a new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>An uninitialized <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object is considered invalid. Get valid instances of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> class, which will be one of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> subclasses, from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="93" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a16d3c85153f2c90a77ba8c5c74c055b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Gesture</definition>
        <argsstring>(Gesture rhs)</argsstring>
        <name>Gesture</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Constructs a new copy of an <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="101" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a774b6b0a846bc908140a9695446ec398" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
        <definition>HandList com.leapmotion.leap.Gesture.hands</definition>
        <argsstring>()</argsstring>
        <name>hands</name>
        <briefdescription>
<para>The list of hands associated with this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref>, if any. </para>        </briefdescription>
        <detaileddescription>
<para>If no hands are related to this gesture, the list is empty.</para><para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref> the list of related <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="187" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ad3e6aa7ddce5cf3079bcc6259f7d7412" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.Gesture.id</definition>
        <argsstring>()</argsstring>
        <name>id</name>
        <briefdescription>
<para>The gesture ID. </para>        </briefdescription>
        <detaileddescription>
<para>All <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> objects belonging to the same recognized movement share the same ID value. Use the ID value with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" kindref="member">Frame::gesture()</ref> method to find updates related to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object in subsequent frames.</para><para><simplesect kind="return"><para>int32_t the ID of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="139" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a1fbc97e34f25c3e1bb2f6ffecc57c563" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Gesture.isValid</definition>
        <argsstring>()</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Reports whether this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance represents a valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>An invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object does not represent a snapshot of a recognized movement. Invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> objects are returned when a valid object cannot be provided. For example, when you get an gesture by ID using <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" kindref="member">Frame::gesture()</ref>, and there is no gesture with that ID in the current frame, then gesture() returns an Invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object (rather than a null value). Always check object validity in situations where an gesture might be invalid.</para><para><simplesect kind="return"><para>bool True, if this is a valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance; false, otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="217" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a43e5763a3e347a066aabd5cac4e0f899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
        <definition>PointableList com.leapmotion.leap.Gesture.pointables</definition>
        <argsstring>()</argsstring>
        <name>pointables</name>
        <briefdescription>
<para>The list of fingers and tools associated with this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref>, if any. </para>        </briefdescription>
        <detaileddescription>
<para>If no <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects are related to this gesture, the list is empty.</para><para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref> the list of related <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="199" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a13f39cae216c5f285c526936a6b0af67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Gesture.State</type>
        <definition>Gesture.State com.leapmotion.leap.Gesture.state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <briefdescription>
<para>The gesture state. </para>        </briefdescription>
        <detaileddescription>
<para>Recognized movements occur over time and have a beginning, a middle, and an end. The '<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a13f39cae216c5f285c526936a6b0af67" kindref="member">state()</ref>' attribute reports where in that sequence this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object falls.</para><para><simplesect kind="return"><para><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound">Gesture::State</ref> A value from the <ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound">Gesture::State</ref> enumeration. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="125" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a6e5c086a26fa919648e307887cdefcf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Gesture.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>A string containing a brief, human-readable description of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="237" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a7420937c98ea7646f083e5c0a469fe3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Gesture.Type</type>
        <definition>Gesture.Type com.leapmotion.leap.Gesture.type</definition>
        <argsstring>()</argsstring>
        <name>type</name>
        <briefdescription>
<para>The gesture type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound">Gesture::Type</ref> A value from the <ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound">Gesture::Type</ref> enumeration. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="111" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="111" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a5bf5a6582c95367b8a46ac0a220da5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
        <definition>static Gesture com.leapmotion.leap.Gesture.invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
<para>Returns an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>You can use the instance returned by this function in comparisons testing whether a given <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance is valid or invalid. (You can also use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a1fbc97e34f25c3e1bb2f6ffecc57c563" kindref="member">Gesture::isValid()</ref> function.)</para><para><simplesect kind="return"><para>The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="251" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="251" bodyend="253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> class represents a recognized movement by the user. </para>    </briefdescription>
    <detaileddescription>
<para>The Leap watches the activity within its field of view for certain movement patterns typical of a user gesture or command. For example, a movement from side to side with the hand can indicate a swipe gesture, while a finger poking forward can indicate a screen tap gesture.</para><para>When the Leap recognizes a gesture, it assigns an ID and adds a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object to the frame gesture list. For continuous gestures, which occur over many frames, the Leap updates the gesture by adding a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object having the same ID and updated properties in each subsequent frame.</para><para><bold>Important:</bold> Recognition for each type of gesture must be enabled using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad49179bb7ada9753e50d63d640b7e2b6" kindref="member">Controller::enableGesture()</ref> function; otherwise <bold>no gestures are recognized or reported</bold>.</para><para>Subclasses of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> define the properties for the specific movement patterns recognized by the Leap.</para><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> subclasses for include:</para><para><itemizedlist>
<listitem><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref> <ndash/> A circular movement by a finger.</para></listitem><listitem><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref> <ndash/> A straight line movement by the hand with fingers extended.</para></listitem><listitem><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> <ndash/> A forward tapping movement by a finger.</para></listitem><listitem><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref> <ndash/> A downward tapping movement by a finger.</para></listitem></itemizedlist>
</para><para>Circle and swipe gestures are continuous and these objects can have a state of start, update, and stop.</para><para>The screen tap gesture is a discrete gesture. The Leap only creates a single <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> object appears for each tap and it always has a stop state.</para><para>Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instances from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. You can get a list of gestures with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a308d136b5187166dcfd0f1be28aec2c5" kindref="member">Frame::gestures()</ref> method. You can get a list of gestures since a specified frame with the <computeroutput>Frame::gestures(const Frame&amp;)</computeroutput> method. You can also use the <computeroutput><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" kindref="member">Frame::gesture()</ref></computeroutput> method to find a gesture in the current frame using an ID value obtained in a previous frame.</para><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> objects can be invalid. For example, when you get a gesture by ID using <computeroutput><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" kindref="member">Frame::gesture()</ref></computeroutput>, and there is no gesture with that ID in the current frame, then <computeroutput>gesture()</computeroutput> returns an Invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object (rather than a null value). Always check object validity in situations where a gesture might be invalid. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="24">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
      </node>
      <node id="27">
        <label>com.leapmotion.leap.ScreenTapGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>com.leapmotion.leap.KeyTapGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>com.leapmotion.leap.CircleGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>com.leapmotion.leap.SwipeGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="58" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="58" bodyend="372"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8f508ae426230deeb56f5a88a0a104cd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a762ca0339845c9fd8f56eb9c50a9d939" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>duration</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ade91b8b357a0b65559f0b6e92259611a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>durationSeconds</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a9d1e2879db9699c3376ecad4ac6b5326" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1aa001b4b04d96ce2efa3b1403a4cd5ade" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1acd58fdacb406067210d346766317c73d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a2c538af15c0678e7913cf4c1fa9b15" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a16d3c85153f2c90a77ba8c5c74c055b8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1aacff5dba75bff58ece36726127ffd4d8" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Gesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a774b6b0a846bc908140a9695446ec398" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>hands</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ad3e6aa7ddce5cf3079bcc6259f7d7412" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a5bf5a6582c95367b8a46ac0a220da5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a1fbc97e34f25c3e1bb2f6ffecc57c563" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a43e5763a3e347a066aabd5cac4e0f899" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a13f39cae216c5f285c526936a6b0af67" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>state</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a77f5af1f99e06c8dc53e0a4f9290c3ec" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a6e5c086a26fa919648e307887cdefcf2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a7420937c98ea7646f083e5c0a469fe3d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture</scope><name>type</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::GestureList</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Iterable&lt; Gesture &gt;</basecompoundref>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator" prot="public">com::leapmotion::leap::GestureList::GestureListIterator</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1af0e0704426256a94077b990e094145c3" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.GestureList.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="18" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1aaae8d3543a8eaeb2f825dd6634a5d882" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.GestureList.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="29" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1adf0e0d5951e6895c8d7cf4f3f22b8d6f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.GestureList.GestureList</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>GestureList</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="20" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a46f277641093e072f1b072e7e7c1b708" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.GestureList.getCPtr</definition>
        <argsstring>(GestureList obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="25" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a67d640d0a2630612dd801efd74e916fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
        <definition>GestureList com.leapmotion.leap.GestureList.append</definition>
        <argsstring>(GestureList other)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the members of the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> object containing <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> objects to append to the end of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="99" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a4bc27175479eb04efb1e8c6b02cc71c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.GestureList.count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
<para>The length of this list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of gestures in this list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a3fd61f51a3d798b1b8ccfe69e1e61b90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.GestureList.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a8282b92d4cd004a81a38c4cadeca6431" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.GestureList.empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Reports whether the list is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True, if the list has no members. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="79" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1af2b91c8b1f8ac1226de6be4c0de9ff7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.GestureList.GestureList</definition>
        <argsstring>()</argsstring>
        <name>GestureList</name>
        <briefdescription>
<para>Constructs an empty gesture list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="61" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1af3708ee5e8ced81bebbd74299378e30a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
        <definition>Gesture com.leapmotion.leap.GestureList.get</definition>
        <argsstring>(int index)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Access a list member by its position in the list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero-based list position index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> object at the specified index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="89" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a1b0b4718267734f07630c4a5c6c3d51d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>java.util.Iterator&lt; <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> &gt;</type>
        <definition>java.util.Iterator&lt;Gesture&gt; com.leapmotion.leap.GestureList.iterator</definition>
        <argsstring>()</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="55" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="55" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> class represents a list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>Get a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref> object from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="17" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="17" bodyend="103"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a67d640d0a2630612dd801efd74e916fd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a4bc27175479eb04efb1e8c6b02cc71c5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a3fd61f51a3d798b1b8ccfe69e1e61b90" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a8282b92d4cd004a81a38c4cadeca6431" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1aaae8d3543a8eaeb2f825dd6634a5d882" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1adf0e0d5951e6895c8d7cf4f3f22b8d6f" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>GestureList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1af2b91c8b1f8ac1226de6be4c0de9ff7d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>GestureList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1af3708ee5e8ced81bebbd74299378e30a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a46f277641093e072f1b072e7e7c1b708" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::GestureList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a1b0b4718267734f07630c4a5c6c3d51d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>iterator</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1af0e0704426256a94077b990e094145c3" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::GestureList</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::GestureList::GestureListIterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">java::util::Iterator&lt; Gesture &gt;</basecompoundref>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator_1a4a34b2679fb2ec40e8c875fb6822d022" prot="package" static="no" mutable="no">
        <type>int</type>
        <definition>int com.leapmotion.leap.GestureList.GestureListIterator.index</definition>
        <argsstring/>
        <name>index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="45" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator_1a447fc920352906af429b3a0f9fc779af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.GestureList.GestureListIterator.hasNext</definition>
        <argsstring>()</argsstring>
        <name>hasNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator_1ad4c275c5085493a03f0a98e6b9f5f34e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
        <definition>Gesture com.leapmotion.leap.GestureList.GestureListIterator.next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="49" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator_1a6b3c04428fdead411085c2eb71706259" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.GestureList.GestureListIterator.remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="52" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="52" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" line="44" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java" bodystart="44" bodyend="54"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator_1a447fc920352906af429b3a0f9fc779af" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList::GestureListIterator</scope><name>hasNext</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator_1a4a34b2679fb2ec40e8c875fb6822d022" prot="package" virt="non-virtual"><scope>com::leapmotion::leap::GestureList::GestureListIterator</scope><name>index</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator_1ad4c275c5085493a03f0a98e6b9f5f34e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList::GestureListIterator</scope><name>next</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator_1a6b3c04428fdead411085c2eb71706259" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::GestureList::GestureListIterator</scope><name>remove</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_hand" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Hand</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a5935ac76947256048ca97f61ff4f3b41" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Hand.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="27" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a003ccf23f58d36c73a7fb75a26bb39c4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Hand.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a2e99d3123926d794e24754b695fd9d71" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Hand.Hand</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Hand</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="29" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="29" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1afe110fdc08ecd838de4fe54cf7b09ff5" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Hand.getCPtr</definition>
        <argsstring>(Hand obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="34" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="34" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a3630c5db2bd84731ff09233ce0c3278a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Hand.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="42" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="42" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a717b65759c51018ee9f68ac15f9cd148" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Hand.direction</definition>
        <argsstring>()</argsstring>
        <name>direction</name>
        <briefdescription>
<para>The direction from the palm position toward the fingers. </para>        </briefdescription>
        <detaileddescription>
<para>The direction is expressed as a unit vector pointing in the same direction as the directed line from the palm position to the fingers.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> pointing from the palm position toward the fingers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="245" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1aafef9bed01f929a9f758019234191184" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Hand.equals</definition>
        <argsstring>(Hand arg0)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object equality. </para>        </briefdescription>
        <detaileddescription>
<para>Two <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects are equal if and only if both <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects represent the exact same physical hand in the same frame and both <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects are valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="439" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="439" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a71ca5cf1110b809f542e31da3b5681c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>Finger com.leapmotion.leap.Hand.finger</definition>
        <argsstring>(int id)</argsstring>
        <name>finger</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object with the specified ID attached to this hand. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a71ca5cf1110b809f542e31da3b5681c3" kindref="member">Hand::finger()</ref> function to retrieve a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object attached to this hand using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object, but if no finger with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a finger is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object representing that finger may have a different ID than that representing the finger in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object with the matching ID if one exists for this hand in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="162" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1aecc93940ce6172c40c002cc6748cb4d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
        <definition>FingerList com.leapmotion.leap.Hand.fingers</definition>
        <argsstring>()</argsstring>
        <name>fingers</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects detected in this frame that are attached to this hand, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no fingers attached to this hand are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects attached to this hand. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="140" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a3834bde833cdbdba102da2d9b3a63d9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
        <definition>Frame com.leapmotion.leap.Hand.frame</definition>
        <argsstring>()</argsstring>
        <name>frame</name>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> associated with this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The associated <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, if available; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="88" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1ac4ffbfccb689e551f6746d779cdd7de2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Hand.Hand</definition>
        <argsstring>()</argsstring>
        <name>Hand</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>An uninitialized hand is considered invalid. Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="60" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a86deb2637cd447c733e76d6ab31257b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.Hand.id</definition>
        <argsstring>()</argsstring>
        <name>id</name>
        <briefdescription>
<para>A unique ID assigned to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object, whose value remains the same across consecutive frames while the tracked hand remains visible. </para>        </briefdescription>
        <detaileddescription>
<para>If tracking is lost (for example, when a hand is occluded by another hand or when it is withdrawn from or reaches the edge of the Leap field of view), the Leap may assign a new ID when it detects the hand in a future frame.</para><para>Use the ID value with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a75d80b1d6c46b04fc6c446c79ce3cc19" kindref="member">Frame::hand()</ref> function to find this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object in future frames.</para><para><simplesect kind="return"><para>The ID of this hand. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="77" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a81361b9b0f4b6e7e847604cc6653a55c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Hand.isValid</definition>
        <argsstring>()</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Reports whether this is a valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True, if this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object contains valid tracking data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="415" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="415" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a7c1c7235ed4862e4d734d76349e35169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Hand.palmNormal</definition>
        <argsstring>()</argsstring>
        <name>palmNormal</name>
        <briefdescription>
<para>The normal vector to the palm. </para>        </briefdescription>
        <detaileddescription>
<para>If your hand is flat, this vector will point downward, or "out" of the front surface of your palm.</para><para><image type="html" name="Leap_Palm_Vectors.png"/>
</para><para>The direction is expressed as a unit vector pointing in the same direction as the palm normal (that is, a vector orthogonal to the palm).</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> normal to the plane formed by the palm. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="232" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1afffef90b815fed26a340743529c06dd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Hand.palmPosition</definition>
        <argsstring>()</argsstring>
        <name>palmPosition</name>
        <briefdescription>
<para>The center position of the palm in millimeters from the Leap origin. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the coordinates of the palm position. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="206" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1adc6d31986f672333c26e6d57f90205eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Hand.palmVelocity</definition>
        <argsstring>()</argsstring>
        <name>palmVelocity</name>
        <briefdescription>
<para>The rate of change of the palm position in millimeters/second. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the coordinates of the palm velocity. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="216" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a82fa63906f22507aa5b0f265bc62f426" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>Pointable com.leapmotion.leap.Hand.pointable</definition>
        <argsstring>(int id)</argsstring>
        <name>pointable</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object with the specified ID associated with this hand. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a82fa63906f22507aa5b0f265bc62f426" kindref="member">Hand::pointable()</ref> function to retrieve a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object associated with this hand using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object, but if no finger or tool with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a finger or tool is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object representing that finger or tool may have a different ID than that representing the finger or tool in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object with the matching ID if one exists for this hand in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="128" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a59ccdd31d706349212e57f05e6def377" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
        <definition>PointableList com.leapmotion.leap.Hand.pointables</definition>
        <argsstring>()</argsstring>
        <name>pointables</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects (fingers and tools) detected in this frame that are associated with this hand, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no fingers or tools associated with this hand are detected.</para><para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af8a0d3d9dc96d7d86545e604f41cb6af" kindref="member">Pointable::isFinger()</ref> function to determine whether or not an item in the list represents a finger. Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a1a939138ab33f2d76e0aebdbdc28861e" kindref="member">Pointable::isTool()</ref> function to determine whether or not an item in the list represents a tool. You can also get only fingers using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1aecc93940ce6172c40c002cc6748cb4d2" kindref="member">Hand::fingers()</ref> function or only tools using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a039f8706c09259d29e43a861acb29fe9" kindref="member">Hand::tools()</ref> function.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects associated with this hand. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="106" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1ab2fb02d04a8a2b4867bd0125401c234f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Hand.rotationAngle</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>rotationAngle</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The angle of rotation around the rotation axis derived from the change in orientation of this hand, and any associated fingers and tools, between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned angle is expressed in radians measured clockwise around the rotation axis (using the right-hand rule) between the start and end frames. The value is always between 0 and pi radians (0 and 180 degrees).</para><para>If a corresponding <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is not found in sinceFrame, or if either this frame or sinceFrame are invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects, then the angle of rotation is zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive value representing the heuristically determined rotational change of the hand between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="336" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a21ec8e3a4ed177370c41c707cd787cf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Hand.rotationAngle</definition>
        <argsstring>(Frame sinceFrame, Vector axis)</argsstring>
        <name>rotationAngle</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>axis</declname>
        </param>
        <briefdescription>
<para>The angle of rotation around the specified axis derived from the change in orientation of this hand, and any associated fingers and tools, between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned angle is expressed in radians measured clockwise around the rotation axis (using the right-hand rule) between the start and end frames. The value is always between -pi and pi radians (-180 and 180 degrees).</para><para>If a corresponding <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is not found in sinceFrame, or if either this frame or sinceFrame are invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects, then the angle of rotation is zero.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis to measure rotation around. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value representing the heuristically determined rotational change of the hand between the current frame and that specified in the sinceFrame parameter around the specified axis. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="360" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="360" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a62ee64b2c9d3fd5684f5fb3f5d7055a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Hand.rotationAxis</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>rotationAxis</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The axis of rotation derived from the change in orientation of this hand, and any associated fingers and tools, between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned direction vector is normalized.</para><para>If a corresponding <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is not found in sinceFrame, or if either this frame or sinceFrame are invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects, then this method returns a zero vector.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A normalized direction <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the heuristically determined axis of rotational change of the hand between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="313" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="313" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a4c320c5331e950c8ec0bf86080356501" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix com.leapmotion.leap.Hand.rotationMatrix</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>rotationMatrix</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The transform matrix expressing the rotation derived from the change in orientation of this hand, and any associated fingers and tools, between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>If a corresponding <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is not found in sinceFrame, or if either this frame or sinceFrame are invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects, then this method returns an identity matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A transformation <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref> representing the heuristically determined rotational change of the hand between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="379" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="379" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a6253f8161a8bf73c3958aa75f721aef0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Hand.scaleFactor</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>scaleFactor</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The scale factor derived from this hand's motion between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The scale factor is always positive. A value of 1.0 indicates no scaling took place. Values between 0.0 and 1.0 indicate contraction and values greater than 1.0 indicate expansion.</para><para>The Leap derives scaling from the relative inward or outward motion of a hand and its associated fingers and tools (independent of translation and rotation).</para><para>If a corresponding <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is not found in sinceFrame, or if either this frame or sinceFrame are invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects, then this method returns 1.0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the relative scaling. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive value representing the heuristically determined scaling change ratio of the hand between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="405" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="405" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a7bd24ab161e5291abd466453a8c58cc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Hand.sphereCenter</definition>
        <argsstring>()</argsstring>
        <name>sphereCenter</name>
        <briefdescription>
<para>The center of a sphere fit to the curvature of this hand. </para>        </briefdescription>
        <detaileddescription>
<para>This sphere is placed roughly as if the hand were holding a ball.</para><para><image type="html" name="Leap_Hand_Ball.png"/>
</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the center position of the sphere. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="259" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a720d093f7c2855cfee31310b02742a3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Hand.sphereRadius</definition>
        <argsstring>()</argsstring>
        <name>sphereRadius</name>
        <briefdescription>
<para>The radius of a sphere fit to the curvature of this hand. </para>        </briefdescription>
        <detaileddescription>
<para>This sphere is placed roughly as if the hand were holding a ball. Thus the size of the sphere decreases as the fingers are curled into a fist. <simplesect kind="return"><para>The radius of the sphere in millimeters. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="271" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a338bf536f09a445af8698fe7e83b8eaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref></type>
        <definition>Tool com.leapmotion.leap.Hand.tool</definition>
        <argsstring>(int id)</argsstring>
        <name>tool</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object with the specified ID held by this hand. </para>        </briefdescription>
        <detaileddescription>
<para>Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a338bf536f09a445af8698fe7e83b8eaa" kindref="member">Hand::tool()</ref> function to retrieve a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object held by this hand using an ID value obtained from a previous frame. This function always returns a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object, but if no tool with the specified ID is present, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object is returned.</para><para>Note that ID values persist across frames, but only until tracking of a particular object is lost. If tracking of a tool is lost and subsequently regained, the new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object representing that tool may have a different ID than that representing the tool in an earlier frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID value of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object from a previous frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object with the matching ID if one exists for this hand in this frame; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="196" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a039f8706c09259d29e43a861acb29fe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
        <definition>ToolList com.leapmotion.leap.Hand.tools</definition>
        <argsstring>()</argsstring>
        <name>tools</name>
        <briefdescription>
<para>The list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects detected in this frame that are held by this hand, given in arbitrary order. </para>        </briefdescription>
        <detaileddescription>
<para>The list can be empty if no tools held by this hand are detected.</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref> containing all <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects held by this hand. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="174" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a6c2f2f399bb6179b4156549d2f436eaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Hand.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>A string containing a brief, human readable description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> as a string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="449" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="449" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a6a6cda94ce7e5952f036e52e3f217ec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Hand.translation</definition>
        <argsstring>(Frame sinceFrame)</argsstring>
        <name>translation</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>sinceFrame</declname>
        </param>
        <briefdescription>
<para>The change of position of this hand between the current frame and the specified frame. </para>        </briefdescription>
        <detaileddescription>
<para>The returned translation vector provides the magnitude and direction of the movement in millimeters.</para><para>If a corresponding <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is not found in sinceFrame, or if either this frame or sinceFrame are invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> objects, then this method returns a zero vector.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinceFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting frame for computing the translation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the heuristically determined change in hand position between the current frame and that specified in the sinceFrame parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="292" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="292" bodyend="294"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_1a8f22298a8593dca67e7ef7b4fa0bf80f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>static Hand com.leapmotion.leap.Hand.invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
<para>Returns an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>You can use the instance returned by this function in comparisons testing whether a given <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> instance is valid or invalid. (You can also use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a81361b9b0f4b6e7e847604cc6653a55c" kindref="member">Hand::isValid()</ref> function.)</para><para><simplesect kind="return"><para>The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="429" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="429" bodyend="431"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> class reports the physical characteristics of a detected hand. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> tracking data includes a palm position and velocity; vectors for the palm normal and direction to the fingers; properties of a sphere fit to the hand; and lists of the attached fingers and tools.</para><para>Note that <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects can be invalid, which means that they do not contain valid tracking data and do not correspond to a physical entity. Invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects can be the result of asking for a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object using an ID from an earlier frame when no <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects with that ID exist in the current frame. A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object created from the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> constructor is also invalid. Test for validity with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a81361b9b0f4b6e7e847604cc6653a55c" kindref="member">Hand::isValid()</ref> function. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" line="26" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java" bodystart="26" bodyend="453"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a3630c5db2bd84731ff09233ce0c3278a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a717b65759c51018ee9f68ac15f9cd148" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1aafef9bed01f929a9f758019234191184" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a003ccf23f58d36c73a7fb75a26bb39c4" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a71ca5cf1110b809f542e31da3b5681c3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>finger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1aecc93940ce6172c40c002cc6748cb4d2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>fingers</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a3834bde833cdbdba102da2d9b3a63d9a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1afe110fdc08ecd838de4fe54cf7b09ff5" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Hand</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a2e99d3123926d794e24754b695fd9d71" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>Hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1ac4ffbfccb689e551f6746d779cdd7de2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>Hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a86deb2637cd447c733e76d6ab31257b9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a8f22298a8593dca67e7ef7b4fa0bf80f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a81361b9b0f4b6e7e847604cc6653a55c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a7c1c7235ed4862e4d734d76349e35169" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>palmNormal</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1afffef90b815fed26a340743529c06dd1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>palmPosition</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1adc6d31986f672333c26e6d57f90205eb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>palmVelocity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a82fa63906f22507aa5b0f265bc62f426" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a59ccdd31d706349212e57f05e6def377" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1ab2fb02d04a8a2b4867bd0125401c234f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>rotationAngle</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a21ec8e3a4ed177370c41c707cd787cf9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>rotationAngle</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a62ee64b2c9d3fd5684f5fb3f5d7055a5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>rotationAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a4c320c5331e950c8ec0bf86080356501" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>rotationMatrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a6253f8161a8bf73c3958aa75f721aef0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>scaleFactor</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a7bd24ab161e5291abd466453a8c58cc8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>sphereCenter</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a720d093f7c2855cfee31310b02742a3a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>sphereRadius</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a5935ac76947256048ca97f61ff4f3b41" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a338bf536f09a445af8698fe7e83b8eaa" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>tool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a039f8706c09259d29e43a861acb29fe9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>tools</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a6c2f2f399bb6179b4156549d2f436eaa" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a6a6cda94ce7e5952f036e52e3f217ec5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Hand</scope><name>translation</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::HandList</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Iterable&lt; Hand &gt;</basecompoundref>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator" prot="public">com::leapmotion::leap::HandList::HandListIterator</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1af8f14e63b800b85fea55b0b5a9bae9e5" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.HandList.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="18" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a6c7e408b955246e3c5e9bb5f511f028c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.HandList.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="29" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1aba19310cf75b4bb2283a485074b080f6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.HandList.HandList</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>HandList</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="20" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1afef17d917cd02855adde00400ce4b535" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.HandList.getCPtr</definition>
        <argsstring>(HandList obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="25" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a695dd12e673a0808095e28b53091c27b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
        <definition>HandList com.leapmotion.leap.HandList.append</definition>
        <argsstring>(HandList other)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the members of the specifed <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref> to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref> object containing <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects to append to the end of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="99" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1af341a1bfe518816cb11592410c6141e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.HandList.count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
<para>Returns the number of hands in this list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of hands in this list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1ab43d02b68becbc4bb90452c06928d837" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.HandList.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1ae36df85bad1eb89b4cdd813968982796" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.HandList.empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Reports whether the list is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True, if the list has no members. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="79" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a1e11fe62755ea6ac90e79ff11c6943c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>Hand com.leapmotion.leap.HandList.get</definition>
        <argsstring>(int index)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Access a list member by its position in the list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero-based list position index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object at the specified index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="89" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a668ad32526f770bc4f7aad33b00a1309" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.HandList.HandList</definition>
        <argsstring>()</argsstring>
        <name>HandList</name>
        <briefdescription>
<para>Constructs an empty list of hands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="61" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a175e5b7ce5e154e0b11eaef0d1eddcc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>java.util.Iterator&lt; <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> &gt;</type>
        <definition>java.util.Iterator&lt;Hand&gt; com.leapmotion.leap.HandList.iterator</definition>
        <argsstring>()</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="55" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="55" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref> class represents a list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>Get a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref> object by calling <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae95881f0ce37c72e4e74b0bd46e02cc7" kindref="member">Frame::hands()</ref>. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="17" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="17" bodyend="103"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a695dd12e673a0808095e28b53091c27b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1af341a1bfe518816cb11592410c6141e2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1ab43d02b68becbc4bb90452c06928d837" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1ae36df85bad1eb89b4cdd813968982796" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a6c7e408b955246e3c5e9bb5f511f028c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a1e11fe62755ea6ac90e79ff11c6943c7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1afef17d917cd02855adde00400ce4b535" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::HandList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1aba19310cf75b4bb2283a485074b080f6" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>HandList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a668ad32526f770bc4f7aad33b00a1309" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>HandList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a175e5b7ce5e154e0b11eaef0d1eddcc0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>iterator</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1af8f14e63b800b85fea55b0b5a9bae9e5" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::HandList</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::HandList::HandListIterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">java::util::Iterator&lt; Hand &gt;</basecompoundref>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator_1a6c21dca628db2efffd9f9b107435ecab" prot="package" static="no" mutable="no">
        <type>int</type>
        <definition>int com.leapmotion.leap.HandList.HandListIterator.index</definition>
        <argsstring/>
        <name>index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="45" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator_1adae2b92170c647cca9f5fe6e464abe0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.HandList.HandListIterator.hasNext</definition>
        <argsstring>()</argsstring>
        <name>hasNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator_1abccaa1ed97161fcf9ac46584012fa8a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>Hand com.leapmotion.leap.HandList.HandListIterator.next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="49" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator_1a9464e12857fef2162b462aa1dffafaab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.HandList.HandListIterator.remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="52" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="52" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" line="44" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java" bodystart="44" bodyend="54"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator_1adae2b92170c647cca9f5fe6e464abe0a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList::HandListIterator</scope><name>hasNext</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator_1a6c21dca628db2efffd9f9b107435ecab" prot="package" virt="non-virtual"><scope>com::leapmotion::leap::HandList::HandListIterator</scope><name>index</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator_1abccaa1ed97161fcf9ac46584012fa8a3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList::HandListIterator</scope><name>next</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator_1a9464e12857fef2162b462aa1dffafaab" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::HandList::HandListIterator</scope><name>remove</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Int32Array</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a532ff1b9c841e95af1cdd51f9d70e93d" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Int32Array.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="12" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1aeffb3cc87fe9ea9bc48ee904fd54d0bb" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Int32Array.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="13" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a170262e0b25ea9aa65d112236933eeec" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Int32Array.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a9064b69220b49dc8ee83372e2768305d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Int32Array.Int32Array</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Int32Array</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="15" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="15" bodyend="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1aed2893796f601f9b944f4bbbd79425e8" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Int32Array.getCPtr</definition>
        <argsstring>(Int32Array obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type>Int32Array</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="20" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1ab51a476df74db5de125b9ee89e60b517" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Int32Array.add</definition>
        <argsstring>(int x)</argsstring>
        <name>add</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="66" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1af5d85b8ef63982dd8f0abab5dcd86856" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.Int32Array.capacity</definition>
        <argsstring>()</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="50" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a2d4200844e36bc271867e0e278f76cd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Int32Array.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="62" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1aca521660525f93a40025b9f648761dc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Int32Array.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a4f17324aef5373efb35d03facd86bbf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.Int32Array.get</definition>
        <argsstring>(int i)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a86eac899db01f79a4c50fd449347b0b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Int32Array.Int32Array</definition>
        <argsstring>()</argsstring>
        <name>Int32Array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1ae9d3aef10647f8e216c01c88ace358e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Int32Array.Int32Array</definition>
        <argsstring>(long n)</argsstring>
        <name>Int32Array</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="42" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a75bba17117f08dbec13e620cfd341930" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Int32Array.isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="58" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1af2ae6b15d3b215306a0e801d3bedff3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Int32Array.reserve</definition>
        <argsstring>(long n)</argsstring>
        <name>reserve</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="54" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a4fe018c6488fb23850baf29360c120eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Int32Array.set</definition>
        <argsstring>(int i, int val)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a02ddaa79b54a9223cb045871d74bdf1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.Int32Array.size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="46" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" line="11" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java" bodystart="11" bodyend="78"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1ab51a476df74db5de125b9ee89e60b517" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1af5d85b8ef63982dd8f0abab5dcd86856" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a2d4200844e36bc271867e0e278f76cd2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1aca521660525f93a40025b9f648761dc8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a170262e0b25ea9aa65d112236933eeec" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a4f17324aef5373efb35d03facd86bbf0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1aed2893796f601f9b944f4bbbd79425e8" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a9064b69220b49dc8ee83372e2768305d" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>Int32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a86eac899db01f79a4c50fd449347b0b2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>Int32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1ae9d3aef10647f8e216c01c88ace358e3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>Int32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a75bba17117f08dbec13e620cfd341930" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1af2ae6b15d3b215306a0e801d3bedff3b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a4fe018c6488fb23850baf29360c120eb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a02ddaa79b54a9223cb045871d74bdf1a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1aeffb3cc87fe9ea9bc48ee904fd54d0bb" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array_1a532ff1b9c841e95af1cdd51f9d70e93d" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Int32Array</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_interface" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Interface</compoundname>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_config" prot="public" virt="non-virtual">com.leapmotion.leap.Config</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" prot="public" virt="non-virtual">com.leapmotion.leap.Controller</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" prot="public" virt="non-virtual">com.leapmotion.leap.FingerList</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" prot="public" virt="non-virtual">com.leapmotion.leap.Frame</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" prot="public" virt="non-virtual">com.leapmotion.leap.Gesture</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" prot="public" virt="non-virtual">com.leapmotion.leap.GestureList</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" prot="public" virt="non-virtual">com.leapmotion.leap.Hand</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" prot="public" virt="non-virtual">com.leapmotion.leap.HandList</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" prot="public" virt="non-virtual">com.leapmotion.leap.Pointable</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" prot="public" virt="non-virtual">com.leapmotion.leap.PointableList</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" prot="public" virt="non-virtual">com.leapmotion.leap.Screen</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" prot="public" virt="non-virtual">com.leapmotion.leap.ScreenList</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" prot="public" virt="non-virtual">com.leapmotion.leap.ToolList</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_interface_1a6a79a179cfd5395f49b7fb7133ea8e42" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Interface.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" line="12" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Interface.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" line="13" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Interface.Interface</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Interface</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" line="15" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" bodystart="15" bodyend="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Interface.getCPtr</definition>
        <argsstring>(Interface obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type>Interface</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" bodystart="20" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_interface_1aaa24f5ab947fbd487fca5ff7f2555709" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Interface.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" bodystart="24" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="54">
        <label>com.leapmotion.leap.HandList</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>com.leapmotion.leap.Config</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_config"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>com.leapmotion.leap.Pointable</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_pointable"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>com.leapmotion.leap.Finger</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_finger"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>com.leapmotion.leap.Controller</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_controller"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>com.leapmotion.leap.ScreenTapGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>com.leapmotion.leap.Interface</label>
      </node>
      <node id="53">
        <label>com.leapmotion.leap.Hand</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_hand"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>com.leapmotion.leap.Screen</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_screen"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>com.leapmotion.leap.ScreenList</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>com.leapmotion.leap.FingerList</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>com.leapmotion.leap.Frame</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_frame"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>com.leapmotion.leap.Tool</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_tool"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>com.leapmotion.leap.ToolList</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>com.leapmotion.leap.GestureList</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>com.leapmotion.leap.KeyTapGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>com.leapmotion.leap.PointableList</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>com.leapmotion.leap.CircleGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>com.leapmotion.leap.SwipeGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture"/>
        <childnode refid="47" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" line="11" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java" bodystart="11" bodyend="34"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aaa24f5ab947fbd487fca5ff7f2555709" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Interface</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Interface</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Interface</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Interface</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a6a79a179cfd5395f49b7fb7133ea8e42" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Interface</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::KeyTapGesture</compoundname>
    <basecompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" prot="public" virt="non-virtual">com.leapmotion.leap.Gesture</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a825ee5628ed5069d4237f8186e1befa7" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.KeyTapGesture.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="31" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a796f6fe6b56455dbdef57375b1b46904" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.KeyTapGesture.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="42" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a00d95f8f2690d50bf7d9b4e5162e598f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.KeyTapGesture.KeyTapGesture</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>KeyTapGesture</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="33" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a364e02933b32befbf4e4f97a35701877" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.KeyTapGesture.getCPtr</definition>
        <argsstring>(KeyTapGesture obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="38" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1ac6bb792e04d233e6e1a6e1c86dc307b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.KeyTapGesture.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="46" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1aac4f485db17eaf4c7c12a000305c5ad3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.KeyTapGesture.direction</definition>
        <argsstring>()</argsstring>
        <name>direction</name>
        <briefdescription>
<para>The direction of finger tip motion. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> A unit direction vector if the finger tip is moving; otherwise, a zero-vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="106" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1ad54b78d9498062467e78d1c80861fcca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.KeyTapGesture.KeyTapGesture</definition>
        <argsstring>()</argsstring>
        <name>KeyTapGesture</name>
        <briefdescription>
<para>Constructs a new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>An uninitialized <ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref> object is considered invalid. Get valid instances of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref> class from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1ab57151d61e90b7916c0032d5dc678516" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.KeyTapGesture.KeyTapGesture</definition>
        <argsstring>(Gesture rhs)</argsstring>
        <name>KeyTapGesture</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref> object from an instance of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance to specialize. This <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance must be a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="85" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1af69aa682632c33ab53b47edaddc0bf05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>Pointable com.leapmotion.leap.KeyTapGesture.pointable</definition>
        <argsstring>()</argsstring>
        <name>pointable</name>
        <briefdescription>
<para>The finger performing the key tap gesture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object representing the tapping finger. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="126" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a1dfcb2c95a4a938088d1673b1ce509c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.KeyTapGesture.position</definition>
        <argsstring>()</argsstring>
        <name>position</name>
        <briefdescription>
<para>The position where the key tap is registered. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of tap location. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="95" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1adc4960b3b5a79e4ddda6e732bdf84936" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.KeyTapGesture.progress</definition>
        <argsstring>()</argsstring>
        <name>progress</name>
        <briefdescription>
<para>The progess value is always 1.0 for a key tap gesture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float The value 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="116" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="116" bodyend="118"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1abc1c883ed18f1a3dc34467c87ca1525c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Gesture.Type</type>
        <definition>static Gesture.Type com.leapmotion.leap.KeyTapGesture.classType</definition>
        <argsstring>()</argsstring>
        <name>classType</name>
        <briefdescription>
<para>The key tap gesture type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Type The type value designating a key tap gesture. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="63" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="63" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref> class represents a tapping gesture by a finger or tool. </para>    </briefdescription>
    <detaileddescription>
<para>A key tap gesture is recognized when the tip of a finger rotates down toward the palm and then springs back to approximately the original postion, as if tapping. The tapping finger must pause briefly before beginning the tap.</para><para><image type="html" name="Leap_Gesture_Tap.png"/>
</para><para><bold>Important:</bold> To use key tap gestures in your application, you must enable recognition of the key tap gesture. You can enable recognition with: <verbatim>Controller::enableGesture(Gesture::TYPE_KEY_TAP);
</verbatim></para><para>Key tap gestures are discrete. The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref> object representing a tap always has the state, STATE_STOP. Only one <ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref> object is created for each key tap gesture recognized. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="64">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
      </node>
      <node id="63">
        <label>com.leapmotion.leap.KeyTapGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="66">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
      </node>
      <node id="65">
        <label>com.leapmotion.leap.KeyTapGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture"/>
        <childnode refid="66" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" line="30" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java" bodystart="30" bodyend="130"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1abc1c883ed18f1a3dc34467c87ca1525c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>classType</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1ac6bb792e04d233e6e1a6e1c86dc307b8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1aac4f485db17eaf4c7c12a000305c5ad3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a762ca0339845c9fd8f56eb9c50a9d939" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>duration</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ade91b8b357a0b65559f0b6e92259611a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>durationSeconds</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a9d1e2879db9699c3376ecad4ac6b5326" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a796f6fe6b56455dbdef57375b1b46904" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1acd58fdacb406067210d346766317c73d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a2c538af15c0678e7913cf4c1fa9b15" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a16d3c85153f2c90a77ba8c5c74c055b8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a364e02933b32befbf4e4f97a35701877" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1aacff5dba75bff58ece36726127ffd4d8" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Gesture."><scope>com::leapmotion::leap::KeyTapGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::KeyTapGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a774b6b0a846bc908140a9695446ec398" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>hands</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ad3e6aa7ddce5cf3079bcc6259f7d7412" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a5bf5a6582c95367b8a46ac0a220da5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a1fbc97e34f25c3e1bb2f6ffecc57c563" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a00d95f8f2690d50bf7d9b4e5162e598f" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>KeyTapGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1ad54b78d9498062467e78d1c80861fcca" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>KeyTapGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1ab57151d61e90b7916c0032d5dc678516" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>KeyTapGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1af69aa682632c33ab53b47edaddc0bf05" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a43e5763a3e347a066aabd5cac4e0f899" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a1dfcb2c95a4a938088d1673b1ce509c8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>position</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1adc4960b3b5a79e4ddda6e732bdf84936" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>progress</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a13f39cae216c5f285c526936a6b0af67" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>state</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a825ee5628ed5069d4237f8186e1befa7" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a6e5c086a26fa919648e307887cdefcf2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a7420937c98ea7646f083e5c0a469fe3d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::KeyTapGesture</scope><name>type</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_leap" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Leap</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Leap.java" line="11" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Leap.java" bodystart="11" bodyend="12"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::LeapJNI</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a62d8f8fe1f94fd062c7d816bd4e6a72e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.BoolArray_add</definition>
        <argsstring>(long jarg1, BoolArray jarg1_, boolean jarg2)</argsstring>
        <name>BoolArray_add</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>BoolArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="19"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab20f45a39d86395ba1b239a479a8cb6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.BoolArray_capacity</definition>
        <argsstring>(long jarg1, BoolArray jarg1_)</argsstring>
        <name>BoolArray_capacity</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>BoolArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="15"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a76d7d3b5c0fac7e7ae26377e3a94e546" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.BoolArray_clear</definition>
        <argsstring>(long jarg1, BoolArray jarg1_)</argsstring>
        <name>BoolArray_clear</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>BoolArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="18"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a51fa2c87eccdd7558718d6da15d6e48c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.BoolArray_get</definition>
        <argsstring>(long jarg1, BoolArray jarg1_, int jarg2)</argsstring>
        <name>BoolArray_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>BoolArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="20"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adfcb179f943dbcfbaf52139af913b95b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.BoolArray_isEmpty</definition>
        <argsstring>(long jarg1, BoolArray jarg1_)</argsstring>
        <name>BoolArray_isEmpty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>BoolArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="17"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a86bd0c6622ee68a9e2f3bd2d654bc830" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.BoolArray_reserve</definition>
        <argsstring>(long jarg1, BoolArray jarg1_, long jarg2)</argsstring>
        <name>BoolArray_reserve</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>BoolArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="16"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4667975c5ad6bcd6a42508969b8f7c15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.BoolArray_set</definition>
        <argsstring>(long jarg1, BoolArray jarg1_, int jarg2, boolean jarg3)</argsstring>
        <name>BoolArray_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>BoolArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="21"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aff45909368aa60e74c3b85ef00f6cbc0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.BoolArray_size</definition>
        <argsstring>(long jarg1, BoolArray jarg1_)</argsstring>
        <name>BoolArray_size</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>BoolArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="14"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6808da48502ad74b106b352f1fba0011" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.CircleGesture_center</definition>
        <argsstring>(long jarg1, CircleGesture jarg1_)</argsstring>
        <name>CircleGesture_center</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="229"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aec1ed2157254e01ebd2bd0582edb3c5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.CircleGesture_classType</definition>
        <argsstring>()</argsstring>
        <name>CircleGesture_classType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="226"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac750f0b82ad2ecf9badd38de2608d1f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.CircleGesture_normal</definition>
        <argsstring>(long jarg1, CircleGesture jarg1_)</argsstring>
        <name>CircleGesture_normal</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="230"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7443bc42e47de70465340efb14019410" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.CircleGesture_pointable</definition>
        <argsstring>(long jarg1, CircleGesture jarg1_)</argsstring>
        <name>CircleGesture_pointable</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="233"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a671bcf2303cb135f87b2e396392a3c3a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.CircleGesture_progress</definition>
        <argsstring>(long jarg1, CircleGesture jarg1_)</argsstring>
        <name>CircleGesture_progress</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="231"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a738ab9df766b4cc48106116f8d8fcd84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.CircleGesture_radius</definition>
        <argsstring>(long jarg1, CircleGesture jarg1_)</argsstring>
        <name>CircleGesture_radius</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound">CircleGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="232"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a858cf8a058d5c6d4f8ef0bcd753a3d29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.CircleGesture_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>CircleGesture_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="387"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2beb0263a66e691878d15c4791570f4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Config_getBool</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getBool</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="339"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a524e2b6acee759248dd4002b57910c3a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Config_getBoolArray</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getBoolArray</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="347"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad091583bf0432dfb2e5d07eb6c2f72cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native double</type>
        <definition>static final native double com.leapmotion.leap.LeapJNI.Config_getDouble</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getDouble</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="345"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a04dc6c8c13351da8be8ea778ed1d9fdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Config_getDoubleArray</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getDoubleArray</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="351"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae951b6a09a06de557587bac9f704031c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Config_getFloat</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getFloat</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="344"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8895f112a3a1ee6ff03a415138060381" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Config_getFloatArray</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getFloatArray</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="350"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1be788e97a7e32292092ff9418991f2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Config_getInt32</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getInt32</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="340"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3c4ee5c99773ad90193d56da58f6ad04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Config_getInt32Array</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getInt32Array</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="348"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1add065b5c1a75eab475c8ddcc3c5d4e34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Config_getInt64</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getInt64</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="341"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4429d4e0ae7087a74abaa9de8e682cbd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Config_getString</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="346"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7fcb31989e2e4c8ea96692269fe84795" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Config_getStringArray</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getStringArray</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="352"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad0fc601edbad34722078c876e8f2a48e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Config_getUInt32</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getUInt32</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="342"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad3a0131c7d904fc9a4000fa06592df11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Config_getUInt32Array</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getUInt32Array</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="349"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adf21d009ce6f892d35e2beba30a1ea5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native java.math.BigInteger</type>
        <definition>static final native java.math.BigInteger com.leapmotion.leap.LeapJNI.Config_getUInt64</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_getUInt64</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="343"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a38f53ae2b7676e189bf1b8cd435eda9b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Config_isArray</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_isArray</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="338"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a579791e59c00ef25f9da5bb0856f1dc9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Config_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>Config_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="398"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afc90521460c3b8fb57ada463c8bd06c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Config_type</definition>
        <argsstring>(long jarg1, Config jarg1_, String jarg2)</argsstring>
        <name>Config_type</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound">Config</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="337"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac1b8ff95d6c2a2607eadfd80b8f66922" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Controller_addListener</definition>
        <argsstring>(long jarg1, Controller jarg1_, long jarg2, Listener jarg2_)</argsstring>
        <name>Controller_addListener</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="358"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4bae7cc9d69e570eebe8fe1fe3286074" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Controller_calibratedScreens</definition>
        <argsstring>(long jarg1, Controller jarg1_)</argsstring>
        <name>Controller_calibratedScreens</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="363"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3351cab0ac2fb63a5c717533d7c767b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Controller_config</definition>
        <argsstring>(long jarg1, Controller jarg1_)</argsstring>
        <name>Controller_config</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="362"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ada92825bcc136ad0e7d03e8c36599c76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Controller_enableGesture__SWIG_0</definition>
        <argsstring>(long jarg1, Controller jarg1_, int jarg2, boolean jarg3)</argsstring>
        <name>Controller_enableGesture__SWIG_0</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="364"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4525d3cf72388e2fe983309930e75235" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Controller_enableGesture__SWIG_1</definition>
        <argsstring>(long jarg1, Controller jarg1_, int jarg2)</argsstring>
        <name>Controller_enableGesture__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="365"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a777e6eea613413e4f5cc707c089aa5dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Controller_frame__SWIG_0</definition>
        <argsstring>(long jarg1, Controller jarg1_, int jarg2)</argsstring>
        <name>Controller_frame__SWIG_0</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="360"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aef820f2ce32bd1f74d747c5d8d10d7ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Controller_frame__SWIG_1</definition>
        <argsstring>(long jarg1, Controller jarg1_)</argsstring>
        <name>Controller_frame__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="361"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a50df68709aa95c1f71e620f164d95fac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Controller_isConnected</definition>
        <argsstring>(long jarg1, Controller jarg1_)</argsstring>
        <name>Controller_isConnected</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="357"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af5d076b61198741dcbda627e988ce34e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Controller_isGestureEnabled</definition>
        <argsstring>(long jarg1, Controller jarg1_, int jarg2)</argsstring>
        <name>Controller_isGestureEnabled</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="366"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a01f5cb8edcad6053923d4afedbb69f21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Controller_removeListener</definition>
        <argsstring>(long jarg1, Controller jarg1_, long jarg2, Listener jarg2_)</argsstring>
        <name>Controller_removeListener</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="359"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a82ab683d3cb9d9fca0b54a3917585b30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Controller_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>Controller_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="399"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad4d59318ef9e83ac9a421d21a048cf68" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_BoolArray</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_BoolArray</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="22"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab87f4299fa9788149a4ab608cfcca4be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_CircleGesture</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_CircleGesture</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="234"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1db1c2c21d069f8020bb599fa33055a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Config</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Config</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="353"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2593b0523ad5103147c5d7a0f2274e64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Controller</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Controller</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="355"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a79657b879b537462e2da33b7eaae76c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_DoubleArray</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_DoubleArray</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="66"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a41a79c99def54244856a8224a45c3d45" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Finger</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Finger</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="170"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae8ccad5531139c33a23cdb98943cf192" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_FingerList</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_FingerList</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="284"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a97fbe21b14d05452d21f28bd000ae6c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_FloatArray</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_FloatArray</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="55"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abd28a15abe20708e1da4cfce1b8ff142" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Frame</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Frame</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="335"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8b5d761f8bd156f8b5f519b436ba1c1d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Gesture</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Gesture</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="216"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abab2092abda043642c34413de1823152" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_GestureList</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_GestureList</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="302"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a757f6edf8bb4ffb7a49cdf335d2e1a83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Hand</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Hand</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="201"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a30db2df660632cbc62b8b4f1d4a90735" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_HandList</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_HandList</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="296"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad173c0cf8cb90b57b1331182a8f023bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Int32Array</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Int32Array</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="33"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a89947250e57169cc3a186d657d91d3f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_KeyTapGesture</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_KeyTapGesture</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="250"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af09671b2bd3c03da294aa54c76d32c1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Listener</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Listener</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="368"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a560eddd8f17300e18a8dcb49966c0cd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Matrix</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Matrix</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="149"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7d6f5abcc8366cb16204e35e150893b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Pointable</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Pointable</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="165"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a408ae0a83e3d8d07b08a2c81a6870530" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_PointableList</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_PointableList</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="278"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8ec9560d9e00e946c1847bf7caeb42c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Screen</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Screen</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="270"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7e24dbf360df1fcdda33cd7cbde9a454" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_ScreenList</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_ScreenList</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="310"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af05b446d4bc796e9c9f13446be24bc18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_ScreenTapGesture</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_ScreenTapGesture</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="242"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aeb18374d7eb5739d62cfcb815fd1373d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_StringArray</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_StringArray</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="77"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae7b60d8df3f177cf7d0fc6d40511fe34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_SwipeGesture</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_SwipeGesture</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="225"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a08816cbc0e078e8102a918108867180b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Tool</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Tool</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="175"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa1d34c3b891c423f5ea43f60665cea90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_ToolList</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_ToolList</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="290"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aea6f6769f0975042bcbbca32dabe1551" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_UInt32Array</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_UInt32Array</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="44"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a764c21c8fe5a660a4b7bf37d2810232a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.delete_Vector</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>delete_Vector</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="126"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af0f2d598c3910834f52e512c0c857d15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.DoubleArray_add</definition>
        <argsstring>(long jarg1, DoubleArray jarg1_, double jarg2)</argsstring>
        <name>DoubleArray_add</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>DoubleArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="63"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad2203b0774600ac0df6d409cc05b3486" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.DoubleArray_capacity</definition>
        <argsstring>(long jarg1, DoubleArray jarg1_)</argsstring>
        <name>DoubleArray_capacity</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>DoubleArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="59"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a05343c770b50bf788fa5dc1dbad20ed6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.DoubleArray_clear</definition>
        <argsstring>(long jarg1, DoubleArray jarg1_)</argsstring>
        <name>DoubleArray_clear</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>DoubleArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="62"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae9c1c5609e4d262f137e94d3ade7fd95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native double</type>
        <definition>static final native double com.leapmotion.leap.LeapJNI.DoubleArray_get</definition>
        <argsstring>(long jarg1, DoubleArray jarg1_, int jarg2)</argsstring>
        <name>DoubleArray_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>DoubleArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae60c8cce48d7919b714da7e8ee421d79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.DoubleArray_isEmpty</definition>
        <argsstring>(long jarg1, DoubleArray jarg1_)</argsstring>
        <name>DoubleArray_isEmpty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>DoubleArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="61"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6b3cef051602b394cb9377159fbb774c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.DoubleArray_reserve</definition>
        <argsstring>(long jarg1, DoubleArray jarg1_, long jarg2)</argsstring>
        <name>DoubleArray_reserve</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>DoubleArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="60"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af075af85dcdb917b845ab3a60b8597b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.DoubleArray_set</definition>
        <argsstring>(long jarg1, DoubleArray jarg1_, int jarg2, double jarg3)</argsstring>
        <name>DoubleArray_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>DoubleArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="65"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aeb67056fb97649bc9e95f7717fc63a8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.DoubleArray_size</definition>
        <argsstring>(long jarg1, DoubleArray jarg1_)</argsstring>
        <name>DoubleArray_size</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>DoubleArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="58"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a32725be5620ec730534c34fe396165dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Finger_invalid</definition>
        <argsstring>()</argsstring>
        <name>Finger_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="168"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aecda9738e92d7d17c585bc29b17ce7b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Finger_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>Finger_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="382"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1e9299c82139f954165788f69a60e4e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Finger_toString</definition>
        <argsstring>(long jarg1, Finger jarg1_)</argsstring>
        <name>Finger_toString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="169"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8cd0970b2b3516769a2a2354f322981d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.FingerList_append</definition>
        <argsstring>(long jarg1, FingerList jarg1_, long jarg2, FingerList jarg2_)</argsstring>
        <name>FingerList_append</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="283"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9265126d2fd3513f74f0793585689b85" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.FingerList_count</definition>
        <argsstring>(long jarg1, FingerList jarg1_)</argsstring>
        <name>FingerList_count</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="280"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afab89ddcc1185c3aad95aba2a8220dad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.FingerList_empty</definition>
        <argsstring>(long jarg1, FingerList jarg1_)</argsstring>
        <name>FingerList_empty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="281"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab8a85abff1d4d5e015d2bd3ab3d994c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.FingerList_get</definition>
        <argsstring>(long jarg1, FingerList jarg1_, int jarg2)</argsstring>
        <name>FingerList_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="282"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab91a700671dfcababcb429a175780ebe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.FingerList_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>FingerList_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="392"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a03ee6f61cd5bc4d90f715e05b74232db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.FloatArray_add</definition>
        <argsstring>(long jarg1, FloatArray jarg1_, float jarg2)</argsstring>
        <name>FloatArray_add</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>FloatArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="52"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8ab3a2f228de8b778ac6a569354a6725" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.FloatArray_capacity</definition>
        <argsstring>(long jarg1, FloatArray jarg1_)</argsstring>
        <name>FloatArray_capacity</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>FloatArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5a02fb6b60604db9a08440ae4a862a12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.FloatArray_clear</definition>
        <argsstring>(long jarg1, FloatArray jarg1_)</argsstring>
        <name>FloatArray_clear</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>FloatArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="51"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a610a3195d8c11d4c8d9df4234d5d7f8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.FloatArray_get</definition>
        <argsstring>(long jarg1, FloatArray jarg1_, int jarg2)</argsstring>
        <name>FloatArray_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>FloatArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acc92780e0bcb6f94c0c921a3274a15a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.FloatArray_isEmpty</definition>
        <argsstring>(long jarg1, FloatArray jarg1_)</argsstring>
        <name>FloatArray_isEmpty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>FloatArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="50"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a751ebe1cd0a823bd807d185b36e3a7c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.FloatArray_reserve</definition>
        <argsstring>(long jarg1, FloatArray jarg1_, long jarg2)</argsstring>
        <name>FloatArray_reserve</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>FloatArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="49"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0a433443ebc731506731c47bdef6e438" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.FloatArray_set</definition>
        <argsstring>(long jarg1, FloatArray jarg1_, int jarg2, float jarg3)</argsstring>
        <name>FloatArray_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>FloatArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="54"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af16e0ba8cf301b25530b6acae1e798a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.FloatArray_size</definition>
        <argsstring>(long jarg1, FloatArray jarg1_)</argsstring>
        <name>FloatArray_size</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>FloatArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="47"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad34e46e51728afa95c8ec7b5623aee9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Frame_equals</definition>
        <argsstring>(long jarg1, Frame jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Frame_equals</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="333"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ada35aa41eefb559d364ce2dcfb4678b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_finger</definition>
        <argsstring>(long jarg1, Frame jarg1_, int jarg2)</argsstring>
        <name>Frame_finger</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="319"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a967a2ac32206ab5eaf503bd74f63a2c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_fingers</definition>
        <argsstring>(long jarg1, Frame jarg1_)</argsstring>
        <name>Frame_fingers</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="318"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8d7c5b84b5099bf197100d498c99ff54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_gesture</definition>
        <argsstring>(long jarg1, Frame jarg1_, int jarg2)</argsstring>
        <name>Frame_gesture</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="322"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad35a50a49619550af8cbadbf4abf6ffb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_gestures__SWIG_0</definition>
        <argsstring>(long jarg1, Frame jarg1_)</argsstring>
        <name>Frame_gestures__SWIG_0</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="323"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac2a5413f7d6f4155983758a67de5c803" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_gestures__SWIG_1</definition>
        <argsstring>(long jarg1, Frame jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Frame_gestures__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="324"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9a0e8443699c1fa5e314845e4196026b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_hand</definition>
        <argsstring>(long jarg1, Frame jarg1_, int jarg2)</argsstring>
        <name>Frame_hand</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="315"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acffb2545f2df723763da117ae2326837" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_hands</definition>
        <argsstring>(long jarg1, Frame jarg1_)</argsstring>
        <name>Frame_hands</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="314"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a888f267f39e4f8a86bba638bc2178723" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_id</definition>
        <argsstring>(long jarg1, Frame jarg1_)</argsstring>
        <name>Frame_id</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="312"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a268b28c7abad8ea64c32eba7786e325c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_invalid</definition>
        <argsstring>()</argsstring>
        <name>Frame_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="332"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2510122c9c67e5924031d3d4a504dea1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Frame_isValid</definition>
        <argsstring>(long jarg1, Frame jarg1_)</argsstring>
        <name>Frame_isValid</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="331"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa5d517013094afdf4dfc0c189aaa4f76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_pointable</definition>
        <argsstring>(long jarg1, Frame jarg1_, int jarg2)</argsstring>
        <name>Frame_pointable</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="317"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afcc5dfe78a78faae44b612157a711a07" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_pointables</definition>
        <argsstring>(long jarg1, Frame jarg1_)</argsstring>
        <name>Frame_pointables</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="316"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a58b0a7f5200cf9c52b51c7fa6f0bae67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Frame_rotationAngle__SWIG_0</definition>
        <argsstring>(long jarg1, Frame jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Frame_rotationAngle__SWIG_0</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="327"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aecc744e314e6514f2ebb582c6cd7a6ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Frame_rotationAngle__SWIG_1</definition>
        <argsstring>(long jarg1, Frame jarg1_, long jarg2, Frame jarg2_, long jarg3, Vector jarg3_)</argsstring>
        <name>Frame_rotationAngle__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="328"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a54f4db8aec004c19c722195087935dda" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_rotationAxis</definition>
        <argsstring>(long jarg1, Frame jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Frame_rotationAxis</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="326"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac6cc0a72d7426e5b498993e1e2ee15de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_rotationMatrix</definition>
        <argsstring>(long jarg1, Frame jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Frame_rotationMatrix</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="329"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a77bfb23ed9100012defcc42f8fc49c8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Frame_scaleFactor</definition>
        <argsstring>(long jarg1, Frame jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Frame_scaleFactor</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="330"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a83949134711e0a040ce7ca859e4edd05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>Frame_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="397"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a16499f95dea29667eaa012b809bf8773" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_timestamp</definition>
        <argsstring>(long jarg1, Frame jarg1_)</argsstring>
        <name>Frame_timestamp</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="313"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4a6c44ba3c8de34eb11c4be00509752d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_tool</definition>
        <argsstring>(long jarg1, Frame jarg1_, int jarg2)</argsstring>
        <name>Frame_tool</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="321"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac8f9a4400dccde4fafef989f25ecc815" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_tools</definition>
        <argsstring>(long jarg1, Frame jarg1_)</argsstring>
        <name>Frame_tools</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="320"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af33f3faae33dea906aa4158e1cb9e589" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Frame_toString</definition>
        <argsstring>(long jarg1, Frame jarg1_)</argsstring>
        <name>Frame_toString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="334"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a655eb8041307d5f8bff526fd080511d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Frame_translation</definition>
        <argsstring>(long jarg1, Frame jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Frame_translation</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="325"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2e3255854813a3e82af8c43840727f93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Gesture_duration</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_duration</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="207"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a71901acfca2ee36e6d30d883fe1fcf7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Gesture_durationSeconds</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_durationSeconds</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="208"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2a5f40c0ab67b0f0ae810fee83b2a604" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Gesture_equals</definition>
        <argsstring>(long jarg1, Gesture jarg1_, long jarg2, Gesture jarg2_)</argsstring>
        <name>Gesture_equals</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="213"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5c6f8e4ebe4c86c8060324619c9ae8ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Gesture_frame</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_frame</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="209"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a353e06d33d99fd8eb37789c0d8970766" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Gesture_hands</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_hands</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="210"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaba2b1ef1665680837218d864474f368" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Gesture_id</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_id</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="206"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a96198b068ccf19a32132de3140e423ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Gesture_invalid</definition>
        <argsstring>()</argsstring>
        <name>Gesture_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="215"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acea895c13a750c6526208d4b383030dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Gesture_isValid</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_isValid</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="212"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a96613b14c501e768e363745f88699c5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Gesture_pointables</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_pointables</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="211"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a60074946d7ddd55f1b993d7a42f3b865" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Gesture_state</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_state</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="205"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8fb72cf9535ffca3a5b348b7793af0e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Gesture_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>Gesture_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="385"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1ed046f6d81d8be03b1de50dabb4fde6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Gesture_toString</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_toString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="214"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4dc81a9f093762f2119ee6aadce10569" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Gesture_type</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>Gesture_type</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="204"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a98b2d93f98f007b8495dc55af27583b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.GestureList_append</definition>
        <argsstring>(long jarg1, GestureList jarg1_, long jarg2, GestureList jarg2_)</argsstring>
        <name>GestureList_append</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="301"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3de006c8ed75cd6768e4c9184674e1df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.GestureList_count</definition>
        <argsstring>(long jarg1, GestureList jarg1_)</argsstring>
        <name>GestureList_count</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="298"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a88ce09d68a000ca347244e30802fbf1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.GestureList_empty</definition>
        <argsstring>(long jarg1, GestureList jarg1_)</argsstring>
        <name>GestureList_empty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="299"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3f9599f6422095d01e883ea010bb33e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.GestureList_get</definition>
        <argsstring>(long jarg1, GestureList jarg1_, int jarg2)</argsstring>
        <name>GestureList_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound">GestureList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="300"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaed706d8bf59267caeb184e9dbf7ff0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.GestureList_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>GestureList_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="395"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a316ef4223dbfda74ea263c304a70beda" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_direction</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_direction</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="188"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac4676d2d8e808dcdde2f498ee117b592" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Hand_equals</definition>
        <argsstring>(long jarg1, Hand jarg1_, long jarg2, Hand jarg2_)</argsstring>
        <name>Hand_equals</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="199"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4383abfccfc091babab2dfa39562c87b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_finger</definition>
        <argsstring>(long jarg1, Hand jarg1_, int jarg2)</argsstring>
        <name>Hand_finger</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="182"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa67b61f40850010a484baa6e6e01f518" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_fingers</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_fingers</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="181"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4b722cbf70639e15e3b35b138790fc9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_frame</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_frame</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="178"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af47347ad72fc2d81137139940ab89b3a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Hand_id</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_id</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="177"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4c7f83bea12955f6845363e5931bbcbd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_invalid</definition>
        <argsstring>()</argsstring>
        <name>Hand_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="198"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3d5ee8f2beb581ca1f7495607c849bb9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Hand_isValid</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_isValid</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="197"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a23397fe3d5027bc3adde87365d54ca55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_palmNormal</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_palmNormal</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="187"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af410ba5ad7124f52263eb7889a64560f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_palmPosition</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_palmPosition</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="185"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab915eae34c81c68811f0875254d7c5a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_palmVelocity</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_palmVelocity</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="186"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a197c124f266a91bcaf108127b2370d7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_pointable</definition>
        <argsstring>(long jarg1, Hand jarg1_, int jarg2)</argsstring>
        <name>Hand_pointable</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="180"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0cf377a78fcad7b3171e6bc478f6afc7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_pointables</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_pointables</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="179"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3b4259993991dd1cc06f4fce79acd9e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Hand_rotationAngle__SWIG_0</definition>
        <argsstring>(long jarg1, Hand jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Hand_rotationAngle__SWIG_0</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="193"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abbbc7e699924e3170bdebb27d5497d29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Hand_rotationAngle__SWIG_1</definition>
        <argsstring>(long jarg1, Hand jarg1_, long jarg2, Frame jarg2_, long jarg3, Vector jarg3_)</argsstring>
        <name>Hand_rotationAngle__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="194"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a560fdf29d43c2b2f36fba58b7575906f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_rotationAxis</definition>
        <argsstring>(long jarg1, Hand jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Hand_rotationAxis</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="192"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa87155dcb93bf6a7cb582c45bef1d258" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_rotationMatrix</definition>
        <argsstring>(long jarg1, Hand jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Hand_rotationMatrix</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="195"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a385451678f42e05e9dbf65349afaa7a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Hand_scaleFactor</definition>
        <argsstring>(long jarg1, Hand jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Hand_scaleFactor</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="196"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa259c99bf925ef618f2e0e1032520c53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_sphereCenter</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_sphereCenter</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="189"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acfa4f87f2c6ad2832ba58d9845a31e6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Hand_sphereRadius</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_sphereRadius</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="190"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afaf7015965d7f62666d7c8ca46ceeff6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>Hand_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="384"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1c880fd786d1d80f19fe2f4c5d50f077" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_tool</definition>
        <argsstring>(long jarg1, Hand jarg1_, int jarg2)</argsstring>
        <name>Hand_tool</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="184"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a001c5fb98bf38fb80616160499598b1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_tools</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_tools</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="183"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad22cb0de0ebe7bf873e940a8b5e43f03" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Hand_toString</definition>
        <argsstring>(long jarg1, Hand jarg1_)</argsstring>
        <name>Hand_toString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="200"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a59338372ad15c6fad7eba9a6aee1075a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Hand_translation</definition>
        <argsstring>(long jarg1, Hand jarg1_, long jarg2, Frame jarg2_)</argsstring>
        <name>Hand_translation</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="191"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae3989408ba148176d533212e670df022" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.HandList_append</definition>
        <argsstring>(long jarg1, HandList jarg1_, long jarg2, HandList jarg2_)</argsstring>
        <name>HandList_append</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="295"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a157b21f2976089cf373755cf65f9b309" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.HandList_count</definition>
        <argsstring>(long jarg1, HandList jarg1_)</argsstring>
        <name>HandList_count</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="292"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1b9093885891d83c72fe2e1e253a9696" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.HandList_empty</definition>
        <argsstring>(long jarg1, HandList jarg1_)</argsstring>
        <name>HandList_empty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="293"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac537a219cd7ac0b967ad4c34c668cddc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.HandList_get</definition>
        <argsstring>(long jarg1, HandList jarg1_, int jarg2)</argsstring>
        <name>HandList_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound">HandList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="294"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad6f60f156dcf77aabe3e1d964475a3cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.HandList_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>HandList_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="394"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a84f572b0b08ec8790150a64f79b79d74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Int32Array_add</definition>
        <argsstring>(long jarg1, Int32Array jarg1_, int jarg2)</argsstring>
        <name>Int32Array_add</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>Int32Array</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="30"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac281936c18efa0f04c2c2188119dea78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Int32Array_capacity</definition>
        <argsstring>(long jarg1, Int32Array jarg1_)</argsstring>
        <name>Int32Array_capacity</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>Int32Array</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="26"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aacaa6589965ef0503e2837cafe271d03" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Int32Array_clear</definition>
        <argsstring>(long jarg1, Int32Array jarg1_)</argsstring>
        <name>Int32Array_clear</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>Int32Array</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="29"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a32bdd9c0d8ea7244555fdcedb22e5035" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Int32Array_get</definition>
        <argsstring>(long jarg1, Int32Array jarg1_, int jarg2)</argsstring>
        <name>Int32Array_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>Int32Array</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="31"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad04439ddcac8d514433f92ff06866616" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Int32Array_isEmpty</definition>
        <argsstring>(long jarg1, Int32Array jarg1_)</argsstring>
        <name>Int32Array_isEmpty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>Int32Array</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="28"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa790f8654705f33c1768769896209d20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Int32Array_reserve</definition>
        <argsstring>(long jarg1, Int32Array jarg1_, long jarg2)</argsstring>
        <name>Int32Array_reserve</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>Int32Array</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="27"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab3fe2dc2d215f142a8ec047a122a2747" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Int32Array_set</definition>
        <argsstring>(long jarg1, Int32Array jarg1_, int jarg2, int jarg3)</argsstring>
        <name>Int32Array_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>Int32Array</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="32"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3f49d723a2949598a21de2d2ef25171c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Int32Array_size</definition>
        <argsstring>(long jarg1, Int32Array jarg1_)</argsstring>
        <name>Int32Array_size</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>Int32Array</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="25"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adb912d08e0b3c5ba9465f3c6b2cbc09c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.KeyTapGesture_classType</definition>
        <argsstring>()</argsstring>
        <name>KeyTapGesture_classType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="243"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a974e8408a425d225335c2d399ed1128b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.KeyTapGesture_direction</definition>
        <argsstring>(long jarg1, KeyTapGesture jarg1_)</argsstring>
        <name>KeyTapGesture_direction</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="247"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aea454f60fca1f799561b70a8fdd334b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.KeyTapGesture_pointable</definition>
        <argsstring>(long jarg1, KeyTapGesture jarg1_)</argsstring>
        <name>KeyTapGesture_pointable</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="249"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aad4f398f494e6f82f900ec6cdbc5b686" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.KeyTapGesture_position</definition>
        <argsstring>(long jarg1, KeyTapGesture jarg1_)</argsstring>
        <name>KeyTapGesture_position</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="246"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae7ab7eae0639f6b1388dc988eb1f0f9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.KeyTapGesture_progress</definition>
        <argsstring>(long jarg1, KeyTapGesture jarg1_)</argsstring>
        <name>KeyTapGesture_progress</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound">KeyTapGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="248"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4f30f190bda9cf4a201fac4bd6993b75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.KeyTapGesture_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>KeyTapGesture_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="389"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac0e81e7dcf605a246307d63a75d8d287" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_change_ownership</definition>
        <argsstring>(Listener obj, long cptr, boolean take_or_release)</argsstring>
        <name>Listener_change_ownership</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type>long</type>
          <declname>cptr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>take_or_release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="380"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaadc4ca54cfabe1a25034197e936ba87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_director_connect</definition>
        <argsstring>(Listener obj, long cptr, boolean mem_own, boolean weak_global)</argsstring>
        <name>Listener_director_connect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type>long</type>
          <declname>cptr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>mem_own</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>weak_global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="379"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a014ee2d73c19bfe5b7a742254a11f7b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onConnect</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onConnect</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="371"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a22e93ace0467cfadedfa5185680e0bc1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onConnectSwigExplicitListener</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onConnectSwigExplicitListener</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="372"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abd597b41d3524c540c78ce11f5856e07" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onDisconnect</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onDisconnect</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="373"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa58196d5d82fb358595e5da0526c915e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onDisconnectSwigExplicitListener</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onDisconnectSwigExplicitListener</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="374"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ace1a07b7d252bf33e758b6ac43c2516f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onExit</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onExit</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="375"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af261ebf2d947f77c7fc2ebeb20fdf047" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onExitSwigExplicitListener</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onExitSwigExplicitListener</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="376"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a92fe1338510aa944a18f59b85cf66511" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onFrame</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onFrame</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="377"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af59b1ff179ed72adfd6b827d702d018d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onFrameSwigExplicitListener</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onFrameSwigExplicitListener</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="378"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab6d6f91d0e8a95e158011213d9af68dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onInit</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onInit</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="369"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acb4980913fa4672a24e78a19703dc6fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Listener_onInitSwigExplicitListener</definition>
        <argsstring>(long jarg1, Listener jarg1_, long jarg2, Controller jarg2_)</argsstring>
        <name>Listener_onInitSwigExplicitListener</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="370"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1da0904e36669c168779fed06c43ed2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Matrix_equals</definition>
        <argsstring>(long jarg1, Matrix jarg1_, long jarg2, Matrix jarg2_)</argsstring>
        <name>Matrix_equals</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="139"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a299b68d2e55961ae65caca0fab307bb4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Matrix_identity</definition>
        <argsstring>()</argsstring>
        <name>Matrix_identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="133"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0a1521c6ccdd7596e29a51dca3ed5c2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Matrix_origin_get</definition>
        <argsstring>(long jarg1, Matrix jarg1_)</argsstring>
        <name>Matrix_origin_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="148"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a75f587e95db3737b89b0f5956ea80bd3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Matrix_origin_set</definition>
        <argsstring>(long jarg1, Matrix jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Matrix_origin_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="147"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad4d9a112f57e069da8bf37a7f3ac2d40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Matrix_rigidInverse</definition>
        <argsstring>(long jarg1, Matrix jarg1_)</argsstring>
        <name>Matrix_rigidInverse</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="137"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a11283700bd488e0adcfac27576d7b57e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Matrix_setRotation</definition>
        <argsstring>(long jarg1, Matrix jarg1_, long jarg2, Vector jarg2_, float jarg3)</argsstring>
        <name>Matrix_setRotation</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="134"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a84f0cdb098ae6896bcf4bd9b21c4d8ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Matrix_times</definition>
        <argsstring>(long jarg1, Matrix jarg1_, long jarg2, Matrix jarg2_)</argsstring>
        <name>Matrix_times</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="138"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acc3a74c9274937146114d1809279b5d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Matrix_toString</definition>
        <argsstring>(long jarg1, Matrix jarg1_)</argsstring>
        <name>Matrix_toString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="140"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aed54762cd47bc02c7bbc50af49613c7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Matrix_transformDirection</definition>
        <argsstring>(long jarg1, Matrix jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Matrix_transformDirection</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="136"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8afa21afcee7706875e73b200bf240b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Matrix_transformPoint</definition>
        <argsstring>(long jarg1, Matrix jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Matrix_transformPoint</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="135"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a02c9b18a2a692a5045899dbffdbb9352" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Matrix_xBasis_get</definition>
        <argsstring>(long jarg1, Matrix jarg1_)</argsstring>
        <name>Matrix_xBasis_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="142"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a087e715ca87767bdd15a4fa8ee0790a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Matrix_xBasis_set</definition>
        <argsstring>(long jarg1, Matrix jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Matrix_xBasis_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="141"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa8e7f453a08f246e3c6525e7217d05b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Matrix_yBasis_get</definition>
        <argsstring>(long jarg1, Matrix jarg1_)</argsstring>
        <name>Matrix_yBasis_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="144"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6b8b0dd3dd684ebffde34ae91a9bd383" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Matrix_yBasis_set</definition>
        <argsstring>(long jarg1, Matrix jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Matrix_yBasis_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="143"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9dfe8e328c614a7b213500971f2c8c98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Matrix_zBasis_get</definition>
        <argsstring>(long jarg1, Matrix jarg1_)</argsstring>
        <name>Matrix_zBasis_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="146"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3c313a76e3f25135c03fed385b35d118" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Matrix_zBasis_set</definition>
        <argsstring>(long jarg1, Matrix jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Matrix_zBasis_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="145"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1b4a44a5cd6ca3ba21740adeb55c8b84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_BoolArray__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_BoolArray__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="12"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a767de2248f7eb922def0704f19012301" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_BoolArray__SWIG_1</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>new_BoolArray__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="13"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a89f404c47645ca457a9633654d4cd226" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_CircleGesture__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_CircleGesture__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="227"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9b770051838aaf2c23a2202d08b9b169" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_CircleGesture__SWIG_1</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>new_CircleGesture__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="228"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a472c2d9f0441d88a525d8eed4828a4d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Config</definition>
        <argsstring>()</argsstring>
        <name>new_Config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="336"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a322efb5670c6f511ab94e6e3f77dceb3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Controller__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_Controller__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="354"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad72250b824efd121b27f79cf69d18a8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Controller__SWIG_1</definition>
        <argsstring>(long jarg1, Listener jarg1_)</argsstring>
        <name>new_Controller__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="356"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acdb387d17a84d5ab19372d3afabcecbc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_DoubleArray__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_DoubleArray__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="56"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae295118674796b4953972f2c76cc6f2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_DoubleArray__SWIG_1</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>new_DoubleArray__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="57"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9267ea9c561501709b91a02fa045e5b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Finger__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_Finger__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="166"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a06def438d168e931553cee1e0bdaef9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Finger__SWIG_1</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>new_Finger__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="167"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a16feeb175b057e21ae6c255939b177b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_FingerList</definition>
        <argsstring>()</argsstring>
        <name>new_FingerList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="279"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa25ee5e0cd13711bc0a6069d35fcec77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_FloatArray__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_FloatArray__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="45"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a229d477a01f2d01f773d34eff18ac5b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_FloatArray__SWIG_1</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>new_FloatArray__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="46"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a516642620625393a064e20e3518d756f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Frame</definition>
        <argsstring>()</argsstring>
        <name>new_Frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="311"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a29c17fc61646ab6cf16ae83f70f1f227" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Gesture__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_Gesture__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="202"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2b7fa5261bcadbf6b31d6f2829878a58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Gesture__SWIG_1</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>new_Gesture__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="203"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4b5a3b87ce3ac4f5f53661364c5be6ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_GestureList</definition>
        <argsstring>()</argsstring>
        <name>new_GestureList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="297"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a29b4dd24a6d1c26cdabc4c6805ecfe31" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Hand</definition>
        <argsstring>()</argsstring>
        <name>new_Hand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="176"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7567eca0b5d37937ca21a65b60224bbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_HandList</definition>
        <argsstring>()</argsstring>
        <name>new_HandList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="291"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0be56d4f7365615542bda8598ab55e84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Int32Array__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_Int32Array__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="23"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af85f97b5029df3d1a61d8e08d6d2822d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Int32Array__SWIG_1</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>new_Int32Array__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="24"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a26269fac75d266fa69e6b3a8b9107569" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_KeyTapGesture__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_KeyTapGesture__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="244"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a11ba693960ea3d5eda6f88df8439ed96" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_KeyTapGesture__SWIG_1</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>new_KeyTapGesture__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="245"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aca44ea11dbffc87e5a5b6855f091fbe5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Listener</definition>
        <argsstring>()</argsstring>
        <name>new_Listener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="367"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7f40ab38f1db2a04e1c60109b4246fe6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Matrix__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_Matrix__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="127"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aad6d8cb5e2dcd1c9df9dd79df08dd329" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Matrix__SWIG_1</definition>
        <argsstring>(long jarg1, Matrix jarg1_)</argsstring>
        <name>new_Matrix__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="128"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3850ed206a7f443ee05d2b14108a9b4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Matrix__SWIG_2</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2, Vector jarg2_, long jarg3, Vector jarg3_)</argsstring>
        <name>new_Matrix__SWIG_2</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="129"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a833609826c243dd02416bd0a7e1e8a50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Matrix__SWIG_3</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2, Vector jarg2_, long jarg3, Vector jarg3_, long jarg4, Vector jarg4_)</argsstring>
        <name>new_Matrix__SWIG_3</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg3_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg4</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg4_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="130"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a46ddc1450c1e3d569c60c8140cfe7752" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Matrix__SWIG_4</definition>
        <argsstring>(long jarg1, Vector jarg1_, float jarg2)</argsstring>
        <name>new_Matrix__SWIG_4</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="131"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a41d71d1615c883e3d31989be0c8e4376" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Matrix__SWIG_5</definition>
        <argsstring>(long jarg1, Vector jarg1_, float jarg2, long jarg3, Vector jarg3_)</argsstring>
        <name>new_Matrix__SWIG_5</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="132"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a16bd6fc212f29e7094a341c640f28e94" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Pointable</definition>
        <argsstring>()</argsstring>
        <name>new_Pointable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="150"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a868be21adf9b7a88a63917198310a2ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_PointableList</definition>
        <argsstring>()</argsstring>
        <name>new_PointableList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="271"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adefc813b8f9255ebbc3b17dbe488f3fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Screen</definition>
        <argsstring>()</argsstring>
        <name>new_Screen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="251"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acc98ec43a364e963e85bf4289dab4802" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_ScreenList</definition>
        <argsstring>()</argsstring>
        <name>new_ScreenList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="303"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abc62cf47d044148ebbccc3ac76b5558d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_ScreenTapGesture__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_ScreenTapGesture__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="236"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aabcf14df965e3f3c55fb01eba2d0b10c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_ScreenTapGesture__SWIG_1</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>new_ScreenTapGesture__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="237"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1addaf2ec08c5e1c6a1ce2c535be47f74f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_StringArray__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_StringArray__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="67"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9991ec37b39adef32c0559c5df88e2cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_StringArray__SWIG_1</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>new_StringArray__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac761ee54eb772d0baf2f1f60ca87694c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_SwipeGesture__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_SwipeGesture__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="218"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a03a934a98ecca32c8eccdaeecffa459f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_SwipeGesture__SWIG_1</definition>
        <argsstring>(long jarg1, Gesture jarg1_)</argsstring>
        <name>new_SwipeGesture__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="219"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab7e34dc839ecdd4e08c75a19bda9ee6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Tool__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_Tool__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="171"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa559c5008333a0a082a5ceefc509ef4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Tool__SWIG_1</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>new_Tool__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="172"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adb5b5c95b8ab54b87d09cef97b368073" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_ToolList</definition>
        <argsstring>()</argsstring>
        <name>new_ToolList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="285"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0f4c960d4baf2ae183fe069713f455e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_UInt32Array__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_UInt32Array__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="34"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a32de3b9a9359a7d3e33e4f95ed61633b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_UInt32Array__SWIG_1</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>new_UInt32Array__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="35"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0f41e8f2ef569423186664f57ee80e07" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Vector__SWIG_0</definition>
        <argsstring>()</argsstring>
        <name>new_Vector__SWIG_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="88"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a958b945c180efe553d24ce941c797b1d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Vector__SWIG_1</definition>
        <argsstring>(float jarg1, float jarg2, float jarg3)</argsstring>
        <name>new_Vector__SWIG_1</name>
        <param>
          <type>float</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="89"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aca6bf225fd9a1e435e8af7d5eb1212fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.new_Vector__SWIG_2</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>new_Vector__SWIG_2</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="90"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3c354d3ad727f36fda12a93f8f2c3ba8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Pointable_direction</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_direction</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="156"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a447d054e4326c88b7a9072de9421d0bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Pointable_equals</definition>
        <argsstring>(long jarg1, Pointable jarg1_, long jarg2, Pointable jarg2_)</argsstring>
        <name>Pointable_equals</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="163"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ada7fdb69aed575ee9b719dfd9ad7539b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Pointable_frame</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_frame</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="152"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6e383bb801a0b798ef9a1b7534e85395" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Pointable_hand</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_hand</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="153"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aad8ded19b641e4c1af4adbed3e3005a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Pointable_id</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_id</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="151"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a596616a2c3336a4f5a2ef9e284494555" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Pointable_invalid</definition>
        <argsstring>()</argsstring>
        <name>Pointable_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="162"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a17f3c3550f31c58410cbd82e8c59a18b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Pointable_isFinger</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_isFinger</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="159"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5c0b41933446e1d08220a56bb4d2220f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Pointable_isTool</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_isTool</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="160"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af00cb36d9d398aaa18c48b8f80983826" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Pointable_isValid</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_isValid</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="161"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a03b01c5cf5b55ec8fdc190593418ed11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Pointable_length</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_length</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="158"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a34ce31b64a7ab700c937c941dca0cbfb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Pointable_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>Pointable_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="381"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab61d20f9be08ee4351693351a17aab7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Pointable_tipPosition</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_tipPosition</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="154"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a643f37e1400cdc553a31e9ac8217c40e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Pointable_tipVelocity</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_tipVelocity</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="155"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a457e56170ccc6f117a48624cf9cef313" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Pointable_toString</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_toString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="164"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa64cb5ce78c35050af5b224816d21211" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Pointable_width</definition>
        <argsstring>(long jarg1, Pointable jarg1_)</argsstring>
        <name>Pointable_width</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="157"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0d213d40ec5fda820098852b0554a80a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.PointableList_append__SWIG_0</definition>
        <argsstring>(long jarg1, PointableList jarg1_, long jarg2, PointableList jarg2_)</argsstring>
        <name>PointableList_append__SWIG_0</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="275"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7262979e1de6aa319c45bb2da26ea6ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.PointableList_append__SWIG_1</definition>
        <argsstring>(long jarg1, PointableList jarg1_, long jarg2, FingerList jarg2_)</argsstring>
        <name>PointableList_append__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="276"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a07c498f1cc90c0cc55707369c46bbbe5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.PointableList_append__SWIG_2</definition>
        <argsstring>(long jarg1, PointableList jarg1_, long jarg2, ToolList jarg2_)</argsstring>
        <name>PointableList_append__SWIG_2</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="277"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad89b68c26576e371ea27044bdb0734dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.PointableList_count</definition>
        <argsstring>(long jarg1, PointableList jarg1_)</argsstring>
        <name>PointableList_count</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="272"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae56fa707de9c1d086fc16218a250299f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.PointableList_empty</definition>
        <argsstring>(long jarg1, PointableList jarg1_)</argsstring>
        <name>PointableList_empty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="273"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa1a162630a3ff20fea669f30fea6fa65" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.PointableList_get</definition>
        <argsstring>(long jarg1, PointableList jarg1_, int jarg2)</argsstring>
        <name>PointableList_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="274"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af6ebd54d367343b9eb6c8de7c6778a58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.PointableList_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>PointableList_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="391"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaee964c1104eaaee296b86332290b4a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_bottomLeftCorner</definition>
        <argsstring>(long jarg1, Screen jarg1_)</argsstring>
        <name>Screen_bottomLeftCorner</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="261"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a31ace9a6c10a5bdb24bdbb7a091f92f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Screen_distanceToPoint</definition>
        <argsstring>(long jarg1, Screen jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Screen_distanceToPoint</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="265"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a868ab6f36e5702eed7443de2a5eafc73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Screen_equals</definition>
        <argsstring>(long jarg1, Screen jarg1_, long jarg2, Screen jarg2_)</argsstring>
        <name>Screen_equals</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="268"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af84fb00d6348ac5e427d608879b8148c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Screen_heightPixels</definition>
        <argsstring>(long jarg1, Screen jarg1_)</argsstring>
        <name>Screen_heightPixels</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="264"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab0378941f353d8e2720915a1e91e888e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_horizontalAxis</definition>
        <argsstring>(long jarg1, Screen jarg1_)</argsstring>
        <name>Screen_horizontalAxis</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="259"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aefbf860d0af32ad4603800a1900a3625" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Screen_id</definition>
        <argsstring>(long jarg1, Screen jarg1_)</argsstring>
        <name>Screen_id</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="252"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a62deba7ae4173b3d3ee571b94372f00a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_intersect__SWIG_0</definition>
        <argsstring>(long jarg1, Screen jarg1_, long jarg2, Pointable jarg2_, boolean jarg3, float jarg4)</argsstring>
        <name>Screen_intersect__SWIG_0</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="253"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7b77146866f8ee83a5f39816e61e8809" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_intersect__SWIG_1</definition>
        <argsstring>(long jarg1, Screen jarg1_, long jarg2, Pointable jarg2_, boolean jarg3)</argsstring>
        <name>Screen_intersect__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="254"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a83db7ccc6d3760dfe5b0adf079d61f91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_intersect__SWIG_2</definition>
        <argsstring>(long jarg1, Screen jarg1_, long jarg2, Vector jarg2_, long jarg3, Vector jarg3_, boolean jarg4, float jarg5)</argsstring>
        <name>Screen_intersect__SWIG_2</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg3_</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>jarg4</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="255"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a826127f836e8f71bc01f101673b415fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_intersect__SWIG_3</definition>
        <argsstring>(long jarg1, Screen jarg1_, long jarg2, Vector jarg2_, long jarg3, Vector jarg3_, boolean jarg4)</argsstring>
        <name>Screen_intersect__SWIG_3</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg3_</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>jarg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="256"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4a2e1c21fc5d8494c7bb89e4e19b56d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_invalid</definition>
        <argsstring>()</argsstring>
        <name>Screen_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="267"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab508519035c126ba04b82c083f440c5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Screen_isValid</definition>
        <argsstring>(long jarg1, Screen jarg1_)</argsstring>
        <name>Screen_isValid</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="266"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9f8090fdf403e625ae4cbed8ea1fddc1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_normal</definition>
        <argsstring>(long jarg1, Screen jarg1_)</argsstring>
        <name>Screen_normal</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="262"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab1dee63ec1a6a73fc2f54e231b425bb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_project__SWIG_0</definition>
        <argsstring>(long jarg1, Screen jarg1_, long jarg2, Vector jarg2_, boolean jarg3, float jarg4)</argsstring>
        <name>Screen_project__SWIG_0</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="257"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaca0cdad46f9051c5bf8acfaffb71a0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_project__SWIG_1</definition>
        <argsstring>(long jarg1, Screen jarg1_, long jarg2, Vector jarg2_, boolean jarg3)</argsstring>
        <name>Screen_project__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="258"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3358b993d5e49c9baffbad31ab4e1fc6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>Screen_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="390"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a56ab639f79ebb444f8dbd3f3afc4527c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Screen_toString</definition>
        <argsstring>(long jarg1, Screen jarg1_)</argsstring>
        <name>Screen_toString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="269"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8fad5fc5e93396d7be5d27f7e962faeb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Screen_verticalAxis</definition>
        <argsstring>(long jarg1, Screen jarg1_)</argsstring>
        <name>Screen_verticalAxis</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="260"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab908361249c576d4e38eda7e84f46347" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.Screen_widthPixels</definition>
        <argsstring>(long jarg1, Screen jarg1_)</argsstring>
        <name>Screen_widthPixels</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="263"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aca1307fe0e1ca273501ec80d99118042" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ScreenList_closestScreen</definition>
        <argsstring>(long jarg1, ScreenList jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>ScreenList_closestScreen</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="309"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afaa9dd90ec534997fd8c23ef4a732186" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ScreenList_closestScreenHit__SWIG_0</definition>
        <argsstring>(long jarg1, ScreenList jarg1_, long jarg2, Pointable jarg2_)</argsstring>
        <name>ScreenList_closestScreenHit__SWIG_0</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="307"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a25ef47f3420d92535ec6619f68c9eec9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ScreenList_closestScreenHit__SWIG_1</definition>
        <argsstring>(long jarg1, ScreenList jarg1_, long jarg2, Vector jarg2_, long jarg3, Vector jarg3_)</argsstring>
        <name>ScreenList_closestScreenHit__SWIG_1</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="308"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad2950bac06c49a3c6f29b0ef6f5fabc7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.ScreenList_count</definition>
        <argsstring>(long jarg1, ScreenList jarg1_)</argsstring>
        <name>ScreenList_count</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="304"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7e0bf8ed48ad5b1ed95e961a416c6add" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.ScreenList_empty</definition>
        <argsstring>(long jarg1, ScreenList jarg1_)</argsstring>
        <name>ScreenList_empty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="305"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2395920e1be0626fae2b5181444ae7ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ScreenList_get</definition>
        <argsstring>(long jarg1, ScreenList jarg1_, int jarg2)</argsstring>
        <name>ScreenList_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="306"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4d105aacc96070521adbb021126c51a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ScreenList_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>ScreenList_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="396"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad96c83da36708ae067b5cdf63cd745d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.ScreenTapGesture_classType</definition>
        <argsstring>()</argsstring>
        <name>ScreenTapGesture_classType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="235"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1add2204a8d469aac99c1fbab9852dd19e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ScreenTapGesture_direction</definition>
        <argsstring>(long jarg1, ScreenTapGesture jarg1_)</argsstring>
        <name>ScreenTapGesture_direction</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="239"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3b89267af33683a8e8721f405273b750" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ScreenTapGesture_pointable</definition>
        <argsstring>(long jarg1, ScreenTapGesture jarg1_)</argsstring>
        <name>ScreenTapGesture_pointable</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="241"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7cf776c9e21e6fabbd10be9954bcd3ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ScreenTapGesture_position</definition>
        <argsstring>(long jarg1, ScreenTapGesture jarg1_)</argsstring>
        <name>ScreenTapGesture_position</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="238"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad450566ecd993fd0f2eec677da360d21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.ScreenTapGesture_progress</definition>
        <argsstring>(long jarg1, ScreenTapGesture jarg1_)</argsstring>
        <name>ScreenTapGesture_progress</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="240"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a67889ebb36f97a00deb36db39dfaf191" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ScreenTapGesture_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>ScreenTapGesture_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="388"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9cbeb8e20d5fcca17cba82b10fcd5d00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.StringArray_add</definition>
        <argsstring>(long jarg1, StringArray jarg1_, String jarg2)</argsstring>
        <name>StringArray_add</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>StringArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="74"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a37fa4fde2cea2fbf8fc9d594f6320291" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.StringArray_capacity</definition>
        <argsstring>(long jarg1, StringArray jarg1_)</argsstring>
        <name>StringArray_capacity</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>StringArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="70"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aef749dd513e4a6fc8137036e837ca8fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.StringArray_clear</definition>
        <argsstring>(long jarg1, StringArray jarg1_)</argsstring>
        <name>StringArray_clear</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>StringArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7975253379d458833d63363547f221f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.StringArray_get</definition>
        <argsstring>(long jarg1, StringArray jarg1_, int jarg2)</argsstring>
        <name>StringArray_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>StringArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="75"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a849611583f38b230e69876cfc3abeaef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.StringArray_isEmpty</definition>
        <argsstring>(long jarg1, StringArray jarg1_)</argsstring>
        <name>StringArray_isEmpty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>StringArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af35c65ac4bbe22905d7714fd6d0a394d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.StringArray_reserve</definition>
        <argsstring>(long jarg1, StringArray jarg1_, long jarg2)</argsstring>
        <name>StringArray_reserve</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>StringArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="71"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6d39fc22acefee1b8cd478d58081f4ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.StringArray_set</definition>
        <argsstring>(long jarg1, StringArray jarg1_, int jarg2, String jarg3)</argsstring>
        <name>StringArray_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>StringArray</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>String</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8b9e8fa4f996ead28a709f3ce2a5e475" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.StringArray_size</definition>
        <argsstring>(long jarg1, StringArray jarg1_)</argsstring>
        <name>StringArray_size</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>StringArray</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="69"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adfb54f1e3b6cc3fc4afe1ade8a776bf2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void com.leapmotion.leap.LeapJNI.SwigDirector_Listener_onConnect</definition>
        <argsstring>(Listener self, long arg0)</argsstring>
        <name>SwigDirector_Listener_onConnect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>long</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="404" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" bodystart="404" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8011c488ef931baac2f4f6c1e18d8572" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void com.leapmotion.leap.LeapJNI.SwigDirector_Listener_onDisconnect</definition>
        <argsstring>(Listener self, long arg0)</argsstring>
        <name>SwigDirector_Listener_onDisconnect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>long</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="407" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" bodystart="407" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aeda7d629620eb12ce20f6cb7f9f40935" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void com.leapmotion.leap.LeapJNI.SwigDirector_Listener_onExit</definition>
        <argsstring>(Listener self, long arg0)</argsstring>
        <name>SwigDirector_Listener_onExit</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>long</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="410" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" bodystart="410" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aba3cdbc4c52fc1c1a1867bcdba157cbd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void com.leapmotion.leap.LeapJNI.SwigDirector_Listener_onFrame</definition>
        <argsstring>(Listener self, long arg0)</argsstring>
        <name>SwigDirector_Listener_onFrame</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>long</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="413" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" bodystart="413" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a322b0a7d75d17a61440f360d2cd03f3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void com.leapmotion.leap.LeapJNI.SwigDirector_Listener_onInit</definition>
        <argsstring>(Listener self, long arg0)</argsstring>
        <name>SwigDirector_Listener_onInit</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type>long</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="401" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" bodystart="401" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad0ab44cfa61dcda1e403c3353aaf2775" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.SwipeGesture_classType</definition>
        <argsstring>()</argsstring>
        <name>SwipeGesture_classType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="217"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1885d0e50472a847039519a209734a76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.SwipeGesture_direction</definition>
        <argsstring>(long jarg1, SwipeGesture jarg1_)</argsstring>
        <name>SwipeGesture_direction</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="222"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad8f426e03c3533741e7d73380739469e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.SwipeGesture_pointable</definition>
        <argsstring>(long jarg1, SwipeGesture jarg1_)</argsstring>
        <name>SwipeGesture_pointable</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="224"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad2079fbd9f8d87cbc0fa96ef6ad8319d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.SwipeGesture_position</definition>
        <argsstring>(long jarg1, SwipeGesture jarg1_)</argsstring>
        <name>SwipeGesture_position</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="221"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a44af793f6590c8083c52d6f259b28e0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.SwipeGesture_speed</definition>
        <argsstring>(long jarg1, SwipeGesture jarg1_)</argsstring>
        <name>SwipeGesture_speed</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="223"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af807fe7e6b369eb7b1e82ce3edd67240" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.SwipeGesture_startPosition</definition>
        <argsstring>(long jarg1, SwipeGesture jarg1_)</argsstring>
        <name>SwipeGesture_startPosition</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="220"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adf8a1fb81ed12c192a4706f8809f2724" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.SwipeGesture_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>SwipeGesture_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="386"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a94cb9de3965ebad0fbd9fce65b273bb7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Tool_invalid</definition>
        <argsstring>()</argsstring>
        <name>Tool_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="173"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9256121d96c2607a189a568cb8ca77c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Tool_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>Tool_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="383"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acad3e379ec7dc68c85b84496949abf80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Tool_toString</definition>
        <argsstring>(long jarg1, Tool jarg1_)</argsstring>
        <name>Tool_toString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="174"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8025a386d1b46f86c5ed07ea3cb7d62f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ToolList_append</definition>
        <argsstring>(long jarg1, ToolList jarg1_, long jarg2, ToolList jarg2_)</argsstring>
        <name>ToolList_append</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="289"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abb3a039a5558a3d809b8f3ae6da1e3ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native int</type>
        <definition>static final native int com.leapmotion.leap.LeapJNI.ToolList_count</definition>
        <argsstring>(long jarg1, ToolList jarg1_)</argsstring>
        <name>ToolList_count</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="286"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a31eb64a2ddde996eda7d2cb0858cba6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.ToolList_empty</definition>
        <argsstring>(long jarg1, ToolList jarg1_)</argsstring>
        <name>ToolList_empty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="287"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac90541fdef35ceb06e01452201509b39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ToolList_get</definition>
        <argsstring>(long jarg1, ToolList jarg1_, int jarg2)</argsstring>
        <name>ToolList_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="288"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2f242231c3960999096c5f47e1b28419" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.ToolList_SWIGUpcast</definition>
        <argsstring>(long jarg1)</argsstring>
        <name>ToolList_SWIGUpcast</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="393"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5b1a9f8b727dc81c3ce57911f166238e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.UInt32Array_add</definition>
        <argsstring>(long jarg1, UInt32Array jarg1_, long jarg2)</argsstring>
        <name>UInt32Array_add</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>UInt32Array</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="41"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aac234104402b327a4668171c301b2f80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.UInt32Array_capacity</definition>
        <argsstring>(long jarg1, UInt32Array jarg1_)</argsstring>
        <name>UInt32Array_capacity</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>UInt32Array</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="37"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0c7b8ceb6be7154ef4ebd786c149dc00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.UInt32Array_clear</definition>
        <argsstring>(long jarg1, UInt32Array jarg1_)</argsstring>
        <name>UInt32Array_clear</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>UInt32Array</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="40"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1b95f40bdc48ba448abe24fdec33e1e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.UInt32Array_get</definition>
        <argsstring>(long jarg1, UInt32Array jarg1_, int jarg2)</argsstring>
        <name>UInt32Array_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>UInt32Array</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="42"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9436c76fc3ef989dfdfbb0f13a068a4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.UInt32Array_isEmpty</definition>
        <argsstring>(long jarg1, UInt32Array jarg1_)</argsstring>
        <name>UInt32Array_isEmpty</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>UInt32Array</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="39"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a537294da3cea27a823958673fd815400" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.UInt32Array_reserve</definition>
        <argsstring>(long jarg1, UInt32Array jarg1_, long jarg2)</argsstring>
        <name>UInt32Array_reserve</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>UInt32Array</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="38"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1e3a3b5f44fa11adce5b47973d5378d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.UInt32Array_set</definition>
        <argsstring>(long jarg1, UInt32Array jarg1_, int jarg2, long jarg3)</argsstring>
        <name>UInt32Array_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>UInt32Array</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="43"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acffe78de4f6a79495ad01a0280f51518" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.UInt32Array_size</definition>
        <argsstring>(long jarg1, UInt32Array jarg1_)</argsstring>
        <name>UInt32Array_size</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>UInt32Array</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="36"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3fba3ba1eb391aa782568011aeea21b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_angleTo</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Vector_angleTo</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="104"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a67f39d21eb00f04584cfad6cfc76def1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_backward</definition>
        <argsstring>()</argsstring>
        <name>Vector_backward</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="100"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a373e2a46b929512975d108fa8ca54a5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_cross</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Vector_cross</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="109"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab793b912c9ddc0b960e7870ed7fc3268" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_distanceTo</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Vector_distanceTo</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="103"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa0a15100fb9ead0abf9c5c822ef2c45f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_divide</definition>
        <argsstring>(long jarg1, Vector jarg1_, float jarg2)</argsstring>
        <name>Vector_divide</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="115"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a91189b36c02596e0afd271ba3c7bdc3a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_dot</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Vector_dot</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="108"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a71492787a94ced4269a3dfef7643cde8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_down</definition>
        <argsstring>()</argsstring>
        <name>Vector_down</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="97"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9b334226913bb742fd531755e973a6c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Vector_equals</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Vector_equals</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="117"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6759c28781b5962a9075d07bb8fdb47f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_forward</definition>
        <argsstring>()</argsstring>
        <name>Vector_forward</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="99"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2f6abf403e495977f2acfb8702a1b9e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_get</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2)</argsstring>
        <name>Vector_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="119"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3e1109cb9f504ce5a17ba3b38bc2fbe2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native boolean</type>
        <definition>static final native boolean com.leapmotion.leap.LeapJNI.Vector_isValid</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_isValid</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="118"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad2aaea4264fa88362bbb22b7f79e0e12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_left</definition>
        <argsstring>()</argsstring>
        <name>Vector_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="95"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac8ecaaceebbcbea01b707e44ec3d990a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_magnitude</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_magnitude</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="101"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a882ee2581d31623671c8d9caf003e046" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_magnitudeSquared</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_magnitudeSquared</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="102"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a517c19d9acee43a57cf229c0133dd420" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_minus</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Vector_minus</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="113"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6f95a083e79a5aa6305b80c742402048" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_normalized</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_normalized</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="110"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aefaca937ca60f0b71085015573925dfe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_opposite</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_opposite</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="111"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abb9db3a46bedbc334f8d160f702cf913" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_pitch</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_pitch</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="105"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afc3df4edb37ab926ac5894e24668495b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_plus</definition>
        <argsstring>(long jarg1, Vector jarg1_, long jarg2, Vector jarg2_)</argsstring>
        <name>Vector_plus</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>long</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="112"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5a7006163be22af263e8c4a7893af430" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_right</definition>
        <argsstring>()</argsstring>
        <name>Vector_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="96"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab10802e4fa7c376d4195479b92ae721a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_roll</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_roll</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="107"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a37527b4923889bb03b60746773781f9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_times</definition>
        <argsstring>(long jarg1, Vector jarg1_, float jarg2)</argsstring>
        <name>Vector_times</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="114"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adccc53a10528408a370b0c7601824ba2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native String</type>
        <definition>static final native String com.leapmotion.leap.LeapJNI.Vector_toString</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_toString</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="116"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a573ad1879100f11095a4c6a99eafc5cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_up</definition>
        <argsstring>()</argsstring>
        <name>Vector_up</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="98"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2025695eec93b0bfc4606f866854b4b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_x_get</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_x_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="121"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9ab6d3e8ffb8401b7c359d4708c5348f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Vector_x_set</definition>
        <argsstring>(long jarg1, Vector jarg1_, float jarg2)</argsstring>
        <name>Vector_x_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="120"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7d1d10d63f2dd837d1200db4c86e6757" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_xAxis</definition>
        <argsstring>()</argsstring>
        <name>Vector_xAxis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="92"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0ffebaecd2c7d7784dc346dc461280a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_y_get</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_y_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="123"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5560f5e2b28329aa82cbd390ac329182" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Vector_y_set</definition>
        <argsstring>(long jarg1, Vector jarg1_, float jarg2)</argsstring>
        <name>Vector_y_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="122"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac3a3fd076d0de88152b41aba023b8a14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_yaw</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_yaw</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="106"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a98659bfb8e634c1d346e01ac67c0f157" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_yAxis</definition>
        <argsstring>()</argsstring>
        <name>Vector_yAxis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="93"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a59199ef0975673cca61244d627edbb44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native float</type>
        <definition>static final native float com.leapmotion.leap.LeapJNI.Vector_z_get</definition>
        <argsstring>(long jarg1, Vector jarg1_)</argsstring>
        <name>Vector_z_get</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="125"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3d5cf8e3f15191812b1a90f51ed36b7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.Vector_z_set</definition>
        <argsstring>(long jarg1, Vector jarg1_, float jarg2)</argsstring>
        <name>Vector_z_set</name>
        <param>
          <type>long</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>float</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="124"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac311719e506a5f6602ff84016d5f0554" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_zAxis</definition>
        <argsstring>()</argsstring>
        <name>Vector_zAxis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="94"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab9154e6935a152adaed9ed909c9e2b96" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native long</type>
        <definition>static final native long com.leapmotion.leap.LeapJNI.Vector_zero</definition>
        <argsstring>()</argsstring>
        <name>Vector_zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af2e1ab73de446270d86f63767e7dc6e7" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.LeapJNI.[static initializer]</definition>
        <argsstring/>
        <name>[static initializer]</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="79"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af2e1ab73de446270d86f63767e7dc6e7" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.LeapJNI.[static initializer]</definition>
        <argsstring/>
        <name>[static initializer]</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="418"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a84413ce68a59db0df62164b72cb7f5f3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>final native void</type>
        <definition>static final native void com.leapmotion.leap.LeapJNI.swig_module_init</definition>
        <argsstring>()</argsstring>
        <name>swig_module_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="417"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" line="11" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java" bodystart="11" bodyend="421"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af2e1ab73de446270d86f63767e7dc6e7" prot="package" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>[static initializer]</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af2e1ab73de446270d86f63767e7dc6e7" prot="package" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>[static initializer]</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a62d8f8fe1f94fd062c7d816bd4e6a72e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>BoolArray_add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab20f45a39d86395ba1b239a479a8cb6b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>BoolArray_capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a76d7d3b5c0fac7e7ae26377e3a94e546" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>BoolArray_clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a51fa2c87eccdd7558718d6da15d6e48c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>BoolArray_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adfcb179f943dbcfbaf52139af913b95b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>BoolArray_isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a86bd0c6622ee68a9e2f3bd2d654bc830" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>BoolArray_reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4667975c5ad6bcd6a42508969b8f7c15" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>BoolArray_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aff45909368aa60e74c3b85ef00f6cbc0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>BoolArray_size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6808da48502ad74b106b352f1fba0011" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>CircleGesture_center</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aec1ed2157254e01ebd2bd0582edb3c5f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>CircleGesture_classType</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac750f0b82ad2ecf9badd38de2608d1f9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>CircleGesture_normal</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7443bc42e47de70465340efb14019410" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>CircleGesture_pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a671bcf2303cb135f87b2e396392a3c3a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>CircleGesture_progress</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a738ab9df766b4cc48106116f8d8fcd84" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>CircleGesture_radius</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a858cf8a058d5c6d4f8ef0bcd753a3d29" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>CircleGesture_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2beb0263a66e691878d15c4791570f4c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getBool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a524e2b6acee759248dd4002b57910c3a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getBoolArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad091583bf0432dfb2e5d07eb6c2f72cf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getDouble</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a04dc6c8c13351da8be8ea778ed1d9fdc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getDoubleArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae951b6a09a06de557587bac9f704031c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getFloat</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8895f112a3a1ee6ff03a415138060381" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getFloatArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1be788e97a7e32292092ff9418991f2a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getInt32</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3c4ee5c99773ad90193d56da58f6ad04" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getInt32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1add065b5c1a75eab475c8ddcc3c5d4e34" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getInt64</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4429d4e0ae7087a74abaa9de8e682cbd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7fcb31989e2e4c8ea96692269fe84795" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getStringArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad0fc601edbad34722078c876e8f2a48e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getUInt32</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad3a0131c7d904fc9a4000fa06592df11" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getUInt32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adf21d009ce6f892d35e2beba30a1ea5f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_getUInt64</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a38f53ae2b7676e189bf1b8cd435eda9b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_isArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a579791e59c00ef25f9da5bb0856f1dc9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afc90521460c3b8fb57ada463c8bd06c2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Config_type</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac1b8ff95d6c2a2607eadfd80b8f66922" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_addListener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4bae7cc9d69e570eebe8fe1fe3286074" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_calibratedScreens</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3351cab0ac2fb63a5c717533d7c767b1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_config</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ada92825bcc136ad0e7d03e8c36599c76" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_enableGesture__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4525d3cf72388e2fe983309930e75235" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_enableGesture__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a777e6eea613413e4f5cc707c089aa5dc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_frame__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aef820f2ce32bd1f74d747c5d8d10d7ca" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_frame__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a50df68709aa95c1f71e620f164d95fac" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_isConnected</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af5d076b61198741dcbda627e988ce34e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_isGestureEnabled</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a01f5cb8edcad6053923d4afedbb69f21" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_removeListener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a82ab683d3cb9d9fca0b54a3917585b30" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Controller_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad4d59318ef9e83ac9a421d21a048cf68" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_BoolArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab87f4299fa9788149a4ab608cfcca4be" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_CircleGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1db1c2c21d069f8020bb599fa33055a9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Config</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2593b0523ad5103147c5d7a0f2274e64" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Controller</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a79657b879b537462e2da33b7eaae76c0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_DoubleArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a41a79c99def54244856a8224a45c3d45" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Finger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae8ccad5531139c33a23cdb98943cf192" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_FingerList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a97fbe21b14d05452d21f28bd000ae6c2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_FloatArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abd28a15abe20708e1da4cfce1b8ff142" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8b5d761f8bd156f8b5f519b436ba1c1d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abab2092abda043642c34413de1823152" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_GestureList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a757f6edf8bb4ffb7a49cdf335d2e1a83" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a30db2df660632cbc62b8b4f1d4a90735" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_HandList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad173c0cf8cb90b57b1331182a8f023bd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Int32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a89947250e57169cc3a186d657d91d3f4" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_KeyTapGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af09671b2bd3c03da294aa54c76d32c1a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Listener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a560eddd8f17300e18a8dcb49966c0cd9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Matrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7d6f5abcc8366cb16204e35e150893b5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a408ae0a83e3d8d07b08a2c81a6870530" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_PointableList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8ec9560d9e00e946c1847bf7caeb42c6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Screen</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7e24dbf360df1fcdda33cd7cbde9a454" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_ScreenList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af05b446d4bc796e9c9f13446be24bc18" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_ScreenTapGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aeb18374d7eb5739d62cfcb815fd1373d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_StringArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae7b60d8df3f177cf7d0fc6d40511fe34" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_SwipeGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a08816cbc0e078e8102a918108867180b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Tool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa1d34c3b891c423f5ea43f60665cea90" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_ToolList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aea6f6769f0975042bcbbca32dabe1551" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_UInt32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a764c21c8fe5a660a4b7bf37d2810232a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>delete_Vector</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af0f2d598c3910834f52e512c0c857d15" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>DoubleArray_add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad2203b0774600ac0df6d409cc05b3486" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>DoubleArray_capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a05343c770b50bf788fa5dc1dbad20ed6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>DoubleArray_clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae9c1c5609e4d262f137e94d3ade7fd95" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>DoubleArray_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae60c8cce48d7919b714da7e8ee421d79" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>DoubleArray_isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6b3cef051602b394cb9377159fbb774c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>DoubleArray_reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af075af85dcdb917b845ab3a60b8597b8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>DoubleArray_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aeb67056fb97649bc9e95f7717fc63a8a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>DoubleArray_size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a32725be5620ec730534c34fe396165dd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Finger_invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aecda9738e92d7d17c585bc29b17ce7b0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Finger_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1e9299c82139f954165788f69a60e4e2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Finger_toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8cd0970b2b3516769a2a2354f322981d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FingerList_append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9265126d2fd3513f74f0793585689b85" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FingerList_count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afab89ddcc1185c3aad95aba2a8220dad" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FingerList_empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab8a85abff1d4d5e015d2bd3ab3d994c9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FingerList_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab91a700671dfcababcb429a175780ebe" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FingerList_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a03ee6f61cd5bc4d90f715e05b74232db" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FloatArray_add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8ab3a2f228de8b778ac6a569354a6725" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FloatArray_capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5a02fb6b60604db9a08440ae4a862a12" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FloatArray_clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a610a3195d8c11d4c8d9df4234d5d7f8e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FloatArray_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acc92780e0bcb6f94c0c921a3274a15a2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FloatArray_isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a751ebe1cd0a823bd807d185b36e3a7c5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FloatArray_reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0a433443ebc731506731c47bdef6e438" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FloatArray_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af16e0ba8cf301b25530b6acae1e798a6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>FloatArray_size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad34e46e51728afa95c8ec7b5623aee9a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ada35aa41eefb559d364ce2dcfb4678b6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_finger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a967a2ac32206ab5eaf503bd74f63a2c9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_fingers</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8d7c5b84b5099bf197100d498c99ff54" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad35a50a49619550af8cbadbf4abf6ffb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_gestures__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac2a5413f7d6f4155983758a67de5c803" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_gestures__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9a0e8443699c1fa5e314845e4196026b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acffb2545f2df723763da117ae2326837" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_hands</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a888f267f39e4f8a86bba638bc2178723" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a268b28c7abad8ea64c32eba7786e325c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2510122c9c67e5924031d3d4a504dea1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa5d517013094afdf4dfc0c189aaa4f76" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afcc5dfe78a78faae44b612157a711a07" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a58b0a7f5200cf9c52b51c7fa6f0bae67" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_rotationAngle__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aecc744e314e6514f2ebb582c6cd7a6ec" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_rotationAngle__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a54f4db8aec004c19c722195087935dda" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_rotationAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac6cc0a72d7426e5b498993e1e2ee15de" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_rotationMatrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a77bfb23ed9100012defcc42f8fc49c8a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_scaleFactor</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a83949134711e0a040ce7ca859e4edd05" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a16499f95dea29667eaa012b809bf8773" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_timestamp</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4a6c44ba3c8de34eb11c4be00509752d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_tool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac8f9a4400dccde4fafef989f25ecc815" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_tools</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af33f3faae33dea906aa4158e1cb9e589" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a655eb8041307d5f8bff526fd080511d5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Frame_translation</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2e3255854813a3e82af8c43840727f93" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_duration</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a71901acfca2ee36e6d30d883fe1fcf7b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_durationSeconds</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2a5f40c0ab67b0f0ae810fee83b2a604" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5c6f8e4ebe4c86c8060324619c9ae8ab" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a353e06d33d99fd8eb37789c0d8970766" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_hands</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaba2b1ef1665680837218d864474f368" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a96198b068ccf19a32132de3140e423ec" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acea895c13a750c6526208d4b383030dd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a96613b14c501e768e363745f88699c5b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a60074946d7ddd55f1b993d7a42f3b865" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_state</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8fb72cf9535ffca3a5b348b7793af0e0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1ed046f6d81d8be03b1de50dabb4fde6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4dc81a9f093762f2119ee6aadce10569" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Gesture_type</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a98b2d93f98f007b8495dc55af27583b1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>GestureList_append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3de006c8ed75cd6768e4c9184674e1df" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>GestureList_count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a88ce09d68a000ca347244e30802fbf1e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>GestureList_empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3f9599f6422095d01e883ea010bb33e1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>GestureList_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaed706d8bf59267caeb184e9dbf7ff0a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>GestureList_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a316ef4223dbfda74ea263c304a70beda" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac4676d2d8e808dcdde2f498ee117b592" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4383abfccfc091babab2dfa39562c87b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_finger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa67b61f40850010a484baa6e6e01f518" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_fingers</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4b722cbf70639e15e3b35b138790fc9a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af47347ad72fc2d81137139940ab89b3a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4c7f83bea12955f6845363e5931bbcbd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3d5ee8f2beb581ca1f7495607c849bb9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a23397fe3d5027bc3adde87365d54ca55" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_palmNormal</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af410ba5ad7124f52263eb7889a64560f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_palmPosition</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab915eae34c81c68811f0875254d7c5a2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_palmVelocity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a197c124f266a91bcaf108127b2370d7a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0cf377a78fcad7b3171e6bc478f6afc7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3b4259993991dd1cc06f4fce79acd9e6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_rotationAngle__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abbbc7e699924e3170bdebb27d5497d29" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_rotationAngle__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a560fdf29d43c2b2f36fba58b7575906f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_rotationAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa87155dcb93bf6a7cb582c45bef1d258" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_rotationMatrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a385451678f42e05e9dbf65349afaa7a3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_scaleFactor</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa259c99bf925ef618f2e0e1032520c53" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_sphereCenter</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acfa4f87f2c6ad2832ba58d9845a31e6e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_sphereRadius</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afaf7015965d7f62666d7c8ca46ceeff6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1c880fd786d1d80f19fe2f4c5d50f077" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_tool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a001c5fb98bf38fb80616160499598b1b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_tools</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad22cb0de0ebe7bf873e940a8b5e43f03" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a59338372ad15c6fad7eba9a6aee1075a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Hand_translation</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae3989408ba148176d533212e670df022" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>HandList_append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a157b21f2976089cf373755cf65f9b309" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>HandList_count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1b9093885891d83c72fe2e1e253a9696" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>HandList_empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac537a219cd7ac0b967ad4c34c668cddc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>HandList_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad6f60f156dcf77aabe3e1d964475a3cd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>HandList_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a84f572b0b08ec8790150a64f79b79d74" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Int32Array_add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac281936c18efa0f04c2c2188119dea78" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Int32Array_capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aacaa6589965ef0503e2837cafe271d03" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Int32Array_clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a32bdd9c0d8ea7244555fdcedb22e5035" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Int32Array_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad04439ddcac8d514433f92ff06866616" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Int32Array_isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa790f8654705f33c1768769896209d20" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Int32Array_reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab3fe2dc2d215f142a8ec047a122a2747" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Int32Array_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3f49d723a2949598a21de2d2ef25171c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Int32Array_size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adb912d08e0b3c5ba9465f3c6b2cbc09c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>KeyTapGesture_classType</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a974e8408a425d225335c2d399ed1128b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>KeyTapGesture_direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aea454f60fca1f799561b70a8fdd334b7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>KeyTapGesture_pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aad4f398f494e6f82f900ec6cdbc5b686" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>KeyTapGesture_position</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae7ab7eae0639f6b1388dc988eb1f0f9c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>KeyTapGesture_progress</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4f30f190bda9cf4a201fac4bd6993b75" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>KeyTapGesture_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac0e81e7dcf605a246307d63a75d8d287" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_change_ownership</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaadc4ca54cfabe1a25034197e936ba87" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_director_connect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a014ee2d73c19bfe5b7a742254a11f7b6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onConnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a22e93ace0467cfadedfa5185680e0bc1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onConnectSwigExplicitListener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abd597b41d3524c540c78ce11f5856e07" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onDisconnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa58196d5d82fb358595e5da0526c915e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onDisconnectSwigExplicitListener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ace1a07b7d252bf33e758b6ac43c2516f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onExit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af261ebf2d947f77c7fc2ebeb20fdf047" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onExitSwigExplicitListener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a92fe1338510aa944a18f59b85cf66511" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onFrame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af59b1ff179ed72adfd6b827d702d018d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onFrameSwigExplicitListener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab6d6f91d0e8a95e158011213d9af68dd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onInit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acb4980913fa4672a24e78a19703dc6fe" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Listener_onInitSwigExplicitListener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1da0904e36669c168779fed06c43ed2d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a299b68d2e55961ae65caca0fab307bb4" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_identity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0a1521c6ccdd7596e29a51dca3ed5c2c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_origin_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a75f587e95db3737b89b0f5956ea80bd3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_origin_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad4d9a112f57e069da8bf37a7f3ac2d40" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_rigidInverse</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a11283700bd488e0adcfac27576d7b57e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_setRotation</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a84f0cdb098ae6896bcf4bd9b21c4d8ba" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_times</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acc3a74c9274937146114d1809279b5d7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aed54762cd47bc02c7bbc50af49613c7e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_transformDirection</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8afa21afcee7706875e73b200bf240b0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_transformPoint</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a02c9b18a2a692a5045899dbffdbb9352" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_xBasis_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a087e715ca87767bdd15a4fa8ee0790a2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_xBasis_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa8e7f453a08f246e3c6525e7217d05b8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_yBasis_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6b8b0dd3dd684ebffde34ae91a9bd383" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_yBasis_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9dfe8e328c614a7b213500971f2c8c98" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_zBasis_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3c313a76e3f25135c03fed385b35d118" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Matrix_zBasis_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1b4a44a5cd6ca3ba21740adeb55c8b84" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_BoolArray__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a767de2248f7eb922def0704f19012301" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_BoolArray__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a89f404c47645ca457a9633654d4cd226" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_CircleGesture__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9b770051838aaf2c23a2202d08b9b169" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_CircleGesture__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a472c2d9f0441d88a525d8eed4828a4d1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Config</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a322efb5670c6f511ab94e6e3f77dceb3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Controller__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad72250b824efd121b27f79cf69d18a8d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Controller__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acdb387d17a84d5ab19372d3afabcecbc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_DoubleArray__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae295118674796b4953972f2c76cc6f2f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_DoubleArray__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9267ea9c561501709b91a02fa045e5b0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Finger__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a06def438d168e931553cee1e0bdaef9c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Finger__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a16feeb175b057e21ae6c255939b177b8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_FingerList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa25ee5e0cd13711bc0a6069d35fcec77" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_FloatArray__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a229d477a01f2d01f773d34eff18ac5b2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_FloatArray__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a516642620625393a064e20e3518d756f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a29c17fc61646ab6cf16ae83f70f1f227" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Gesture__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2b7fa5261bcadbf6b31d6f2829878a58" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Gesture__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4b5a3b87ce3ac4f5f53661364c5be6ae" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_GestureList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a29b4dd24a6d1c26cdabc4c6805ecfe31" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7567eca0b5d37937ca21a65b60224bbf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_HandList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0be56d4f7365615542bda8598ab55e84" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Int32Array__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af85f97b5029df3d1a61d8e08d6d2822d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Int32Array__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a26269fac75d266fa69e6b3a8b9107569" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_KeyTapGesture__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a11ba693960ea3d5eda6f88df8439ed96" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_KeyTapGesture__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aca44ea11dbffc87e5a5b6855f091fbe5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Listener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7f40ab38f1db2a04e1c60109b4246fe6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Matrix__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aad6d8cb5e2dcd1c9df9dd79df08dd329" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Matrix__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3850ed206a7f443ee05d2b14108a9b4c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Matrix__SWIG_2</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a833609826c243dd02416bd0a7e1e8a50" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Matrix__SWIG_3</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a46ddc1450c1e3d569c60c8140cfe7752" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Matrix__SWIG_4</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a41d71d1615c883e3d31989be0c8e4376" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Matrix__SWIG_5</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a16bd6fc212f29e7094a341c640f28e94" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a868be21adf9b7a88a63917198310a2ec" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_PointableList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adefc813b8f9255ebbc3b17dbe488f3fb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Screen</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acc98ec43a364e963e85bf4289dab4802" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_ScreenList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abc62cf47d044148ebbccc3ac76b5558d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_ScreenTapGesture__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aabcf14df965e3f3c55fb01eba2d0b10c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_ScreenTapGesture__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1addaf2ec08c5e1c6a1ce2c535be47f74f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_StringArray__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9991ec37b39adef32c0559c5df88e2cb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_StringArray__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac761ee54eb772d0baf2f1f60ca87694c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_SwipeGesture__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a03a934a98ecca32c8eccdaeecffa459f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_SwipeGesture__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab7e34dc839ecdd4e08c75a19bda9ee6d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Tool__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa559c5008333a0a082a5ceefc509ef4a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Tool__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adb5b5c95b8ab54b87d09cef97b368073" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_ToolList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0f4c960d4baf2ae183fe069713f455e2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_UInt32Array__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a32de3b9a9359a7d3e33e4f95ed61633b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_UInt32Array__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0f41e8f2ef569423186664f57ee80e07" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Vector__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a958b945c180efe553d24ce941c797b1d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Vector__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aca6bf225fd9a1e435e8af7d5eb1212fa" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>new_Vector__SWIG_2</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3c354d3ad727f36fda12a93f8f2c3ba8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a447d054e4326c88b7a9072de9421d0bd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ada7fdb69aed575ee9b719dfd9ad7539b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6e383bb801a0b798ef9a1b7534e85395" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aad8ded19b641e4c1af4adbed3e3005a3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a596616a2c3336a4f5a2ef9e284494555" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a17f3c3550f31c58410cbd82e8c59a18b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_isFinger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5c0b41933446e1d08220a56bb4d2220f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_isTool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af00cb36d9d398aaa18c48b8f80983826" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a03b01c5cf5b55ec8fdc190593418ed11" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_length</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a34ce31b64a7ab700c937c941dca0cbfb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab61d20f9be08ee4351693351a17aab7a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_tipPosition</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a643f37e1400cdc553a31e9ac8217c40e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_tipVelocity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a457e56170ccc6f117a48624cf9cef313" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa64cb5ce78c35050af5b224816d21211" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Pointable_width</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0d213d40ec5fda820098852b0554a80a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>PointableList_append__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7262979e1de6aa319c45bb2da26ea6ec" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>PointableList_append__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a07c498f1cc90c0cc55707369c46bbbe5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>PointableList_append__SWIG_2</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad89b68c26576e371ea27044bdb0734dd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>PointableList_count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ae56fa707de9c1d086fc16218a250299f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>PointableList_empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa1a162630a3ff20fea669f30fea6fa65" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>PointableList_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af6ebd54d367343b9eb6c8de7c6778a58" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>PointableList_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaee964c1104eaaee296b86332290b4a5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_bottomLeftCorner</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a31ace9a6c10a5bdb24bdbb7a091f92f2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_distanceToPoint</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a868ab6f36e5702eed7443de2a5eafc73" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af84fb00d6348ac5e427d608879b8148c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_heightPixels</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab0378941f353d8e2720915a1e91e888e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_horizontalAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aefbf860d0af32ad4603800a1900a3625" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a62deba7ae4173b3d3ee571b94372f00a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_intersect__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7b77146866f8ee83a5f39816e61e8809" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_intersect__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a83db7ccc6d3760dfe5b0adf079d61f91" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_intersect__SWIG_2</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a826127f836e8f71bc01f101673b415fe" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_intersect__SWIG_3</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4a2e1c21fc5d8494c7bb89e4e19b56d1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab508519035c126ba04b82c083f440c5d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9f8090fdf403e625ae4cbed8ea1fddc1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_normal</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab1dee63ec1a6a73fc2f54e231b425bb6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_project__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aaca0cdad46f9051c5bf8acfaffb71a0b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_project__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3358b993d5e49c9baffbad31ab4e1fc6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a56ab639f79ebb444f8dbd3f3afc4527c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8fad5fc5e93396d7be5d27f7e962faeb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_verticalAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab908361249c576d4e38eda7e84f46347" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Screen_widthPixels</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aca1307fe0e1ca273501ec80d99118042" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenList_closestScreen</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afaa9dd90ec534997fd8c23ef4a732186" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenList_closestScreenHit__SWIG_0</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a25ef47f3420d92535ec6619f68c9eec9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenList_closestScreenHit__SWIG_1</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad2950bac06c49a3c6f29b0ef6f5fabc7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenList_count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7e0bf8ed48ad5b1ed95e961a416c6add" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenList_empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2395920e1be0626fae2b5181444ae7ab" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenList_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a4d105aacc96070521adbb021126c51a9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenList_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad96c83da36708ae067b5cdf63cd745d3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenTapGesture_classType</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1add2204a8d469aac99c1fbab9852dd19e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenTapGesture_direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3b89267af33683a8e8721f405273b750" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenTapGesture_pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7cf776c9e21e6fabbd10be9954bcd3ec" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenTapGesture_position</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad450566ecd993fd0f2eec677da360d21" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenTapGesture_progress</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a67889ebb36f97a00deb36db39dfaf191" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ScreenTapGesture_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9cbeb8e20d5fcca17cba82b10fcd5d00" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>StringArray_add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a37fa4fde2cea2fbf8fc9d594f6320291" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>StringArray_capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aef749dd513e4a6fc8137036e837ca8fc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>StringArray_clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7975253379d458833d63363547f221f7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>StringArray_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a849611583f38b230e69876cfc3abeaef" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>StringArray_isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af35c65ac4bbe22905d7714fd6d0a394d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>StringArray_reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6d39fc22acefee1b8cd478d58081f4ba" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>StringArray_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8b9e8fa4f996ead28a709f3ce2a5e475" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>StringArray_size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a84413ce68a59db0df62164b72cb7f5f3" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>swig_module_init</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adfb54f1e3b6cc3fc4afe1ade8a776bf2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwigDirector_Listener_onConnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8011c488ef931baac2f4f6c1e18d8572" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwigDirector_Listener_onDisconnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aeda7d629620eb12ce20f6cb7f9f40935" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwigDirector_Listener_onExit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aba3cdbc4c52fc1c1a1867bcdba157cbd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwigDirector_Listener_onFrame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a322b0a7d75d17a61440f360d2cd03f3e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwigDirector_Listener_onInit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad0ab44cfa61dcda1e403c3353aaf2775" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwipeGesture_classType</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1885d0e50472a847039519a209734a76" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwipeGesture_direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad8f426e03c3533741e7d73380739469e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwipeGesture_pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad2079fbd9f8d87cbc0fa96ef6ad8319d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwipeGesture_position</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a44af793f6590c8083c52d6f259b28e0b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwipeGesture_speed</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1af807fe7e6b369eb7b1e82ce3edd67240" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwipeGesture_startPosition</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adf8a1fb81ed12c192a4706f8809f2724" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>SwipeGesture_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a94cb9de3965ebad0fbd9fce65b273bb7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Tool_invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9256121d96c2607a189a568cb8ca77c8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Tool_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acad3e379ec7dc68c85b84496949abf80" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Tool_toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a8025a386d1b46f86c5ed07ea3cb7d62f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ToolList_append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abb3a039a5558a3d809b8f3ae6da1e3ac" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ToolList_count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a31eb64a2ddde996eda7d2cb0858cba6e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ToolList_empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac90541fdef35ceb06e01452201509b39" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ToolList_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2f242231c3960999096c5f47e1b28419" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>ToolList_SWIGUpcast</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5b1a9f8b727dc81c3ce57911f166238e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>UInt32Array_add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aac234104402b327a4668171c301b2f80" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>UInt32Array_capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0c7b8ceb6be7154ef4ebd786c149dc00" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>UInt32Array_clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1b95f40bdc48ba448abe24fdec33e1e1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>UInt32Array_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9436c76fc3ef989dfdfbb0f13a068a4e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>UInt32Array_isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a537294da3cea27a823958673fd815400" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>UInt32Array_reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a1e3a3b5f44fa11adce5b47973d5378d0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>UInt32Array_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1acffe78de4f6a79495ad01a0280f51518" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>UInt32Array_size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3fba3ba1eb391aa782568011aeea21b1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_angleTo</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a67f39d21eb00f04584cfad6cfc76def1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_backward</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a373e2a46b929512975d108fa8ca54a5c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_cross</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab793b912c9ddc0b960e7870ed7fc3268" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_distanceTo</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aa0a15100fb9ead0abf9c5c822ef2c45f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_divide</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a91189b36c02596e0afd271ba3c7bdc3a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_dot</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a71492787a94ced4269a3dfef7643cde8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_down</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9b334226913bb742fd531755e973a6c1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6759c28781b5962a9075d07bb8fdb47f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_forward</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2f6abf403e495977f2acfb8702a1b9e1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3e1109cb9f504ce5a17ba3b38bc2fbe2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ad2aaea4264fa88362bbb22b7f79e0e12" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_left</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac8ecaaceebbcbea01b707e44ec3d990a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_magnitude</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a882ee2581d31623671c8d9caf003e046" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_magnitudeSquared</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a517c19d9acee43a57cf229c0133dd420" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_minus</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a6f95a083e79a5aa6305b80c742402048" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_normalized</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1aefaca937ca60f0b71085015573925dfe" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_opposite</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1abb9db3a46bedbc334f8d160f702cf913" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_pitch</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1afc3df4edb37ab926ac5894e24668495b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_plus</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5a7006163be22af263e8c4a7893af430" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_right</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab10802e4fa7c376d4195479b92ae721a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_roll</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a37527b4923889bb03b60746773781f9d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_times</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1adccc53a10528408a370b0c7601824ba2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a573ad1879100f11095a4c6a99eafc5cf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_up</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a2025695eec93b0bfc4606f866854b4b5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_x_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a9ab6d3e8ffb8401b7c359d4708c5348f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_x_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a7d1d10d63f2dd837d1200db4c86e6757" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_xAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a0ffebaecd2c7d7784dc346dc461280a7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_y_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a5560f5e2b28329aa82cbd390ac329182" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_y_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac3a3fd076d0de88152b41aba023b8a14" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_yaw</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a98659bfb8e634c1d346e01ac67c0f157" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_yAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a59199ef0975673cca61244d627edbb44" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_z_get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1a3d5cf8e3f15191812b1a90f51ed36b7b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_z_set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ac311719e506a5f6602ff84016d5f0554" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_zAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i_1ab9154e6935a152adaed9ed909c9e2b96" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::LeapJNI</scope><name>Vector_zero</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_listener" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Listener</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a2e5759c1e4cac52df5069e0ede671518" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Listener.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1acd9b4c3e2eca32372b3ec2053060ab11" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Listener.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="26" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a080011667b8f715d60f3c77d84fe6996" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="37" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a6bcbd74164a7f501cda05fca2e25b2ce" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Listener.Listener</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Listener</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1af47f445444ec5eb2acb54c6492e1a338" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.swigDirectorDisconnect</definition>
        <argsstring>()</argsstring>
        <name>swigDirectorDisconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="51" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="51" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a1b701dcae0621671ae02a7bf82ce4f92" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Listener.getCPtr</definition>
        <argsstring>(Listener obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="33" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a687eefc3e1173aed394bdd7da34bc860" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Listener.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="41" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1ae7f2e02d1f441c8f9c0868168106c84b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Listener.Listener</definition>
        <argsstring>()</argsstring>
        <name>Listener</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="68" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a46b9ec2670695d44d4e9ddf77c8301c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onConnect</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onConnect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object connects to the Leap software, or when this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> object is added to a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> that is already connected. </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>void SampleListener::onConnect(const Controller&amp; controller) {
    std::cout &lt;&lt; "Connected" &lt;&lt; std::endl;
}
</verbatim></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="99" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a860bf64a24bcb4ac5bce4e8d35c48783" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onDisconnect</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onDisconnect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object disconnects from the Leap software. </para>        </briefdescription>
        <detaileddescription>
<para>The controller can disconnect when the Leap device is unplugged, the user shuts the Leap software down, or the Leap software encounters an unrecoverable error. <verbatim>void SampleListener::onDisconnect(const Controller&amp; controller) {
    std::cout &lt;&lt; "Disconnected" &lt;&lt; std::endl;
}
</verbatim></para><para>Note: When you launch a Leap-enabled application in a debugger, the Leap library does not disconnect from the application. This is to allow you to step through code without losing the connection because of time outs.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="121" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a78fa3b1a0850e3d8410b7200f3d813af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onExit</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onExit</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> object is removed from the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> or the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> instance is destroyed. </para>        </briefdescription>
        <detaileddescription>
<para>void SampleListener::onExit(const Controller&amp; controller) { std::cout &lt;&lt; "Exited" &lt;&lt; std::endl; }</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="136" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1afb0bdc73f5b4edf164a4b1134557f975" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onFrame</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onFrame</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called when a new frame of hand and finger tracking data is available. </para>        </briefdescription>
        <detaileddescription>
<para>Access the new frame data using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">Controller::frame()</ref> function.</para><para>void SampleListener::onFrame(const Controller&amp; controller) { std::cout &lt;&lt; "New Frame" &lt;&lt; std::endl; }</para><para>Note, the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> skips any pending onFrame events while your onFrame handler executes. If your implementation takes too long to return, one or more frames can be skipped. The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> still inserts the skipped frames into the frame history. You can access recent frames by setting the history parameter when calling the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member">Controller::frame()</ref> function. You can determine if any pending onFrame events were skipped by comparing the ID of the most recent frame with the ID of the last received frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="159" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a9350b36122e690e20078ba284701bed0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.onInit</definition>
        <argsstring>(Controller arg0)</argsstring>
        <name>onInit</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Called once, when this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> object is newly added to a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>void SampleListener::onInit(const Controller&amp; controller) {
    std::cout &lt;&lt; "Initialized" &lt;&lt; std::endl;
}
</verbatim></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object invoking this callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="83" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1ac6fdcd80b9f4724041a4735a9c87d689" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.swigReleaseOwnership</definition>
        <argsstring>()</argsstring>
        <name>swigReleaseOwnership</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="56" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_listener_1a8189543607557012e98654bd5642d6f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Listener.swigTakeOwnership</definition>
        <argsstring>()</argsstring>
        <name>swigTakeOwnership</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="61" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="61" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> class defines a set of callback functions that you can override in a subclass to respond to events dispatched by the Leap. </para>    </briefdescription>
    <detaileddescription>
<para>To handle Leap events, create an instance of a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> subclass and assign it to the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> instance. The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> calls the relevant <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> callback function when an event occurs, passing in a reference to itself. You do not have to implement callbacks for events you do not want to handle.</para><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound">Controller</ref> object calls these <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> functions from a thread created by the Leap library, not the thread used to create or set the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound">Listener</ref> instance. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java" bodystart="24" bodyend="163"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a687eefc3e1173aed394bdd7da34bc860" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a080011667b8f715d60f3c77d84fe6996" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a1b701dcae0621671ae02a7bf82ce4f92" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a6bcbd74164a7f501cda05fca2e25b2ce" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>Listener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1ae7f2e02d1f441c8f9c0868168106c84b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>Listener</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a46b9ec2670695d44d4e9ddf77c8301c3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onConnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a860bf64a24bcb4ac5bce4e8d35c48783" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onDisconnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a78fa3b1a0850e3d8410b7200f3d813af" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onExit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1afb0bdc73f5b4edf164a4b1134557f975" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onFrame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a9350b36122e690e20078ba284701bed0" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>onInit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1acd9b4c3e2eca32372b3ec2053060ab11" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a2e5759c1e4cac52df5069e0ede671518" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1af47f445444ec5eb2acb54c6492e1a338" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigDirectorDisconnect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1ac6fdcd80b9f4724041a4735a9c87d689" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigReleaseOwnership</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a8189543607557012e98654bd5642d6f8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Listener</scope><name>swigTakeOwnership</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_matrix" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Matrix</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1ac32a997afb52a29e5021a5fe4efd32ee" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Matrix.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="23" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a6e6bb90ec1861441d74f04fd9f13bf2c" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Matrix.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a6bcc22791ef86bab34c6ec06f03f8669" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Matrix.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="35" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1ac2981eb687f92319e7a6cb33761aba00" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Matrix.Matrix</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Matrix</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="26" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="26" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a91e83a1a2234bea2c8b1055ac085d643" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Matrix.getCPtr</definition>
        <argsstring>(Matrix obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="31" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="31" bodyend="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a250a45d982aa5da05602096f749f63da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Matrix.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="39" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="39" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a11a92236fe5995059950a6750d9b857d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Matrix.equals</definition>
        <argsstring>(Matrix other)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref> equality component-wise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="223" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a93ef0ca7ea36d2cea05025b57a78557c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Matrix.getOrigin</definition>
        <argsstring>()</argsstring>
        <name>getOrigin</name>
        <briefdescription>
<para>The translation factors for all three axes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="280" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Matrix.getXBasis</definition>
        <argsstring>()</argsstring>
        <name>getXBasis</name>
        <briefdescription>
<para>The rotation and scale factors for the x-axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="241" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Matrix.getYBasis</definition>
        <argsstring>()</argsstring>
        <name>getYBasis</name>
        <briefdescription>
<para>The rotation and scale factors for the y-axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="254" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Matrix.getZBasis</definition>
        <argsstring>()</argsstring>
        <name>getZBasis</name>
        <briefdescription>
<para>The rotation and scale factors for the z-axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="267" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Matrix.Matrix</definition>
        <argsstring>()</argsstring>
        <name>Matrix</name>
        <briefdescription>
<para>Constructs an identity transformation matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="84" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a5958715a3406232788335c4f385f7c35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Matrix.Matrix</definition>
        <argsstring>(Matrix other)</argsstring>
        <name>Matrix</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Constructs a copy of the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="90" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1affd77bf9190c0abf72c180e9bc49be80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Matrix.Matrix</definition>
        <argsstring>(Vector _xBasis, Vector _yBasis, Vector _zBasis)</argsstring>
        <name>Matrix</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_xBasis</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_yBasis</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_zBasis</declname>
        </param>
        <briefdescription>
<para>Constructs a transformation matrix from the specified basis vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_xBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying rotation and scale factors for the x-axis. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_yBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying rotation and scale factors for the y-axis. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_zBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying rotation and scale factors for the z-axis. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="102" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a8c7fec1385dcf437ccbce7f5406d29ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Matrix.Matrix</definition>
        <argsstring>(Vector _xBasis, Vector _yBasis, Vector _zBasis, Vector _origin)</argsstring>
        <name>Matrix</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_xBasis</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_yBasis</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_zBasis</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_origin</declname>
        </param>
        <briefdescription>
<para>Constructs a transformation matrix from the specified basis and translation vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_xBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying rotation and scale factors for the x-axis. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_yBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying rotation and scale factors for the y-axis. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_zBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying rotation and scale factors for the z-axis. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_origin</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying translation factors on all three axes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="115" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1ada1ae05d8c592ea3adc32d0b7285cead" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Matrix.Matrix</definition>
        <argsstring>(Vector axis, float angleRadians)</argsstring>
        <name>Matrix</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angleRadians</declname>
        </param>
        <briefdescription>
<para>Constructs a transformation matrix specifying a rotation around the specified vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying the axis of rotation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleRadians</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of rotation in radians. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="126" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a99bd5fac991f78359c7c5d11f8251e2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Matrix.Matrix</definition>
        <argsstring>(Vector axis, float angleRadians, Vector translation)</argsstring>
        <name>Matrix</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angleRadians</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>translation</declname>
        </param>
        <briefdescription>
<para>Constructs a transformation matrix specifying a rotation around the specified vector and a translation by the specified vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying the axis of rotation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleRadians</parametername>
</parameternamelist>
<parameterdescription>
<para>The angle of rotation in radians. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>translation</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the translation part of the transform. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="139" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1afa9c1bd198e2c79335102f984803dd04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix com.leapmotion.leap.Matrix.rigidInverse</definition>
        <argsstring>()</argsstring>
        <name>rigidInverse</name>
        <briefdescription>
<para>Performs a matrix inverse if the matrix consists entirely of rigid transformations (translations and rotations). </para>        </briefdescription>
        <detaileddescription>
<para>If the matrix is not rigid, this operation will not represent an inverse.</para><para>Note that all matricies that are directly returned by the API are rigid.</para><para><simplesect kind="return"><para>The rigid inverse of the matrix. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="203" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aaadcba5062752797ca57e4ff85ceb824" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Matrix.setOrigin</definition>
        <argsstring>(Vector value)</argsstring>
        <name>setOrigin</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>The translation factors for all three axes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="274" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a9bfabbe6d014993280fb3d32567f6566" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Matrix.setRotation</definition>
        <argsstring>(Vector _axis, float angleRadians)</argsstring>
        <name>setRotation</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_axis</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angleRadians</declname>
        </param>
        <briefdescription>
<para>Sets this transformation matrix to represent a rotation around the specified vector. </para>        </briefdescription>
        <detaileddescription>
<para>This function erases any previous rotation and scale transforms applied to this matrix, but does not affect translation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_axis</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> specifying the axis of rotation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angleRadians</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of rotation in radians. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="163" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a91a2189aed5e3bbc0ed194527003cc74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Matrix.setXBasis</definition>
        <argsstring>(Vector value)</argsstring>
        <name>setXBasis</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>The rotation and scale factors for the x-axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="235" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a0830cf554cf505a9e8f702c39c5d2921" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Matrix.setYBasis</definition>
        <argsstring>(Vector value)</argsstring>
        <name>setYBasis</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>The rotation and scale factors for the y-axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="248" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aaa0663d2830fd305ed802cce9eb09b66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Matrix.setZBasis</definition>
        <argsstring>(Vector value)</argsstring>
        <name>setZBasis</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>The rotation and scale factors for the z-axis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="261" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2310b676acccf5f1ae1c5b66f3ba1cf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix com.leapmotion.leap.Matrix.times</definition>
        <argsstring>(Matrix other)</argsstring>
        <name>times</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Multiply transform matrices. </para>        </briefdescription>
        <detaileddescription>
<para>Combines two transformations into a single equivalent transformation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref> to multiply on the right hand side. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref> representing the transformation equivalent to applying the other transformation followed by this transformation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="217" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a494fc5e74f6a4ff26e100cd5e20019a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float[]</type>
        <definition>float [] com.leapmotion.leap.Matrix.toArray3x3</definition>
        <argsstring>(float[] output)</argsstring>
        <name>toArray3x3</name>
        <param>
          <type>float[]</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="49" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a055560c1bba71e860ff9caf079168f56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] com.leapmotion.leap.Matrix.toArray3x3</definition>
        <argsstring>(double[] output)</argsstring>
        <name>toArray3x3</name>
        <param>
          <type>double[]</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="55" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aa0c29029d6f71732fc365027d6b67b87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float[]</type>
        <definition>float [] com.leapmotion.leap.Matrix.toArray3x3</definition>
        <argsstring>()</argsstring>
        <name>toArray3x3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="61" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d6a9437a19048718ea32072b0bdae86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float[]</type>
        <definition>float [] com.leapmotion.leap.Matrix.toArray4x4</definition>
        <argsstring>(float[] output)</argsstring>
        <name>toArray4x4</name>
        <param>
          <type>float[]</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="64" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a78368739466e8a17b278546e0adb4516" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] com.leapmotion.leap.Matrix.toArray4x4</definition>
        <argsstring>(double[] output)</argsstring>
        <name>toArray4x4</name>
        <param>
          <type>double[]</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="71" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="71" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aad8d649629fdc810a884a10b02cc66e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float[]</type>
        <definition>float [] com.leapmotion.leap.Matrix.toArray4x4</definition>
        <argsstring>()</argsstring>
        <name>toArray4x4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="78" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a9527c7aed8be36db3ca94b7e55564cec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Matrix.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>Write the matrix to a string in a human readable format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="229" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1afb281870b00541a564e65d75bc18d563" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Matrix.transformDirection</definition>
        <argsstring>(Vector in)</argsstring>
        <name>transformDirection</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Transforms a vector with this matrix by transforming its rotation and scale only. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> to transform. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the transformed original. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="189" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a5d53f3c89146984ecfce93656a79dd27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Matrix.transformPoint</definition>
        <argsstring>(Vector in)</argsstring>
        <name>transformPoint</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Transforms a vector with this matrix by transforming its rotation, scale, and translation. </para>        </briefdescription>
        <detaileddescription>
<para>Translation is applied after rotation and scale.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> to transform. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the transformed original. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="177" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="177" bodyend="179"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_matrix_1ae913d8d9ae2a7b3fd392d377aa857b52" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix com.leapmotion.leap.Matrix.identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
<para>Returns the identity matrix specifying no translation, rotation, and scale. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The identity matrix. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="149" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="149" bodyend="151"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound">Matrix</ref> struct represents a transformation matrix. </para>    </briefdescription>
    <detaileddescription>
<para>To use this struct to transform a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref>, construct a matrix containing the desired transformation and then use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a5d53f3c89146984ecfce93656a79dd27" kindref="member">Matrix::transformPoint()</ref> or <ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1afb281870b00541a564e65d75bc18d563" kindref="member">Matrix::transformDirection()</ref> functions to apply the transform.</para><para>Transforms can be combined by multiplying two or more transform matrices using the * operator. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" line="22" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java" bodystart="22" bodyend="285"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a250a45d982aa5da05602096f749f63da" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a11a92236fe5995059950a6750d9b857d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a6bcc22791ef86bab34c6ec06f03f8669" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a91e83a1a2234bea2c8b1055ac085d643" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a93ef0ca7ea36d2cea05025b57a78557c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>getOrigin</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>getXBasis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>getYBasis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>getZBasis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1ae913d8d9ae2a7b3fd392d377aa857b52" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>identity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1ac2981eb687f92319e7a6cb33761aba00" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>Matrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>Matrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a5958715a3406232788335c4f385f7c35" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>Matrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1affd77bf9190c0abf72c180e9bc49be80" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>Matrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a8c7fec1385dcf437ccbce7f5406d29ca" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>Matrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1ada1ae05d8c592ea3adc32d0b7285cead" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>Matrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a99bd5fac991f78359c7c5d11f8251e2e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>Matrix</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1afa9c1bd198e2c79335102f984803dd04" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>rigidInverse</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aaadcba5062752797ca57e4ff85ceb824" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>setOrigin</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a9bfabbe6d014993280fb3d32567f6566" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>setRotation</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a91a2189aed5e3bbc0ed194527003cc74" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>setXBasis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a0830cf554cf505a9e8f702c39c5d2921" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>setYBasis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aaa0663d2830fd305ed802cce9eb09b66" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>setZBasis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a6e6bb90ec1861441d74f04fd9f13bf2c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1ac32a997afb52a29e5021a5fe4efd32ee" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2310b676acccf5f1ae1c5b66f3ba1cf1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>times</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a494fc5e74f6a4ff26e100cd5e20019a1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>toArray3x3</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a055560c1bba71e860ff9caf079168f56" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>toArray3x3</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aa0c29029d6f71732fc365027d6b67b87" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>toArray3x3</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d6a9437a19048718ea32072b0bdae86" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>toArray4x4</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a78368739466e8a17b278546e0adb4516" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>toArray4x4</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aad8d649629fdc810a884a10b02cc66e5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>toArray4x4</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a9527c7aed8be36db3ca94b7e55564cec" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1afb281870b00541a564e65d75bc18d563" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>transformDirection</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a5d53f3c89146984ecfce93656a79dd27" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Matrix</scope><name>transformPoint</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_pointable" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Pointable</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" prot="public" virt="non-virtual">com.leapmotion.leap.Finger</derivedcompoundref>
    <derivedcompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" prot="public" virt="non-virtual">com.leapmotion.leap.Tool</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a42f779b1c61f84365d9e5a269c699284" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Pointable.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="29" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af63ba2e67b3588e62ceedbd89db7e4c7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Pointable.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="40" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ad5e0cc39f620718a50710fa6c3ab2812" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Pointable.Pointable</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Pointable</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="31" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="31" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a7f3051e6807456cb21e23d97543b5181" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Pointable.getCPtr</definition>
        <argsstring>(Pointable obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="36" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="36" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1acc8e04c2c6a6ec147238a2ede42b56b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Pointable.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="44" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="44" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1affbc3d564e74967addf273eb7006e7ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Pointable.direction</definition>
        <argsstring>()</argsstring>
        <name>direction</name>
        <briefdescription>
<para>The direction in which this finger or tool is pointing. </para>        </briefdescription>
        <detaileddescription>
<para>The direction is expressed as a unit vector pointing in the same direction as the tip.</para><para><image type="html" name="Leap_Finger_Model.png"/>
</para><para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> pointing in the same direction as the tip of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="137" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a39b00dc8ec7e54c5e07e591b38db29cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Pointable.equals</definition>
        <argsstring>(Pointable arg0)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object equality. </para>        </briefdescription>
        <detaileddescription>
<para>Two <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects are equal if and only if both <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects represent the exact same physical entities in the same frame and both <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects are valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="220" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a0fc9745b4aa3f0284880647b4b482612" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref></type>
        <definition>Frame com.leapmotion.leap.Pointable.frame</definition>
        <argsstring>()</argsstring>
        <name>frame</name>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> associated with this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The associated <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object, if available; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="90" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a10e06f1db3177a259a5e0966fb361e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>Hand com.leapmotion.leap.Pointable.hand</definition>
        <argsstring>()</argsstring>
        <name>hand</name>
        <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> associated with this finger or tool. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The associated <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object, if available; otherwise, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="101" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a46e7a47f1aa97fb073b61bc6eb1b2031" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.Pointable.id</definition>
        <argsstring>()</argsstring>
        <name>id</name>
        <briefdescription>
<para>A unique ID assigned to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object, whose value remains the same across consecutive frames while the tracked finger or tool remains visible. </para>        </briefdescription>
        <detaileddescription>
<para>If tracking is lost (for example, when a finger is occluded by another finger or when it is withdrawn from the Leap field of view), the Leap may assign a new ID when it detects the entity in a future frame.</para><para>Use the ID value with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a91c0d83c637fb367e72216d22dac8fb7" kindref="member">Frame::pointable()</ref> function to find this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object in future frames.</para><para><simplesect kind="return"><para>The ID assigned to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="79" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af8a0d3d9dc96d7d86545e604f41cb6af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Pointable.isFinger</definition>
        <argsstring>()</argsstring>
        <name>isFinger</name>
        <briefdescription>
<para>Whether or not the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> is believed to be a finger. </para>        </briefdescription>
        <detaileddescription>
<para>Fingers are generally shorter, thicker, and less straight than tools.</para><para><simplesect kind="return"><para>True, if this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> is classified as a finger. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="175" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a1a939138ab33f2d76e0aebdbdc28861e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Pointable.isTool</definition>
        <argsstring>()</argsstring>
        <name>isTool</name>
        <briefdescription>
<para>Whether or not the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> is believed to be a tool. </para>        </briefdescription>
        <detaileddescription>
<para>Tools are generally longer, thinner, and straighter than fingers.</para><para><simplesect kind="return"><para>True, if this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> is classified as a tool. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="186" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Pointable.isValid</definition>
        <argsstring>()</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Reports whether this is a valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True, if this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object contains valid tracking data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="196" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1aa8f442aa58b8694384327f29111a0c41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Pointable.length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <briefdescription>
<para>The estimated length of the finger or tool in millimeters. </para>        </briefdescription>
        <detaileddescription>
<para>The reported length is the visible length of the finger or tool from the hand to tip. If the length isn't known, then a value of 0 is returned.</para><para><simplesect kind="return"><para>The estimated length of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="164" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af2d1ea38d8b44a706cc86c32769b7cb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Pointable.Pointable</definition>
        <argsstring>()</argsstring>
        <name>Pointable</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>An uninitialized pointable is considered invalid. Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> or a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="62" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a34729c90d3c4b38a6f5994ae1ad14ee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Pointable.tipPosition</definition>
        <argsstring>()</argsstring>
        <name>tipPosition</name>
        <briefdescription>
<para>The tip position in millimeters from the Leap origin. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of the tip position. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="111" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af7389a76398c7928d339c73f5af02d9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Pointable.tipVelocity</definition>
        <argsstring>()</argsstring>
        <name>tipVelocity</name>
        <briefdescription>
<para>The rate of change of the tip position in millimeters/second. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of the tip velocity. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="121" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a91c99f0961d34be8d67ea4124ca238c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Pointable.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>A string containing a brief, human readable description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object as a string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="230" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1abba55cfb2de52af88b5a1faec2b1923b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Pointable.width</definition>
        <argsstring>()</argsstring>
        <name>width</name>
        <briefdescription>
<para>The estimated width of the finger or tool in millimeters. </para>        </briefdescription>
        <detaileddescription>
<para>The reported width is the average width of the visible portion of the finger or tool from the hand to the tip. If the width isn't known, then a value of 0 is returned.</para><para><simplesect kind="return"><para>The estimated width of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="151" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="151" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a8d83e3b802c19f19a0f517b34095bc22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>static Pointable com.leapmotion.leap.Pointable.invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
<para>Returns an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>You can use the instance returned by this function in comparisons testing whether a given <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> instance is valid or invalid. (You can also use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" kindref="member">Pointable::isValid()</ref> function.)</para><para><simplesect kind="return"><para>The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="210" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="210" bodyend="212"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> class reports the physical characteristics of a detected finger or tool. </para>    </briefdescription>
    <detaileddescription>
<para>Both fingers and tools are classified as <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects. Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af8a0d3d9dc96d7d86545e604f41cb6af" kindref="member">Pointable::isFinger()</ref> function to determine whether a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object represents a finger. Use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a1a939138ab33f2d76e0aebdbdc28861e" kindref="member">Pointable::isTool()</ref> function to determine whether a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object represents a tool. The Leap classifies a detected entity as a tool when it is thinner, straighter, and longer than a typical finger.</para><para>Note that <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects can be invalid, which means that they do not contain valid tracking data and do not correspond to a physical entity. Invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects can be the result of asking for a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object using an ID from an earlier frame when no <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects with that ID exist in the current frame. A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object created from the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> constructor is also invalid. Test for validity with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" kindref="member">Pointable::isValid()</ref> function. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="75">
        <label>com.leapmotion.leap.Pointable</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_pointable"/>
      </node>
      <node id="76">
        <label>com.leapmotion.leap.Finger</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_finger"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>com.leapmotion.leap.Tool</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_tool"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java" bodystart="28" bodyend="234"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1acc8e04c2c6a6ec147238a2ede42b56b9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1affbc3d564e74967addf273eb7006e7ae" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a39b00dc8ec7e54c5e07e591b38db29cf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af63ba2e67b3588e62ceedbd89db7e4c7" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a0fc9745b4aa3f0284880647b4b482612" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a7f3051e6807456cb21e23d97543b5181" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Pointable</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a10e06f1db3177a259a5e0966fb361e7a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a46e7a47f1aa97fb073b61bc6eb1b2031" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a8d83e3b802c19f19a0f517b34095bc22" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af8a0d3d9dc96d7d86545e604f41cb6af" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>isFinger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a1a939138ab33f2d76e0aebdbdc28861e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>isTool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1aa8f442aa58b8694384327f29111a0c41" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>length</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ad5e0cc39f620718a50710fa6c3ab2812" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>Pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af2d1ea38d8b44a706cc86c32769b7cb5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>Pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a42f779b1c61f84365d9e5a269c699284" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a34729c90d3c4b38a6f5994ae1ad14ee2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>tipPosition</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af7389a76398c7928d339c73f5af02d9e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>tipVelocity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a91c99f0961d34be8d67ea4124ca238c5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1abba55cfb2de52af88b5a1faec2b1923b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Pointable</scope><name>width</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::PointableList</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Iterable&lt; Pointable &gt;</basecompoundref>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator" prot="public">com::leapmotion::leap::PointableList::PointableListIterator</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a9b716ba14757cd5aef4d866b98f5df64" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.PointableList.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a535cb6343198189d0aac5fd1f2548d09" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.PointableList.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="31" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a398fb64f10463ac1b0733a8982fe9008" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.PointableList.PointableList</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>PointableList</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="22" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="22" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a6b0c1243fa702a2b6b734273fcbaf6c0" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.PointableList.getCPtr</definition>
        <argsstring>(PointableList obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="27" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="27" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a85116f43e8731bf1e1f0842eff5388be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
        <definition>PointableList com.leapmotion.leap.PointableList.append</definition>
        <argsstring>(PointableList other)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the members of the specifed <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref> to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref> object containing <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects to append to the end of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="101" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1aed24d512a1993211a936170fe0ed6e4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
        <definition>PointableList com.leapmotion.leap.PointableList.append</definition>
        <argsstring>(FingerList other)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the members of the specifed <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref> to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound">FingerList</ref> object containing <ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound">Finger</ref> objects to append to the end of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="111" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a1d09b7efb25be395479376bb872782a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref></type>
        <definition>PointableList com.leapmotion.leap.PointableList.append</definition>
        <argsstring>(ToolList other)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the members of the specifed <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref> to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref> object containing <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects to append to the end of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="121" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1ae801f8eea46b390760c0db493992923f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.PointableList.count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
<para>Returns the number of pointable entities in this list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of pointable entities in this list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="72" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1ad77056e4660b1601cfb609f889e30124" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.PointableList.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="35" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="35" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a5efc8624ea6be2325c385f5e3d95bae6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.PointableList.empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Reports whether the list is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True, if the list has no members. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="81" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1adc417a0c06ea2fae5924edcae98eed88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>Pointable com.leapmotion.leap.PointableList.get</definition>
        <argsstring>(int index)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Access a list member by its position in the list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero-based list position index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object at the specified index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="91" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a6c87ccc07dd8633e33e9628799ff8979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>java.util.Iterator&lt; <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> &gt;</type>
        <definition>java.util.Iterator&lt;Pointable&gt; com.leapmotion.leap.PointableList.iterator</definition>
        <argsstring>()</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="57" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a96265c7491b43c6a72feddec2267f800" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.PointableList.PointableList</definition>
        <argsstring>()</argsstring>
        <name>PointableList</name>
        <briefdescription>
<para>Constructs an empty list of pointable entities. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="63" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="63" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref> class represents a list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects include entities that can be pointed, such as fingers and tools.</para><para>Get a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound">PointableList</ref> object by calling <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1aeaadff41e48021771b3e33333c505d5d" kindref="member">Frame::pointables()</ref>. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="19" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="19" bodyend="125"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a85116f43e8731bf1e1f0842eff5388be" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1aed24d512a1993211a936170fe0ed6e4b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a1d09b7efb25be395479376bb872782a9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1ae801f8eea46b390760c0db493992923f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1ad77056e4660b1601cfb609f889e30124" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a5efc8624ea6be2325c385f5e3d95bae6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a535cb6343198189d0aac5fd1f2548d09" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1adc417a0c06ea2fae5924edcae98eed88" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a6b0c1243fa702a2b6b734273fcbaf6c0" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::PointableList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a6c87ccc07dd8633e33e9628799ff8979" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>iterator</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a398fb64f10463ac1b0733a8982fe9008" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>PointableList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a96265c7491b43c6a72feddec2267f800" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>PointableList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a9b716ba14757cd5aef4d866b98f5df64" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::PointableList</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::PointableList::PointableListIterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">java::util::Iterator&lt; Pointable &gt;</basecompoundref>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator_1af14326452bb491c7fd1a8947a02195fc" prot="package" static="no" mutable="no">
        <type>int</type>
        <definition>int com.leapmotion.leap.PointableList.PointableListIterator.index</definition>
        <argsstring/>
        <name>index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="47" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator_1a5921d48ec163ac459c46e267ceeed2e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.PointableList.PointableListIterator.hasNext</definition>
        <argsstring>()</argsstring>
        <name>hasNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="48" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator_1ad73e00af9ea72f5d8c33d0ccf08095cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>Pointable com.leapmotion.leap.PointableList.PointableListIterator.next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="51" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator_1a4d5786da4bd7ba777cce1ee0c1c93c47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.PointableList.PointableListIterator.remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="54" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="54" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java" bodystart="46" bodyend="56"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator_1a5921d48ec163ac459c46e267ceeed2e6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList::PointableListIterator</scope><name>hasNext</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator_1af14326452bb491c7fd1a8947a02195fc" prot="package" virt="non-virtual"><scope>com::leapmotion::leap::PointableList::PointableListIterator</scope><name>index</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator_1ad73e00af9ea72f5d8c33d0ccf08095cd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList::PointableListIterator</scope><name>next</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator_1a4d5786da4bd7ba777cce1ee0c1c93c47" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::PointableList::PointableListIterator</scope><name>remove</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_screen" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Screen</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a50ee57f8527a7dea750537ab92aa428b" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Screen.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="37" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0352f668cccf21a4a94cf3ed85ec575d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Screen.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="48" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1ac293bd714f672d6f6d2b90bab4ecce8a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Screen.Screen</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Screen</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="39" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="39" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a7210ae8b40ea6d64d7a59f7feaa07865" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Screen.getCPtr</definition>
        <argsstring>(Screen obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="44" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="44" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a9d9fc867c67a9e76d62af5108f31367f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.bottomLeftCorner</definition>
        <argsstring>()</argsstring>
        <name>bottomLeftCorner</name>
        <briefdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the bottom left corner of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> within the Leap coordinate system. </para>        </briefdescription>
        <detaileddescription>
<para>The point represented by this vector defines the origin of the screen in the Leap coordinate system.</para><para>Together, <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1adc291ef5b94913e54c4250da15c666dd" kindref="member">horizontalAxis()</ref>, <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a275a06f4572ef4c37a862f705bb21bae" kindref="member">verticalAxis()</ref>, and <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a9d9fc867c67a9e76d62af5108f31367f" kindref="member">bottomLeftCorner()</ref> describe the physical position, size and orientation of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref>.</para><para><simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of the bottom-left corner of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="514" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="514" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1aaff2883cecf9de24d798f670b2638576" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Screen.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="52" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="52" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a3944427f7ab482cb79cb0cd0fe62d396" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Screen.distanceToPoint</definition>
        <argsstring>(Vector point)</argsstring>
        <name>distanceToPoint</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>The shortest distance from the specified point to the plane in which this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> lies. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The length of the perpendicular line segment extending from the plane this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> lies in to the specified point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="560" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="560" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1ad40b7c54aef7d8bb55caf654b6ac7bdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Screen.equals</definition>
        <argsstring>(Screen arg0)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object equality. </para>        </briefdescription>
        <detaileddescription>
<para>Two <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> objects are equal if and only if both <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> objects represent the exact same Screens and both Screens are valid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="601" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="601" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0430a290919b6c494538a598260ead2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.Screen.heightPixels</definition>
        <argsstring>()</argsstring>
        <name>heightPixels</name>
        <briefdescription>
<para>The vertical resolution of this screen, in pixels. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The height of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> in pixels. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="548" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="548" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1adc291ef5b94913e54c4250da15c666dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.horizontalAxis</definition>
        <argsstring>()</argsstring>
        <name>horizontalAxis</name>
        <briefdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the horizontal axis of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> within the Leap coordinate system. </para>        </briefdescription>
        <detaileddescription>
<para>The magnitude of this vector estimates the physical width of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> in millimeters. The direction of this vector is parallel to the bottom edge of the screen and points toward the right edge of the screen.</para><para>Together, <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1adc291ef5b94913e54c4250da15c666dd" kindref="member">horizontalAxis()</ref>, <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a275a06f4572ef4c37a862f705bb21bae" kindref="member">verticalAxis()</ref>, and <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a9d9fc867c67a9e76d62af5108f31367f" kindref="member">bottomLeftCorner()</ref> describe the physical position, size and orientation of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref>.</para><para><simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the bottom, horizontal edge of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="478" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="478" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a7e259d19686e894620125b3db791e04b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.Screen.id</definition>
        <argsstring>()</argsstring>
        <name>id</name>
        <briefdescription>
<para>A unique identifier for this screen based on the screen information in the configuration. </para>        </briefdescription>
        <detaileddescription>
<para>A default screen with ID, <emphasis>0</emphasis>, always exists and contains default characteristics, even if no screens have been located. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="82" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a4b8a8b37c26147deff0707112123bafe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.intersect</definition>
        <argsstring>(Pointable pointable, boolean normalize, float clampRatio)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>pointable</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>normalize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>clampRatio</declname>
        </param>
        <briefdescription>
<para>Returns the intersection between this screen and a ray projecting from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>The projected ray emanates from the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> tipPosition along the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref>'s direction vector.</para><para>Set the normalize parameter to true to request the intersection point in normalized screen coordinates. Normalized screen coordinates are usually values between 0 and 1, where 0 represents the screen's origin at the bottom-left corner and 1 represents the opposite edge (either top or right). When you request normalized coordinates, the z-component of the returned vector is zero. Multiply a normalized coordinate by the values returned by <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0a307da9d78fd4c7fcbe046df4defc93" kindref="member">Screen::widthPixels()</ref> or <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0430a290919b6c494538a598260ead2" kindref="member">Screen::heightPixels()</ref> to calculate the screen position in pixels (remembering that many other computer graphics coordinate systems place the origin in the top-left corner).</para><para>Set the normalize parameter to false to request the intersection point in Leap coordinates (millimeters from the Leap origin).</para><para>If the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object points outside the screen's border (but still intersects the plane in which the screen lies), the returned intersection point is clamped to the nearest point on the edge of the screen.</para><para>You can use the clampRatio parameter to contract or expand the area in which you can point. For example, if you set the clampRatio parameter to 0.5, then the positions reported for intersection points outside the central 50% of the screen are moved to the border of this smaller area. If, on the other hand, you expanded the area by setting clampRatio to a value such as 3.0, then you could point well outside screen's physical boundary before the intersection points would be clamped. The positions for any points clamped would also be placed on this larger outer border. The positions reported for any intersection points inside the clamping border are unaffected by clamping.</para><para>If the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object does not point toward the plane of the screen (i.e. it is pointing parallel to or away from the screen), then the components of the returned vector are all set to NaN (not-a-number).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointable</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object to check for screen intersection.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, return normalized coordinates representing the intersection point as a percentage of the screen's width and height. If false, return Leap coordinates (millimeters from the Leap origin, which is located at the center of the top surface of the Leap device). If true and the clampRatio parameter is set to 1.0, coordinates will be of the form (0..1, 0..1, 0). Setting the clampRatio to a different value changes the range for normalized coordinates. For example, a clampRatio of 5.0 changes the range of values to be of the form (-2..3, -2..3, 0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clampRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>Adjusts the clamping border around this screen. By default this ratio is 1.0, and the border corresponds to the actual boundaries of the screen. Setting clampRatio to 0.5 would reduce the interaction area. Likewise, setting the ratio to 2.0 would increase the interaction area, adding 50% around each edge of the physical monitor. Intersection points outside the interaction area are repositioned to the closest point on the clamping border before the vector is returned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of the intersection between this screen and a ray projecting from the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="148" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1ab26a1ab014b00e3b431c319f31042d46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.intersect</definition>
        <argsstring>(Pointable pointable, boolean normalize)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>pointable</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>normalize</declname>
        </param>
        <briefdescription>
<para>Returns the intersection between this screen and a ray projecting from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>The projected ray emanates from the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> tipPosition along the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref>'s direction vector.</para><para>Set the normalize parameter to true to request the intersection point in normalized screen coordinates. Normalized screen coordinates are usually values between 0 and 1, where 0 represents the screen's origin at the bottom-left corner and 1 represents the opposite edge (either top or right). When you request normalized coordinates, the z-component of the returned vector is zero. Multiply a normalized coordinate by the values returned by <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0a307da9d78fd4c7fcbe046df4defc93" kindref="member">Screen::widthPixels()</ref> or <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0430a290919b6c494538a598260ead2" kindref="member">Screen::heightPixels()</ref> to calculate the screen position in pixels (remembering that many other computer graphics coordinate systems place the origin in the top-left corner).</para><para>Set the normalize parameter to false to request the intersection point in Leap coordinates (millimeters from the Leap origin).</para><para>If the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object points outside the screen's border (but still intersects the plane in which the screen lies), the returned intersection point is clamped to the nearest point on the edge of the screen.</para><para>You can use the clampRatio parameter to contract or expand the area in which you can point. For example, if you set the clampRatio parameter to 0.5, then the positions reported for intersection points outside the central 50% of the screen are moved to the border of this smaller area. If, on the other hand, you expanded the area by setting clampRatio to a value such as 3.0, then you could point well outside screen's physical boundary before the intersection points would be clamped. The positions for any points clamped would also be placed on this larger outer border. The positions reported for any intersection points inside the clamping border are unaffected by clamping.</para><para>If the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object does not point toward the plane of the screen (i.e. it is pointing parallel to or away from the screen), then the components of the returned vector are all set to NaN (not-a-number).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointable</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object to check for screen intersection.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, return normalized coordinates representing the intersection point as a percentage of the screen's width and height. If false, return Leap coordinates (millimeters from the Leap origin, which is located at the center of the top surface of the Leap device). If true and the clampRatio parameter is set to 1.0, coordinates will be of the form (0..1, 0..1, 0). Setting the clampRatio to a different value changes the range for normalized coordinates. For example, a clampRatio of 5.0 changes the range of values to be of the form (-2..3, -2..3, 0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clampRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>Adjusts the clamping border around this screen. By default this ratio is 1.0, and the border corresponds to the actual boundaries of the screen. Setting clampRatio to 0.5 would reduce the interaction area. Likewise, setting the ratio to 2.0 would increase the interaction area, adding 50% around each edge of the physical monitor. Intersection points outside the interaction area are repositioned to the closest point on the clamping border before the vector is returned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of the intersection between this screen and a ray projecting from the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="214" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1ab104f619cd94ec5ff26bcaf57ea86538" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.intersect</definition>
        <argsstring>(Vector position, Vector direction, boolean normalize, float clampRatio)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>normalize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>clampRatio</declname>
        </param>
        <briefdescription>
<para>Returns the intersection between this screen and a ray projecting from the specified position along the specified direction. </para>        </briefdescription>
        <detaileddescription>
<para>Set the normalize parameter to true to request the intersection point in normalized screen coordinates. Normalized screen coordinates are usually values between 0 and 1, where 0 represents the screen's origin at the bottom-left corner and 1 represents the opposite edge (either top or right). When you request normalized coordinates, the z-component of the returned vector is zero. Multiply a normalized coordinate by the values returned by <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0a307da9d78fd4c7fcbe046df4defc93" kindref="member">Screen::widthPixels()</ref> or <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0430a290919b6c494538a598260ead2" kindref="member">Screen::heightPixels()</ref> to calculate the screen position in pixels (remembering that many other computer graphics coordinate systems place the origin in the top-left corner).</para><para>Set the normalize parameter to false to request the intersection point in Leap coordinates (millimeters from the Leap origin).</para><para>If the specified ray points outside the screen's border (but still intersects the plane in which the screen lies), the returned intersection point is clamped to the nearest point on the edge of the screen.</para><para>You can use the clampRatio parameter to contract or expand the area in which you can point. For example, if you set the clampRatio parameter to 0.5, then the positions reported for intersection points outside the central 50% of the screen are moved to the border of this smaller area. If, on the other hand, you expanded the area by setting clampRatio to a value such as 3.0, then you could point well outside screen's physical boundary before the intersection points would be clamped. The positions for any points clamped would also be placed on this larger outer border. The positions reported for any intersection points inside the clamping border are unaffected by clamping.</para><para>If the specified ray does not point toward the plane of the screen (i.e. it is pointing parallel to or away from the screen), then the components of the returned vector are all set to NaN (not-a-number).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position from which to check for screen intersection. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>The direction in which to check for screen intersection.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, return normalized coordinates representing the intersection point as a percentage of the screen's width and height. If false, return Leap coordinates (millimeters from the Leap origin, which is located at the center of the top surface of the Leap device). If true and the clampRatio parameter is set to 1.0, coordinates will be of the form (0..1, 0..1, 0). Setting the clampRatio to a different value changes the range for normalized coordinates. For example, a clampRatio of 5.0 changes the range of values to be of the form (-2..3, -2..3, 0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clampRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>Adjusts the clamping border around this screen. By default this ratio is 1.0, and the border corresponds to the actual boundaries of the screen. Setting clampRatio to 0.5 would reduce the interaction area. Likewise, setting the ratio to 2.0 would increase the interaction area, adding 50% around each edge of the physical monitor. Intersection points outside the interaction area are repositioned to the closest point on the clamping border before the vector is returned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of the intersection between this screen and a ray projecting from the specified position in the specified direction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="279" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0de3a92f06b02838f8e71f028a7800b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.intersect</definition>
        <argsstring>(Vector position, Vector direction, boolean normalize)</argsstring>
        <name>intersect</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>normalize</declname>
        </param>
        <briefdescription>
<para>Returns the intersection between this screen and a ray projecting from the specified position along the specified direction. </para>        </briefdescription>
        <detaileddescription>
<para>Set the normalize parameter to true to request the intersection point in normalized screen coordinates. Normalized screen coordinates are usually values between 0 and 1, where 0 represents the screen's origin at the bottom-left corner and 1 represents the opposite edge (either top or right). When you request normalized coordinates, the z-component of the returned vector is zero. Multiply a normalized coordinate by the values returned by <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0a307da9d78fd4c7fcbe046df4defc93" kindref="member">Screen::widthPixels()</ref> or <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0430a290919b6c494538a598260ead2" kindref="member">Screen::heightPixels()</ref> to calculate the screen position in pixels (remembering that many other computer graphics coordinate systems place the origin in the top-left corner).</para><para>Set the normalize parameter to false to request the intersection point in Leap coordinates (millimeters from the Leap origin).</para><para>If the specified ray points outside the screen's border (but still intersects the plane in which the screen lies), the returned intersection point is clamped to the nearest point on the edge of the screen.</para><para>You can use the clampRatio parameter to contract or expand the area in which you can point. For example, if you set the clampRatio parameter to 0.5, then the positions reported for intersection points outside the central 50% of the screen are moved to the border of this smaller area. If, on the other hand, you expanded the area by setting clampRatio to a value such as 3.0, then you could point well outside screen's physical boundary before the intersection points would be clamped. The positions for any points clamped would also be placed on this larger outer border. The positions reported for any intersection points inside the clamping border are unaffected by clamping.</para><para>If the specified ray does not point toward the plane of the screen (i.e. it is pointing parallel to or away from the screen), then the components of the returned vector are all set to NaN (not-a-number).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position from which to check for screen intersection. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>The direction in which to check for screen intersection.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, return normalized coordinates representing the intersection point as a percentage of the screen's width and height. If false, return Leap coordinates (millimeters from the Leap origin, which is located at the center of the top surface of the Leap device). If true and the clampRatio parameter is set to 1.0, coordinates will be of the form (0..1, 0..1, 0). Setting the clampRatio to a different value changes the range for normalized coordinates. For example, a clampRatio of 5.0 changes the range of values to be of the form (-2..3, -2..3, 0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clampRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>Adjusts the clamping border around this screen. By default this ratio is 1.0, and the border corresponds to the actual boundaries of the screen. Setting clampRatio to 0.5 would reduce the interaction area. Likewise, setting the ratio to 2.0 would increase the interaction area, adding 50% around each edge of the physical monitor. Intersection points outside the interaction area are repositioned to the closest point on the clamping border before the vector is returned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of the intersection between this screen and a ray projecting from the specified position in the specified direction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="344" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="344" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a8804f80b992b43d46d29e27bfe9be417" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Screen.isValid</definition>
        <argsstring>()</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Reports whether this is a valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><bold>Important:</bold> A valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object does not necessarily contain up-to-date screen location information. Location information is only accurate until the Leap device or the monitor are moved. In addition, the primary screen always contains default location information even if the user has never run the screen location utility. This default location information will not return accurate results.</para><para><simplesect kind="return"><para>True, if this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object contains valid data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="577" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="577" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a16c58729697811e93b7656c94a902254" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.normal</definition>
        <argsstring>()</argsstring>
        <name>normal</name>
        <briefdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> normal to the plane in which this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> lies. </para>        </briefdescription>
        <detaileddescription>
<para>The normal vector is a unit direction vector orthogonal to the screen's surface plane. It points toward a viewer positioned for typical use of the monitor.</para><para><simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref>'s normal vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="528" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="528" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a117a8cdd78d4bb7c553b5bfde35f0c23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.project</definition>
        <argsstring>(Vector position, boolean normalize, float clampRatio)</argsstring>
        <name>project</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>normalize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>clampRatio</declname>
        </param>
        <briefdescription>
<para>Returns the projection from the specified position onto this screen. </para>        </briefdescription>
        <detaileddescription>
<para>Set the normalize parameter to true to request the projection point in normalized screen coordinates. Normalized screen coordinates are usually values between 0 and 1, where 0 represents the screen's origin at the bottom-left corner and 1 represents the opposite edge (either top or right). When you request normalized coordinates, the z-component of the returned vector is zero. Multiply a normalized coordinate by the values returned by <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0a307da9d78fd4c7fcbe046df4defc93" kindref="member">Screen::widthPixels()</ref> or <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0430a290919b6c494538a598260ead2" kindref="member">Screen::heightPixels()</ref> to calculate the screen position in pixels (remembering that many other computer graphics coordinate systems place the origin in the top-left corner).</para><para>Set the normalize parameter to false to request the projection point in Leap coordinates (millimeters from the Leap origin).</para><para>If the specified point projects outside the screen's border, the returned projection point is clamped to the nearest point on the edge of the screen.</para><para>You can use the clampRatio parameter to contract or expand the area in which you can point. For example, if you set the clampRatio parameter to 0.5, then the positions reported for projection points outside the central 50% of the screen are moved to the border of this smaller area. If, on the other hand, you expanded the area by setting clampRatio to a value such as 3.0, then you could point well outside screen's physical boundary before the projection points would be clamped. The positions for any points clamped would also be placed on this larger outer border. The positions reported for any projection points inside the clamping border are unaffected by clamping.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position from which to project onto this screen.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, return normalized coordinates representing the projection point as a percentage of the screen's width and height. If false, return Leap coordinates (millimeters from the Leap origin, which is located at the center of the top surface of the Leap device). If true and the clampRatio parameter is set to 1.0, coordinates will be of the form (0..1, 0..1, 0). Setting the clampRatio to a different value changes the range for normalized coordinates. For example, a clampRatio of 5.0 changes the range of values to be of the form (-2..3, -2..3, 0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clampRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>Adjusts the clamping border around this screen. By default this ratio is 1.0, and the border corresponds to the actual boundaries of the screen. Setting clampRatio to 0.5 would reduce the interaction area. Likewise, setting the ratio to 2.0 would increase the interaction area, adding 50% around each edge of the physical monitor. Projection points outside the interaction area are repositioned to the closest point on the clamping border before the vector is returned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of the projection between this screen and a ray projecting from the specified position onto the screen along its normal vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="402" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="402" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a76c6c7ee26da36c576869aa6fca97ec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.project</definition>
        <argsstring>(Vector position, boolean normalize)</argsstring>
        <name>project</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>normalize</declname>
        </param>
        <briefdescription>
<para>Returns the projection from the specified position onto this screen. </para>        </briefdescription>
        <detaileddescription>
<para>Set the normalize parameter to true to request the projection point in normalized screen coordinates. Normalized screen coordinates are usually values between 0 and 1, where 0 represents the screen's origin at the bottom-left corner and 1 represents the opposite edge (either top or right). When you request normalized coordinates, the z-component of the returned vector is zero. Multiply a normalized coordinate by the values returned by <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0a307da9d78fd4c7fcbe046df4defc93" kindref="member">Screen::widthPixels()</ref> or <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0430a290919b6c494538a598260ead2" kindref="member">Screen::heightPixels()</ref> to calculate the screen position in pixels (remembering that many other computer graphics coordinate systems place the origin in the top-left corner).</para><para>Set the normalize parameter to false to request the projection point in Leap coordinates (millimeters from the Leap origin).</para><para>If the specified point projects outside the screen's border, the returned projection point is clamped to the nearest point on the edge of the screen.</para><para>You can use the clampRatio parameter to contract or expand the area in which you can point. For example, if you set the clampRatio parameter to 0.5, then the positions reported for projection points outside the central 50% of the screen are moved to the border of this smaller area. If, on the other hand, you expanded the area by setting clampRatio to a value such as 3.0, then you could point well outside screen's physical boundary before the projection points would be clamped. The positions for any points clamped would also be placed on this larger outer border. The positions reported for any projection points inside the clamping border are unaffected by clamping.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position from which to project onto this screen.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, return normalized coordinates representing the projection point as a percentage of the screen's width and height. If false, return Leap coordinates (millimeters from the Leap origin, which is located at the center of the top surface of the Leap device). If true and the clampRatio parameter is set to 1.0, coordinates will be of the form (0..1, 0..1, 0). Setting the clampRatio to a different value changes the range for normalized coordinates. For example, a clampRatio of 5.0 changes the range of values to be of the form (-2..3, -2..3, 0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clampRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>Adjusts the clamping border around this screen. By default this ratio is 1.0, and the border corresponds to the actual boundaries of the screen. Setting clampRatio to 0.5 would reduce the interaction area. Likewise, setting the ratio to 2.0 would increase the interaction area, adding 50% around each edge of the physical monitor. Projection points outside the interaction area are repositioned to the closest point on the clamping border before the vector is returned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of the projection between this screen and a ray projecting from the specified position onto the screen along its normal vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="460" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="460" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a73d3f48363688cf3f2a7990a62ccfb6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Screen.Screen</definition>
        <argsstring>()</argsstring>
        <name>Screen</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>An uninitialized screen is considered invalid. Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> objects from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref> object obtained using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a566d7f4f612e29d1ec443ffcc4fdaa0b" kindref="member">Controller::calibratedScreens()</ref> method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="71" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a6c4b9dab3eec68cafda31c1d4173ccfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Screen.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>A string containing a brief, human readable description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> as a string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="611" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="611" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a275a06f4572ef4c37a862f705bb21bae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Screen.verticalAxis</definition>
        <argsstring>()</argsstring>
        <name>verticalAxis</name>
        <briefdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the vertical axis of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> within the Leap coordinate system. </para>        </briefdescription>
        <detaileddescription>
<para>The magnitude of this vector estimates the physical height of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> in millimeters. The direction of this vector is parallel to the left edge of the screen and points toward the top edge of the screen.</para><para>Together, <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1adc291ef5b94913e54c4250da15c666dd" kindref="member">horizontalAxis()</ref>, <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a275a06f4572ef4c37a862f705bb21bae" kindref="member">verticalAxis()</ref>, and <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a9d9fc867c67a9e76d62af5108f31367f" kindref="member">bottomLeftCorner()</ref> describe the physical position, size and orientation of this screen.</para><para><simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> representing the left, vertical edge of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="496" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="496" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0a307da9d78fd4c7fcbe046df4defc93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.Screen.widthPixels</definition>
        <argsstring>()</argsstring>
        <name>widthPixels</name>
        <briefdescription>
<para>The horizontal resolution of this screen, in pixels. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The width of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> in pixels. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="538" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="538" bodyend="540"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_1a59b8a3e73e63fdbb720925c6bd4c52a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
        <definition>static Screen com.leapmotion.leap.Screen.invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
<para>Returns an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>You can use the instance returned by this function in comparisons testing whether a given <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> instance is valid or invalid. (You can also use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a8804f80b992b43d46d29e27bfe9be417" kindref="member">Screen::isValid()</ref> function.)</para><para><simplesect kind="return"><para>The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="591" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="591" bodyend="593"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> class represents a computer monitor screen. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> class reports characteristics describing the position and orientation of the monitor screen within the Leap coordinate system. These characteristics include the bottom-left corner position of the screen, direction vectors for the horizontal and vertical axes of the screen, and the screen's normal vector. The screen must be properly registered with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> Locator for the Leap to report these characteristics accurately. The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> class also reports the size of the screen in pixels, using information obtained from the operating system. (Run the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> Locator from the Leap Application Settings dialog, on the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> page.)</para><para>You can get the point of intersection between the screen and a ray projected from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a4b8a8b37c26147deff0707112123bafe" kindref="member">Screen::intersect()</ref> function. Likewise, you can get the closest point on the screen to a point in space using the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a117a8cdd78d4bb7c553b5bfde35f0c23" kindref="member">Screen::project()</ref> function. Again, the screen location must be registered with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> Locator for these functions to return accurate values.</para><para>Note that <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> objects can be invalid, which means that they do not contain valid screen coordinate data and do not correspond to a physical entity. Test for validity with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a8804f80b992b43d46d29e27bfe9be417" kindref="member">Screen::isValid()</ref> function. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" line="36" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java" bodystart="36" bodyend="615"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a9d9fc867c67a9e76d62af5108f31367f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>bottomLeftCorner</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1aaff2883cecf9de24d798f670b2638576" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a3944427f7ab482cb79cb0cd0fe62d396" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>distanceToPoint</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1ad40b7c54aef7d8bb55caf654b6ac7bdc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0352f668cccf21a4a94cf3ed85ec575d" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a7210ae8b40ea6d64d7a59f7feaa07865" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Screen</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0430a290919b6c494538a598260ead2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>heightPixels</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1adc291ef5b94913e54c4250da15c666dd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>horizontalAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a7e259d19686e894620125b3db791e04b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a4b8a8b37c26147deff0707112123bafe" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>intersect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1ab26a1ab014b00e3b431c319f31042d46" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>intersect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1ab104f619cd94ec5ff26bcaf57ea86538" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>intersect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0de3a92f06b02838f8e71f028a7800b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>intersect</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a59b8a3e73e63fdbb720925c6bd4c52a4" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a8804f80b992b43d46d29e27bfe9be417" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a16c58729697811e93b7656c94a902254" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>normal</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a117a8cdd78d4bb7c553b5bfde35f0c23" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>project</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a76c6c7ee26da36c576869aa6fca97ec5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>project</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1ac293bd714f672d6f6d2b90bab4ecce8a" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>Screen</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a73d3f48363688cf3f2a7990a62ccfb6a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>Screen</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a50ee57f8527a7dea750537ab92aa428b" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a6c4b9dab3eec68cafda31c1d4173ccfb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a275a06f4572ef4c37a862f705bb21bae" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>verticalAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0a307da9d78fd4c7fcbe046df4defc93" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Screen</scope><name>widthPixels</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::ScreenList</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Iterable&lt; Screen &gt;</basecompoundref>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator" prot="public">com::leapmotion::leap::ScreenList::ScreenListIterator</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a52a2266bf57796ea98cce151f6da87c1" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.ScreenList.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1ae37ee59ccc4082a6907ea45ac61b89d8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.ScreenList.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="36" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1ab1dd3d14cce65d1823aa3a981355df2c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.ScreenList.ScreenList</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>ScreenList</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="27" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="27" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1af905fad7fd42f83af64e5adee30d1e64" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.ScreenList.getCPtr</definition>
        <argsstring>(ScreenList obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="32" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="32" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a6826b66fda183d59cb09483c02206d53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
        <definition>Screen com.leapmotion.leap.ScreenList.closestScreen</definition>
        <argsstring>(Vector position)</argsstring>
        <name>closestScreen</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Gets the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> closest to the specified position. </para>        </briefdescription>
        <detaileddescription>
<para>The specified position is projected along each screen's normal vector onto the screen's plane. The screen whose projected point is closest to the specified position is returned. Call Screen::intersect(position) on the returned <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object to find the projected point.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position from which to check for screen projection. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The closest <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> onto which the specified position is projected. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="167" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a630aba17bdc5610f5f7d1b1def796a3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
        <definition>Screen com.leapmotion.leap.ScreenList.closestScreenHit</definition>
        <argsstring>(Pointable pointable)</argsstring>
        <name>closestScreenHit</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>pointable</declname>
        </param>
        <briefdescription>
<para>Gets the closest <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> intercepting a ray projecting from the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>The projected ray emanates from the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> tipPosition along the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref>'s direction vector. If the projected ray does not intersect any screen surface directly, then the Leap checks for intersection with the planes extending from the surfaces of the known screens and returns the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> with the closest intersection.</para><para>If no intersections are found (i.e. the ray is directed parallel to or away from all known screens), then an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object is returned.</para><para><emphasis>Note:</emphasis> Be sure to test whether the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object returned by this method is valid. Attempting to use an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object will lead to incorrect results.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointable</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object to check for screen intersection. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The closest <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> toward which the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object is pointing, or, if the pointable is not pointing in the direction of any known screen, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="123" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1ae3d8a02bc48df584a193f7aa99bb105d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
        <definition>Screen com.leapmotion.leap.ScreenList.closestScreenHit</definition>
        <argsstring>(Vector position, Vector direction)</argsstring>
        <name>closestScreenHit</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Gets the closest <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> intercepting a ray projecting from the specified position in the specified direction. </para>        </briefdescription>
        <detaileddescription>
<para>The projected ray emanates from the position along the direction vector. If the projected ray does not intersect any screen surface directly, then the Leap checks for intersection with the planes extending from the surfaces of the known screens and returns the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> with the closest intersection.</para><para>If no intersections are found (i.e. the ray is directed parallel to or away from all known screens), then an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object is returned.</para><para><emphasis>Note:</emphasis> Be sure to test whether the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object returned by this method is valid. Attempting to use an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object will lead to incorrect results.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position from which to check for screen intersection. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>The direction in which to check for screen intersection. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The closest <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> toward which the specified ray is pointing, or, if the ray is not pointing in the direction of any known screen, an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="151" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a7d571d0f5fa89b3ed8b3d62ffeba4541" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.ScreenList.count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
<para>Returns the number of screens in this list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of screens in this list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="77" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a3fa5fb48b238ee10579823d2fd3c468f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.ScreenList.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="40" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="40" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1acd0537b800be8ba6eff441d8386cc577" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.ScreenList.empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Reports whether the list is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True, if the list has no members. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="86" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1ad6142d20a2b1547b10fd9c3126dfa74f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
        <definition>Screen com.leapmotion.leap.ScreenList.get</definition>
        <argsstring>(int index)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Access a list member by its position in the list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero-based list position index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object at the specified index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="96" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1af44cb8be45d0afd7934f5d3f392d2463" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>java.util.Iterator&lt; <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> &gt;</type>
        <definition>java.util.Iterator&lt;Screen&gt; com.leapmotion.leap.ScreenList.iterator</definition>
        <argsstring>()</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="62" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a30c583c3e258baa3177e26d7f79887e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.ScreenList.ScreenList</definition>
        <argsstring>()</argsstring>
        <name>ScreenList</name>
        <briefdescription>
<para>Constructs an empty list of screens. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="68" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="68" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref> class represents a list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>The list always contains at least one entry representing the default screen. If the user has not registered the location of this default screen, then the coordinates, directions, and other values reported by the functions in its <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> object will not be accurate. Other monitor screens only appear in the list if their positions have been registered using the Leap <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref> Locator.</para><para>Get a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound">ScreenList</ref> object by calling <ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a566d7f4f612e29d1ec443ffcc4fdaa0b" kindref="member">Controller::calibratedScreens()</ref>. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="24" bodyend="171"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a6826b66fda183d59cb09483c02206d53" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>closestScreen</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a630aba17bdc5610f5f7d1b1def796a3a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>closestScreenHit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1ae3d8a02bc48df584a193f7aa99bb105d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>closestScreenHit</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a7d571d0f5fa89b3ed8b3d62ffeba4541" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a3fa5fb48b238ee10579823d2fd3c468f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1acd0537b800be8ba6eff441d8386cc577" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1ae37ee59ccc4082a6907ea45ac61b89d8" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1ad6142d20a2b1547b10fd9c3126dfa74f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1af905fad7fd42f83af64e5adee30d1e64" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::ScreenList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1af44cb8be45d0afd7934f5d3f392d2463" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>iterator</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1ab1dd3d14cce65d1823aa3a981355df2c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>ScreenList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a30c583c3e258baa3177e26d7f79887e1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>ScreenList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a52a2266bf57796ea98cce151f6da87c1" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::ScreenList::ScreenListIterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">java::util::Iterator&lt; Screen &gt;</basecompoundref>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator_1a72b18bec393a620ae97e9a6fe032829a" prot="package" static="no" mutable="no">
        <type>int</type>
        <definition>int com.leapmotion.leap.ScreenList.ScreenListIterator.index</definition>
        <argsstring/>
        <name>index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="52" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator_1a8792d0a9fe804bc2752937adb735dbe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.ScreenList.ScreenListIterator.hasNext</definition>
        <argsstring>()</argsstring>
        <name>hasNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="53" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator_1a0fc61cbac2409980c19c80e9a771486e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound">Screen</ref></type>
        <definition>Screen com.leapmotion.leap.ScreenList.ScreenListIterator.next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="56" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator_1a35013d6a4bbeceec6747eaa921f14e48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.ScreenList.ScreenListIterator.remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="59" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="59" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" line="51" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java" bodystart="51" bodyend="61"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator_1a8792d0a9fe804bc2752937adb735dbe7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList::ScreenListIterator</scope><name>hasNext</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator_1a72b18bec393a620ae97e9a6fe032829a" prot="package" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList::ScreenListIterator</scope><name>index</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator_1a0fc61cbac2409980c19c80e9a771486e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList::ScreenListIterator</scope><name>next</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator_1a35013d6a4bbeceec6747eaa921f14e48" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenList::ScreenListIterator</scope><name>remove</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::ScreenTapGesture</compoundname>
    <basecompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" prot="public" virt="non-virtual">com.leapmotion.leap.Gesture</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1aecb8a3fad8f4198823bd525ab732013e" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.ScreenTapGesture.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="31" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a73ca7009f26e15c5ab490a0eda3a2c3c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.ScreenTapGesture.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="42" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a8da65b9d1907603f3c38e4da02c50fca" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.ScreenTapGesture.ScreenTapGesture</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>ScreenTapGesture</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="33" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a95c10db2249fcc30bc6b0dcd0498bd21" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.ScreenTapGesture.getCPtr</definition>
        <argsstring>(ScreenTapGesture obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="38" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a3b9f0fff082d8bf0ce49458736d3746a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.ScreenTapGesture.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="46" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a036e61e60292e21e750596f091281579" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.ScreenTapGesture.direction</definition>
        <argsstring>()</argsstring>
        <name>direction</name>
        <briefdescription>
<para>The direction of finger tip motion. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> A unit direction vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="105" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a615687baa717d64eba11763be949fcbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>Pointable com.leapmotion.leap.ScreenTapGesture.pointable</definition>
        <argsstring>()</argsstring>
        <name>pointable</name>
        <briefdescription>
<para>The finger performing the screen tap gesture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object representing the tapping finger. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="125" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a516f9d8ad8ccb01eb6b3765239bc0f6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.ScreenTapGesture.position</definition>
        <argsstring>()</argsstring>
        <name>position</name>
        <briefdescription>
<para>The position where the screen tap is registered. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> containing the coordinates of screen tap location. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="95" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a45e92b2d8e4a64989af0da069bf64b39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.ScreenTapGesture.progress</definition>
        <argsstring>()</argsstring>
        <name>progress</name>
        <briefdescription>
<para>The progess value is always 1.0 for a screen tap gesture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float The value 1.0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="115" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1abcee0014d6b4f96f39e95aabbc995d2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.ScreenTapGesture.ScreenTapGesture</definition>
        <argsstring>()</argsstring>
        <name>ScreenTapGesture</name>
        <briefdescription>
<para>Constructs a new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>An uninitialized <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> object is considered invalid. Get valid instances of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> class from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1aa2c8fdfaed9410f0540b4c3e5788ac35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.ScreenTapGesture.ScreenTapGesture</definition>
        <argsstring>(Gesture rhs)</argsstring>
        <name>ScreenTapGesture</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> object from an instance of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance to specialize. This <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance must be a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="85" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="85" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a80490fb65cb06fd60171c4dc05deb211" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Gesture.Type</type>
        <definition>static Gesture.Type com.leapmotion.leap.ScreenTapGesture.classType</definition>
        <argsstring>()</argsstring>
        <name>classType</name>
        <briefdescription>
<para>The screen tap gesture type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Type The type value designating a screen tap gesture. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="63" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="63" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> class represents a tapping gesture by a finger or tool. </para>    </briefdescription>
    <detaileddescription>
<para>A screen tap gesture is recognized when the tip of a finger pokes forward and then springs back to approximately the original postion, as if tapping a vertical screen. The tapping finger must pause briefly before beginning the tap.</para><para><image type="html" name="Leap_Gesture_Tap2.png"/>
</para><para><bold>Important:</bold> To use screen tap gestures in your application, you must enable recognition of the screen tap gesture. You can enable recognition with: <verbatim>Controller::enableGesture(Gesture::TYPE_SCREEN_TAP);
</verbatim></para><para>ScreenTap gestures are discrete. The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> object representing a tap always has the state, STATE_STOP. Only one <ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound">ScreenTapGesture</ref> object is created for each screen tap gesture recognized. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="90">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
      </node>
      <node id="89">
        <label>com.leapmotion.leap.ScreenTapGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture"/>
        <childnode refid="90" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="92">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
      </node>
      <node id="91">
        <label>com.leapmotion.leap.ScreenTapGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture"/>
        <childnode refid="92" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" line="30" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java" bodystart="30" bodyend="129"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a80490fb65cb06fd60171c4dc05deb211" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>classType</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a3b9f0fff082d8bf0ce49458736d3746a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a036e61e60292e21e750596f091281579" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a762ca0339845c9fd8f56eb9c50a9d939" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>duration</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ade91b8b357a0b65559f0b6e92259611a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>durationSeconds</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a9d1e2879db9699c3376ecad4ac6b5326" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a73ca7009f26e15c5ab490a0eda3a2c3c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1acd58fdacb406067210d346766317c73d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a2c538af15c0678e7913cf4c1fa9b15" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a16d3c85153f2c90a77ba8c5c74c055b8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a95c10db2249fcc30bc6b0dcd0498bd21" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1aacff5dba75bff58ece36726127ffd4d8" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Gesture."><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a774b6b0a846bc908140a9695446ec398" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>hands</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ad3e6aa7ddce5cf3079bcc6259f7d7412" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a5bf5a6582c95367b8a46ac0a220da5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a1fbc97e34f25c3e1bb2f6ffecc57c563" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a615687baa717d64eba11763be949fcbc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a43e5763a3e347a066aabd5cac4e0f899" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a516f9d8ad8ccb01eb6b3765239bc0f6d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>position</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a45e92b2d8e4a64989af0da069bf64b39" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>progress</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a8da65b9d1907603f3c38e4da02c50fca" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>ScreenTapGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1abcee0014d6b4f96f39e95aabbc995d2d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>ScreenTapGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1aa2c8fdfaed9410f0540b4c3e5788ac35" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>ScreenTapGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a13f39cae216c5f285c526936a6b0af67" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>state</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1aecb8a3fad8f4198823bd525ab732013e" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a6e5c086a26fa919648e307887cdefcf2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a7420937c98ea7646f083e5c0a469fe3d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ScreenTapGesture</scope><name>type</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kind="enum" prot="public">
    <compoundname>com::leapmotion::leap::Gesture::State</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1_1_swig_next" prot="private">com::leapmotion::leap::Gesture::State::SwigNext</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a02f6269cab3de9d62c7c5af767d33a3c" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Gesture.State.STATE_INVALID</definition>
        <argsstring/>
        <name>STATE_INVALID</name>
        <initializer>=(-1)</initializer>
        <briefdescription>
<para>An invalid state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="322" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a08a0b226a98401b97c02976216496665" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Gesture.State.STATE_START</definition>
        <argsstring/>
        <name>STATE_START</name>
        <initializer>=(1)</initializer>
        <briefdescription>
<para>The gesture is starting. </para>        </briefdescription>
        <detaileddescription>
<para>Just enough has happened to recognize it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="325" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1af2e2b06f6734aa0f62194068b0abbdfc" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Gesture.State.STATE_STOP</definition>
        <argsstring/>
        <name>STATE_STOP</name>
        <initializer>=(3)</initializer>
        <briefdescription>
<para>The gesture has completed or stopped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="331" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a832ff106172999d7e3fffcad7a0e7528" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Gesture.State.STATE_UPDATE</definition>
        <argsstring/>
        <name>STATE_UPDATE</name>
        <initializer>=(2)</initializer>
        <briefdescription>
<para>The gesture is in progress. </para>        </briefdescription>
        <detaileddescription>
<para>(Note: not all gestures have updates). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="328" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="328" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1af3022891c0597a3280b7b1406bcdde26" prot="private" static="no" mutable="no">
        <type>final int</type>
        <definition>final int com.leapmotion.leap.Gesture.State.swigValue</definition>
        <argsstring/>
        <name>swigValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="365" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="365" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a6ff444d559625a309f7d54f9ff0ac47e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>final int</type>
        <definition>final int com.leapmotion.leap.Gesture.State.swigValue</definition>
        <argsstring>()</argsstring>
        <name>swigValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="334" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="334" bodyend="336"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a440d672400edf52e15d2078a7ffc336c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound">State</ref></type>
        <definition>static State com.leapmotion.leap.Gesture.State.swigToEnum</definition>
        <argsstring>(int swigValue)</argsstring>
        <name>swigToEnum</name>
        <param>
          <type>int</type>
          <declname>swigValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="338" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="338" bodyend="346"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a512cb3255ff67df9a4408ce7ad905b63" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Gesture.State.State</definition>
        <argsstring>()</argsstring>
        <name>State</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="349" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="349" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1aafc4514663ac0547cdb5a879b57a3376" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Gesture.State.State</definition>
        <argsstring>(int swigValue)</argsstring>
        <name>State</name>
        <param>
          <type>int</type>
          <declname>swigValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="354" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1acc467845efb069ea95b84c373359a531" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Gesture.State.State</definition>
        <argsstring>(State swigEnum)</argsstring>
        <name>State</name>
        <param>
          <type><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound">State</ref></type>
          <declname>swigEnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="360" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="360" bodyend="363"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The possible gesture states. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="319" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="319" bodyend="370"/>
    <listofallmembers>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a512cb3255ff67df9a4408ce7ad905b63" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>State</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1aafc4514663ac0547cdb5a879b57a3376" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>State</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1acc467845efb069ea95b84c373359a531" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>State</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a02f6269cab3de9d62c7c5af767d33a3c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>STATE_INVALID</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a08a0b226a98401b97c02976216496665" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>STATE_START</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1af2e2b06f6734aa0f62194068b0abbdfc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>STATE_STOP</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a832ff106172999d7e3fffcad7a0e7528" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>STATE_UPDATE</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a440d672400edf52e15d2078a7ffc336c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>swigToEnum</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1af3022891c0597a3280b7b1406bcdde26" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>swigValue</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1a6ff444d559625a309f7d54f9ff0ac47e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State</scope><name>swigValue</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_string_array" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::StringArray</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a4a3b5a48118abfdcb5f55e4433e2dab5" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.StringArray.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="12" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a45ed1b8d3397f7cb0e96a035d16bb79c" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.StringArray.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="13" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1ae18b6206ca8c171c5fc1af8437b1d23e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.StringArray.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a49ee08022a18f85a52b23e5b0aa80874" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.StringArray.StringArray</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>StringArray</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="15" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="15" bodyend="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1ad3b11329327f27b0100f5b5070645b51" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.StringArray.getCPtr</definition>
        <argsstring>(StringArray obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type>StringArray</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="20" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1add287233c8d381ebf21b126dee4d9260" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.StringArray.add</definition>
        <argsstring>(String x)</argsstring>
        <name>add</name>
        <param>
          <type>String</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="66" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1ac5a4798fe5d4bb769947d66e70129915" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.StringArray.capacity</definition>
        <argsstring>()</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="50" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1af99c02fd4bf928dde32fdd42daf5ce45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.StringArray.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="62" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1aa5b187ff1041da08ecfcfb9240f0b9fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.StringArray.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a23957101000ea58d79e2f15111cb53bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.StringArray.get</definition>
        <argsstring>(int i)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a2bb772a0ade96612ec714c8a545e85ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.StringArray.isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="58" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1afc12436e00a3127a52fd04d6b0620397" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.StringArray.reserve</definition>
        <argsstring>(long n)</argsstring>
        <name>reserve</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="54" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a0894670a5386ad4dd490c049b9a328e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.StringArray.set</definition>
        <argsstring>(int i, String val)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>String</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a789398740a428e13897844e7e7cb3cbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.StringArray.size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a819db4507f7babacb417dc53dfebe47f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.StringArray.StringArray</definition>
        <argsstring>()</argsstring>
        <name>StringArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a53b026b1682f18cb4748362e56c95ceb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.StringArray.StringArray</definition>
        <argsstring>(long n)</argsstring>
        <name>StringArray</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="42" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="42" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" line="11" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java" bodystart="11" bodyend="78"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1add287233c8d381ebf21b126dee4d9260" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1ac5a4798fe5d4bb769947d66e70129915" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1af99c02fd4bf928dde32fdd42daf5ce45" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1aa5b187ff1041da08ecfcfb9240f0b9fe" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1ae18b6206ca8c171c5fc1af8437b1d23e" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a23957101000ea58d79e2f15111cb53bf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1ad3b11329327f27b0100f5b5070645b51" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a2bb772a0ade96612ec714c8a545e85ae" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1afc12436e00a3127a52fd04d6b0620397" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a0894670a5386ad4dd490c049b9a328e5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a789398740a428e13897844e7e7cb3cbf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a49ee08022a18f85a52b23e5b0aa80874" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>StringArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a819db4507f7babacb417dc53dfebe47f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>StringArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a53b026b1682f18cb4748362e56c95ceb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>StringArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a45ed1b8d3397f7cb0e96a035d16bb79c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_string_array_1a4a3b5a48118abfdcb5f55e4433e2dab5" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::StringArray</scope><name>swigCPtr</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="struct_s_w_i_g___java_exceptions__t" kind="struct" prot="public">
    <compoundname>SWIG_JavaExceptions_t</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_s_w_i_g___java_exceptions__t_1a04044dfc89f07ed39fe7bbb23f120d5a" prot="public" static="no" mutable="no">
        <type>SWIG_JavaExceptionCodes</type>
        <definition>SWIG_JavaExceptionCodes SWIG_JavaExceptions_t::code</definition>
        <argsstring/>
        <name>code</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="226" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_w_i_g___java_exceptions__t_1a38dd5a9090f6d6c09f43d85536bc3154" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SWIG_JavaExceptions_t::java_exception</definition>
        <argsstring/>
        <name>java_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="227" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="225" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="225" bodyend="228"/>
    <listofallmembers>
      <member refid="struct_s_w_i_g___java_exceptions__t_1a04044dfc89f07ed39fe7bbb23f120d5a" prot="public" virt="non-virtual"><scope>SWIG_JavaExceptions_t</scope><name>code</name></member>
      <member refid="struct_s_w_i_g___java_exceptions__t_1a38dd5a9090f6d6c09f43d85536bc3154" prot="public" virt="non-virtual"><scope>SWIG_JavaExceptions_t</scope><name>java_exception</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="class_swig_director___listener" kind="class" prot="public">
    <compoundname>SwigDirector_Listener</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Listener</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Director</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_swig_director___listener_1ae71adc44f1e354feaf0aa190ac2a7c1a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SwigDirector_Listener::swig_override[5]</definition>
        <argsstring>[5]</argsstring>
        <name>swig_override</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="30" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_swig_director___listener_1adcb5ae0934ed2197ff9af5458a1f88b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SwigDirector_Listener::onConnect</definition>
        <argsstring>(Leap::Controller const &amp;arg0)</argsstring>
        <name>onConnect</name>
        <param>
          <type>Leap::Controller const &amp;</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="21" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="604" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="class_swig_director___listener_1a70a5ab9389a1eb9d8424174807dd954a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SwigDirector_Listener::onDisconnect</definition>
        <argsstring>(Leap::Controller const &amp;arg0)</argsstring>
        <name>onDisconnect</name>
        <param>
          <type>Leap::Controller const &amp;</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="22" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="625" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="class_swig_director___listener_1a51716b92668ecaa40247b5f8170bf51c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SwigDirector_Listener::onExit</definition>
        <argsstring>(Leap::Controller const &amp;arg0)</argsstring>
        <name>onExit</name>
        <param>
          <type>Leap::Controller const &amp;</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="23" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="646" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="class_swig_director___listener_1acbeda107b351e0ed543949edf6b2fc21" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SwigDirector_Listener::onFrame</definition>
        <argsstring>(Leap::Controller const &amp;arg0)</argsstring>
        <name>onFrame</name>
        <param>
          <type>Leap::Controller const &amp;</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="667" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="class_swig_director___listener_1ae97ab79e4568fefb8d26ccb93bc4e38b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SwigDirector_Listener::onInit</definition>
        <argsstring>(Leap::Controller const &amp;arg0)</argsstring>
        <name>onInit</name>
        <param>
          <type>Leap::Controller const &amp;</type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="583" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="class_swig_director___listener_1a3f5f6e7f476796279c7a9603ed49b953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SwigDirector_Listener::swig_connect_director</definition>
        <argsstring>(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global)</argsstring>
        <name>swig_connect_director</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jself</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>swig_mem_own</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>weak_global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="17" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="688" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="class_swig_director___listener_1a1bedcc0c1a5629ffa274deaa1fed0f22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SwigDirector_Listener::swig_overrides</definition>
        <argsstring>(int n)</argsstring>
        <name>swig_overrides</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="26" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_swig_director___listener_1a277b371dd93204719453283df592d09d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type/>
        <definition>SwigDirector_Listener::SwigDirector_Listener</definition>
        <argsstring>(JNIEnv *jenv)</argsstring>
        <name>SwigDirector_Listener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="18" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="575" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="class_swig_director___listener_1a44f98ccfb1dd1f1457cd88b9b8c7f09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type/>
        <definition>SwigDirector_Listener::~SwigDirector_Listener</definition>
        <argsstring>()</argsstring>
        <name>~SwigDirector_Listener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="19" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="578" bodyend="580"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" line="14" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h" bodystart="14" bodyend="31"/>
    <listofallmembers>
      <member refid="class_swig_director___listener_1adcb5ae0934ed2197ff9af5458a1f88b7" prot="public" virt="virtual"><scope>SwigDirector_Listener</scope><name>onConnect</name></member>
      <member refid="class_swig_director___listener_1a70a5ab9389a1eb9d8424174807dd954a" prot="public" virt="virtual"><scope>SwigDirector_Listener</scope><name>onDisconnect</name></member>
      <member refid="class_swig_director___listener_1a51716b92668ecaa40247b5f8170bf51c" prot="public" virt="virtual"><scope>SwigDirector_Listener</scope><name>onExit</name></member>
      <member refid="class_swig_director___listener_1acbeda107b351e0ed543949edf6b2fc21" prot="public" virt="virtual"><scope>SwigDirector_Listener</scope><name>onFrame</name></member>
      <member refid="class_swig_director___listener_1ae97ab79e4568fefb8d26ccb93bc4e38b" prot="public" virt="virtual"><scope>SwigDirector_Listener</scope><name>onInit</name></member>
      <member refid="class_swig_director___listener_1a3f5f6e7f476796279c7a9603ed49b953" prot="public" virt="non-virtual"><scope>SwigDirector_Listener</scope><name>swig_connect_director</name></member>
      <member refid="class_swig_director___listener_1ae71adc44f1e354feaf0aa190ac2a7c1a" prot="protected" virt="non-virtual"><scope>SwigDirector_Listener</scope><name>swig_override</name></member>
      <member refid="class_swig_director___listener_1a1bedcc0c1a5629ffa274deaa1fed0f22" prot="public" virt="non-virtual"><scope>SwigDirector_Listener</scope><name>swig_overrides</name></member>
      <member refid="class_swig_director___listener_1a277b371dd93204719453283df592d09d" prot="public" virt="non-virtual"><scope>SwigDirector_Listener</scope><name>SwigDirector_Listener</name></member>
      <member refid="class_swig_director___listener_1a44f98ccfb1dd1f1457cd88b9b8c7f09b" prot="public" virt="virtual"><scope>SwigDirector_Listener</scope><name>~SwigDirector_Listener</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1_1_swig_next" kind="class" prot="private">
    <compoundname>com::leapmotion::leap::Gesture::State::SwigNext</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1_1_swig_next_1af6013775a89950ca78751d459c960197" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int com.leapmotion.leap.Gesture.State.SwigNext.next</definition>
        <argsstring/>
        <name>next</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="368" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="368" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="367" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="367" bodyend="369"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1_1_swig_next_1af6013775a89950ca78751d459c960197" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::State::SwigNext</scope><name>next</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1_1_swig_next" kind="class" prot="private">
    <compoundname>com::leapmotion::leap::Config::ValueType::SwigNext</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1_1_swig_next_1acf6d033cd3f7887b0d4bf8476f40cbf0" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int com.leapmotion.leap.Config.ValueType.SwigNext.next</definition>
        <argsstring/>
        <name>next</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="226" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="225" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="225" bodyend="227"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1_1_swig_next_1acf6d033cd3f7887b0d4bf8476f40cbf0" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType::SwigNext</scope><name>next</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1_1_swig_next" kind="class" prot="private">
    <compoundname>com::leapmotion::leap::Gesture::Type::SwigNext</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1_1_swig_next_1a3595da6617279f8820a4c13308fa4ca5" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int com.leapmotion.leap.Gesture.Type.SwigNext.next</definition>
        <argsstring/>
        <name>next</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="311" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="311" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="310" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="310" bodyend="312"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1_1_swig_next_1a3595da6617279f8820a4c13308fa4ca5" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type::SwigNext</scope><name>next</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::SwipeGesture</compoundname>
    <basecompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" prot="public" virt="non-virtual">com.leapmotion.leap.Gesture</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1ad34a495de12f7c206d8ffe5d5e35c3e3" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.SwipeGesture.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a01938009f79acc501a2cdc40dec1594a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.SwipeGesture.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="36" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1ac836a3b01f8db7b19403624bb8dcd075" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.SwipeGesture.SwipeGesture</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>SwipeGesture</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="27" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="27" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a227eced6907b8d6a7e0d7a483dea0bcb" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.SwipeGesture.getCPtr</definition>
        <argsstring>(SwipeGesture obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="32" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="32" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a2e96cddc54b06e89cc32ccc9cfa98079" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.SwipeGesture.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="40" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="40" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1aa81c3633a8d97df4ab22beb9a6f0d8bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.SwipeGesture.direction</definition>
        <argsstring>()</argsstring>
        <name>direction</name>
        <briefdescription>
<para>The unit direction vector parallel to the swipe motion. </para>        </briefdescription>
        <detaileddescription>
<para>You can compare the components of the vector to classify the swipe as appropriate for your application. For example, if you are using swipes for two dimensional scrolling, you can compare the x and y values to determine if the swipe is primarily horizontal or vertical.</para><para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> The unit direction vector representing the swipe motion. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="110" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a91f5ed0c9abfec5d6b7508527217a3c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
        <definition>Pointable com.leapmotion.leap.SwipeGesture.pointable</definition>
        <argsstring>()</argsstring>
        <name>pointable</name>
        <briefdescription>
<para>The finger performing the swipe gesture. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object representing the swiping finger. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="131" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1aba4940408797a84d046d90e34741b1e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.SwipeGesture.position</definition>
        <argsstring>()</argsstring>
        <name>position</name>
        <briefdescription>
<para>The current position of the swipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> The current swipe position within the Leap frame of reference, in mm. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="94" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a3f34543ea035064b932946a611b49d3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.SwipeGesture.speed</definition>
        <argsstring>()</argsstring>
        <name>speed</name>
        <briefdescription>
<para>The swipe speed in mm/second. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float The speed of the finger performing the swipe gesture in millimeters per second. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="121" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a0528c070f61a70188f235c4f8dcd97f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.SwipeGesture.startPosition</definition>
        <argsstring>()</argsstring>
        <name>startPosition</name>
        <briefdescription>
<para>The position where the swipe began. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> The starting position within the Leap frame of reference, in mm. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="83" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a790d0fafe407e35e24a4c6e51c69131d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.SwipeGesture.SwipeGesture</definition>
        <argsstring>()</argsstring>
        <name>SwipeGesture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="61" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a1623cdde2a9cf1c0638dbc755e8ab256" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.SwipeGesture.SwipeGesture</definition>
        <argsstring>(Gesture rhs)</argsstring>
        <name>SwipeGesture</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref> object from an instance of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance to specialize. This <ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound">Gesture</ref> instance must be a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="72" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="72" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1acde13cfa5590a51e78c798a93504adb3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Gesture.Type</type>
        <definition>static Gesture.Type com.leapmotion.leap.SwipeGesture.classType</definition>
        <argsstring>()</argsstring>
        <name>classType</name>
        <briefdescription>
<para>The swipe gesture type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Type The type value designating a swipe gesture. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="57" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="57" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref> class represents a swiping motion of a finger or tool. </para>    </briefdescription>
    <detaileddescription>
<para><image type="html" name="Leap_Gesture_Swipe.png"/>
</para><para><bold>Important:</bold> To use swipe gestures in your application, you must enable recognition of the swipe gesture. You can enable recognition with: <verbatim>Controller::enableGesture(Gesture::TYPE_SWIPE);
</verbatim></para><para>Swipe gestures are continuous. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="108">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
      </node>
      <node id="107">
        <label>com.leapmotion.leap.SwipeGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture"/>
        <childnode refid="108" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="110">
        <label>com.leapmotion.leap.Gesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_gesture"/>
      </node>
      <node id="109">
        <label>com.leapmotion.leap.SwipeGesture</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java" bodystart="24" bodyend="135"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1acde13cfa5590a51e78c798a93504adb3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>classType</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a2e96cddc54b06e89cc32ccc9cfa98079" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1aa81c3633a8d97df4ab22beb9a6f0d8bc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a762ca0339845c9fd8f56eb9c50a9d939" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>duration</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ade91b8b357a0b65559f0b6e92259611a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>durationSeconds</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a9d1e2879db9699c3376ecad4ac6b5326" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a01938009f79acc501a2cdc40dec1594a" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1acd58fdacb406067210d346766317c73d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a2c538af15c0678e7913cf4c1fa9b15" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a16d3c85153f2c90a77ba8c5c74c055b8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>Gesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a227eced6907b8d6a7e0d7a483dea0bcb" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1aacff5dba75bff58ece36726127ffd4d8" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Gesture."><scope>com::leapmotion::leap::SwipeGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::SwipeGesture</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a774b6b0a846bc908140a9695446ec398" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>hands</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ad3e6aa7ddce5cf3079bcc6259f7d7412" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a5bf5a6582c95367b8a46ac0a220da5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a1fbc97e34f25c3e1bb2f6ffecc57c563" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a91f5ed0c9abfec5d6b7508527217a3c1" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a43e5763a3e347a066aabd5cac4e0f899" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>pointables</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1aba4940408797a84d046d90e34741b1e3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>position</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a3f34543ea035064b932946a611b49d3b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>speed</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a0528c070f61a70188f235c4f8dcd97f4" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>startPosition</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a13f39cae216c5f285c526936a6b0af67" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>state</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1ad34a495de12f7c206d8ffe5d5e35c3e3" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1ac836a3b01f8db7b19403624bb8dcd075" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>SwipeGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a790d0fafe407e35e24a4c6e51c69131d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>SwipeGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a1623cdde2a9cf1c0638dbc755e8ab256" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>SwipeGesture</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a6e5c086a26fa919648e307887cdefcf2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a7420937c98ea7646f083e5c0a469fe3d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::SwipeGesture</scope><name>type</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_tool" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Tool</compoundname>
    <basecompoundref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" prot="public" virt="non-virtual">com.leapmotion.leap.Pointable</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_tool_1a5db1538bf753569d6d3c79665d0f3366" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Tool.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="29" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_1ac77f424dfa61f620ab659478ac3da7a7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Tool.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="40" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_1a086d8059037c2dbc240f17c5f45a39dc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Tool.Tool</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Tool</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="31" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="31" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_1aff9042989dd90c119dd389f0ef7fea61" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Tool.getCPtr</definition>
        <argsstring>(Tool obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="36" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="36" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_1a089e23a74046d773fd5f089dc0e19564" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Tool.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="44" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="44" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_1a2ea8c07bf98de7b35b20ec7ffdec14ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Tool.Tool</definition>
        <argsstring>()</argsstring>
        <name>Tool</name>
        <briefdescription>
<para>Constructs a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>An uninitialized tool is considered invalid. Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> or a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="62" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_1a21d35de2bc21f5fadff788052369bc11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Tool.Tool</definition>
        <argsstring>(Pointable arg0)</argsstring>
        <name>Tool</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref></type>
          <declname>arg0</declname>
        </param>
        <briefdescription>
<para>If the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> object represents a tool, creates a copy of it as a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object; otherwise, creates an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="71" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_1a11ad726564106e0db85c2bfafc600139" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Tool.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>A string containing a brief, human readable description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A description of the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object as a string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="95" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="95" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_1a34fc53c5f731139874bf6ca22033d379" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref></type>
        <definition>static Tool com.leapmotion.leap.Tool.invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
<para>Returns an invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>You can use the instance returned by this function in comparisons testing whether a given <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> instance is valid or invalid. (You can also use the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" kindref="member">Tool::isValid()</ref> function.)</para><para><simplesect kind="return"><para>The invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="85" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="85" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> class represents a tracked tool. </para>    </briefdescription>
    <detaileddescription>
<para>Tools are <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound">Pointable</ref> objects that the Leap has classified as a tool. Tools are longer, thinner, and straighter than a typical finger. Get valid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects from a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound">Frame</ref> or a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound">Hand</ref> object.</para><para><image type="html" name="Leap_Tool.png"/>
</para><para>Note that <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects can be invalid, which means that they do not contain valid tracking data and do not correspond to a physical tool. Invalid <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects can be the result of asking for a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object using an ID from an earlier frame when no <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects with that ID exist in the current frame. A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object created from the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> constructor is also invalid. Test for validity with the <ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" kindref="member">Tool::isValid()</ref> function. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="112">
        <label>com.leapmotion.leap.Pointable</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_pointable"/>
      </node>
      <node id="111">
        <label>com.leapmotion.leap.Tool</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_tool"/>
        <childnode refid="112" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="114">
        <label>com.leapmotion.leap.Pointable</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_pointable"/>
      </node>
      <node id="113">
        <label>com.leapmotion.leap.Tool</label>
        <link refid="classcom_1_1leapmotion_1_1leap_1_1_tool"/>
        <childnode refid="114" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java" bodystart="28" bodyend="99"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a089e23a74046d773fd5f089dc0e19564" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1affbc3d564e74967addf273eb7006e7ae" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>direction</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a39b00dc8ec7e54c5e07e591b38db29cf" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1ac77f424dfa61f620ab659478ac3da7a7" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a0fc9745b4aa3f0284880647b4b482612" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>frame</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1aff9042989dd90c119dd389f0ef7fea61" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a7f3051e6807456cb21e23d97543b5181" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Pointable."><scope>com::leapmotion::leap::Tool</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::Tool</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a10e06f1db3177a259a5e0966fb361e7a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>hand</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a46e7a47f1aa97fb073b61bc6eb1b2031" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>id</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a34fc53c5f731139874bf6ca22033d379" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>invalid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af8a0d3d9dc96d7d86545e604f41cb6af" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>isFinger</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a1a939138ab33f2d76e0aebdbdc28861e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>isTool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1aa8f442aa58b8694384327f29111a0c41" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>length</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ad5e0cc39f620718a50710fa6c3ab2812" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>Pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af2d1ea38d8b44a706cc86c32769b7cb5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>Pointable</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a5db1538bf753569d6d3c79665d0f3366" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a34729c90d3c4b38a6f5994ae1ad14ee2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>tipPosition</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af7389a76398c7928d339c73f5af02d9e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>tipVelocity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a086d8059037c2dbc240f17c5f45a39dc" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>Tool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a2ea8c07bf98de7b35b20ec7ffdec14ae" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>Tool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a21d35de2bc21f5fadff788052369bc11" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>Tool</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a11ad726564106e0db85c2bfafc600139" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1abba55cfb2de52af88b5a1faec2b1923b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Tool</scope><name>width</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::ToolList</compoundname>
    <basecompoundref prot="public" virt="non-virtual">com.leapmotion.leap.Interface</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Iterable&lt; Tool &gt;</basecompoundref>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator" prot="public">com::leapmotion::leap::ToolList::ToolListIterator</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a29ed194bfe4fc4f2cb8a6131ff6364b2" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.ToolList.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="18" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a1717d86df372a955fd9e7ecd9e0ac593" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.ToolList.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="29" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ac304a650d52d3a87cb92d83dcdc9c74c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.ToolList.ToolList</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>ToolList</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="20" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a688468a49afd6cf4b346c38a02e6de80" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.ToolList.getCPtr</definition>
        <argsstring>(ToolList obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="25" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="25" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a792135109d044e6d0db59908e94f6bd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
        <definition>ToolList com.leapmotion.leap.ToolList.append</definition>
        <argsstring>(ToolList other)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the members of the specifed <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref> to this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref> object containing <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects to append to the end of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="99" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a5544908923813bd100ec86dd1e1abd75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int com.leapmotion.leap.ToolList.count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
<para>Returns the number of tools in this list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of tools in this list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1acb91d2eb5ada8ed83905c5789877b232" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.ToolList.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="33" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ab5e9ab7903d6e7cc4bae867f1ce70f05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.ToolList.empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Reports whether the list is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True, if the list has no members. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="79" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a2b5673dda3b9ed10c74b3e2fe82e99b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref></type>
        <definition>Tool com.leapmotion.leap.ToolList.get</definition>
        <argsstring>(int index)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Access a list member by its position in the list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero-based list position index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> object at the specified index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="89" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a87ab23aa85228f9d0985695242c11868" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>java.util.Iterator&lt; <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> &gt;</type>
        <definition>java.util.Iterator&lt;Tool&gt; com.leapmotion.leap.ToolList.iterator</definition>
        <argsstring>()</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="55" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ad86416ff619a0cd5f771b9dfed8041f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.ToolList.ToolList</definition>
        <argsstring>()</argsstring>
        <name>ToolList</name>
        <briefdescription>
<para>Constructs an empty list of tools. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="61" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="61" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref> class represents a list of <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>Get a <ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound">ToolList</ref> object by calling <ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a1d4d3ca18d34b4df7422f18a735527ad" kindref="member">Frame::tools()</ref>. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="17" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="17" bodyend="103"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a792135109d044e6d0db59908e94f6bd2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>append</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a5544908923813bd100ec86dd1e1abd75" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>count</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1acb91d2eb5ada8ed83905c5789877b232" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ab5e9ab7903d6e7cc4bae867f1ce70f05" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>empty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a1717d86df372a955fd9e7ecd9e0ac593" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a2b5673dda3b9ed10c74b3e2fe82e99b4" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a688468a49afd6cf4b346c38a02e6de80" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a7f420935413dfa0b73d522d173b89521" prot="protected" virt="non-virtual" ambiguityscope="com::leapmotion::leap::Interface."><scope>com::leapmotion::leap::ToolList</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1a2dc14921e56d16434d81b56f6ca73e91" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>Interface</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a87ab23aa85228f9d0985695242c11868" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>iterator</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_interface_1aa0a823d6318274e955270e17360d3505" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a29ed194bfe4fc4f2cb8a6131ff6364b2" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ac304a650d52d3a87cb92d83dcdc9c74c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>ToolList</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ad86416ff619a0cd5f771b9dfed8041f4" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList</scope><name>ToolList</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::ToolList::ToolListIterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">java::util::Iterator&lt; Tool &gt;</basecompoundref>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator_1a41d20cea8e690632ceca6ddc85c139ab" prot="package" static="no" mutable="no">
        <type>int</type>
        <definition>int com.leapmotion.leap.ToolList.ToolListIterator.index</definition>
        <argsstring/>
        <name>index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="45" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator_1a765695cf5ad73533315fe7e80fda4c97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.ToolList.ToolListIterator.hasNext</definition>
        <argsstring>()</argsstring>
        <name>hasNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator_1a342459e2e116ba6a8f83a294bf2d06ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound">Tool</ref></type>
        <definition>Tool com.leapmotion.leap.ToolList.ToolListIterator.next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="49" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator_1aadf10bb4e985e92fcac09c5472e2d914" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.ToolList.ToolListIterator.remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="52" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="52" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" line="44" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java" bodystart="44" bodyend="54"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator_1a765695cf5ad73533315fe7e80fda4c97" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList::ToolListIterator</scope><name>hasNext</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator_1a41d20cea8e690632ceca6ddc85c139ab" prot="package" virt="non-virtual"><scope>com::leapmotion::leap::ToolList::ToolListIterator</scope><name>index</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator_1a342459e2e116ba6a8f83a294bf2d06ac" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList::ToolListIterator</scope><name>next</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator_1aadf10bb4e985e92fcac09c5472e2d914" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::ToolList::ToolListIterator</scope><name>remove</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kind="enum" prot="public">
    <compoundname>com::leapmotion::leap::Gesture::Type</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1_1_swig_next" prot="private">com::leapmotion::leap::Gesture::Type::SwigNext</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a5ecd6ab99036c861b6bee53f2b0d1ed3" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Type.TYPE_CIRCLE</definition>
        <argsstring/>
        <name>TYPE_CIRCLE</name>
        <initializer>=(4)</initializer>
        <briefdescription>
<para>A circular movement by a finger. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="268" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a8e7a8c0f6324d09dbf9775719e45404c" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Type.TYPE_INVALID</definition>
        <argsstring/>
        <name>TYPE_INVALID</name>
        <initializer>=(-1)</initializer>
        <briefdescription>
<para>An invalid type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="262" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1aabf6a6df531842edc11fde7bf2185bea" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Type.TYPE_KEY_TAP</definition>
        <argsstring/>
        <name>TYPE_KEY_TAP</name>
        <initializer>=(6)</initializer>
        <briefdescription>
<para>A downward tapping movement by a finger. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="274" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a9d0f3de6028dd726d787f0ffcb11ebd5" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Type.TYPE_SCREEN_TAP</definition>
        <argsstring/>
        <name>TYPE_SCREEN_TAP</name>
        <initializer>=(5)</initializer>
        <briefdescription>
<para>A forward tapping movement by a finger. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="271" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a66de9af854e4538a591b3e88733e3590" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Type.TYPE_SWIPE</definition>
        <argsstring/>
        <name>TYPE_SWIPE</name>
        <initializer>=(1)</initializer>
        <briefdescription>
<para>A straight line movement by the hand with fingers extended. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="265" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="265" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a65e38174ab7ba9a3937b4a7b41f4a7fc" prot="private" static="no" mutable="no">
        <type>final int</type>
        <definition>final int com.leapmotion.leap.Gesture.Type.swigValue</definition>
        <argsstring/>
        <name>swigValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="308" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="308" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a936d15df200bb91fb3873c205a235328" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>final int</type>
        <definition>final int com.leapmotion.leap.Gesture.Type.swigValue</definition>
        <argsstring>()</argsstring>
        <name>swigValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="277" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="277" bodyend="279"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a2971e954ff868642b9557ab8618b9bb5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound">Type</ref></type>
        <definition>static Type com.leapmotion.leap.Gesture.Type.swigToEnum</definition>
        <argsstring>(int swigValue)</argsstring>
        <name>swigToEnum</name>
        <param>
          <type>int</type>
          <declname>swigValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="281" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="281" bodyend="289"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1abef5739cd15d3c1d03f66b3e1119edfa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Type.Type</definition>
        <argsstring>()</argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="292" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1adda035a0facdb2abe561348142283a35" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Type.Type</definition>
        <argsstring>(int swigValue)</argsstring>
        <name>Type</name>
        <param>
          <type>int</type>
          <declname>swigValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="297" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a4573dd49f9a822aed0ae2ed806e21e6b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Gesture.Type.Type</definition>
        <argsstring>(Type swigEnum)</argsstring>
        <name>Type</name>
        <param>
          <type><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound">Type</ref></type>
          <declname>swigEnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="303" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="303" bodyend="306"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The supported types of gestures. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" line="259" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java" bodystart="259" bodyend="313"/>
    <listofallmembers>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a2971e954ff868642b9557ab8618b9bb5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>swigToEnum</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a65e38174ab7ba9a3937b4a7b41f4a7fc" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>swigValue</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a936d15df200bb91fb3873c205a235328" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>swigValue</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1abef5739cd15d3c1d03f66b3e1119edfa" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>Type</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1adda035a0facdb2abe561348142283a35" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>Type</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a4573dd49f9a822aed0ae2ed806e21e6b" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>Type</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a5ecd6ab99036c861b6bee53f2b0d1ed3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>TYPE_CIRCLE</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a8e7a8c0f6324d09dbf9775719e45404c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>TYPE_INVALID</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1aabf6a6df531842edc11fde7bf2185bea" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>TYPE_KEY_TAP</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a9d0f3de6028dd726d787f0ffcb11ebd5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>TYPE_SCREEN_TAP</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1a66de9af854e4538a591b3e88733e3590" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Gesture::Type</scope><name>TYPE_SWIPE</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::UInt32Array</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1abac4fa968942f80a865578090b8cf0e9" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.UInt32Array.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="12" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a96a798a1a8255091ef50c5416c7c55e0" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.UInt32Array.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="13" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1abfeb311e5e8e601cf46b40e2c287dbf6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.UInt32Array.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="24" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a984afe5b3c42f68ee65f38209d98e31c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.UInt32Array.UInt32Array</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>UInt32Array</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="15" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="15" bodyend="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a7976b646b6ab87034c412e2bae09ea45" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.UInt32Array.getCPtr</definition>
        <argsstring>(UInt32Array obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type>UInt32Array</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="20" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="20" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a565cd5565dcb1d178c5c45e037d91829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.UInt32Array.add</definition>
        <argsstring>(long x)</argsstring>
        <name>add</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="66" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a32848f97b203b71f09c10d28a74479bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.UInt32Array.capacity</definition>
        <argsstring>()</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="50" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a99eafb22ed0a50ad0aade25e05d5281e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.UInt32Array.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="62" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1ad7698573328ed5ad527e98ec6a54d9ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.UInt32Array.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1abd8b9b92b8d4c3b634e175d5b95e405c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.UInt32Array.get</definition>
        <argsstring>(int i)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="70" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1af823fee4b62f3a53a4bb05d1f3bc4c66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.UInt32Array.isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="58" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a995ebc77cca3e9b372f0568bfcecc287" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.UInt32Array.reserve</definition>
        <argsstring>(long n)</argsstring>
        <name>reserve</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="54" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1adca889f9f600f2dd3e42f8c0ca811955" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.UInt32Array.set</definition>
        <argsstring>(int i, long val)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>long</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="74" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a8e908c15e9122b44394c68004c53ff2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long com.leapmotion.leap.UInt32Array.size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="46" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1afe18655c8cbb6da28b167e21084ef988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.UInt32Array.UInt32Array</definition>
        <argsstring>()</argsstring>
        <name>UInt32Array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="38" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a3b4a0af390812a482eea255822f4a2de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.UInt32Array.UInt32Array</definition>
        <argsstring>(long n)</argsstring>
        <name>UInt32Array</name>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="42" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="42" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" line="11" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java" bodystart="11" bodyend="78"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a565cd5565dcb1d178c5c45e037d91829" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>add</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a32848f97b203b71f09c10d28a74479bc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>capacity</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a99eafb22ed0a50ad0aade25e05d5281e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>clear</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1ad7698573328ed5ad527e98ec6a54d9ad" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1abfeb311e5e8e601cf46b40e2c287dbf6" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1abd8b9b92b8d4c3b634e175d5b95e405c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a7976b646b6ab87034c412e2bae09ea45" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1af823fee4b62f3a53a4bb05d1f3bc4c66" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>isEmpty</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a995ebc77cca3e9b372f0568bfcecc287" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>reserve</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1adca889f9f600f2dd3e42f8c0ca811955" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>set</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a8e908c15e9122b44394c68004c53ff2a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>size</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a96a798a1a8255091ef50c5416c7c55e0" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1abac4fa968942f80a865578090b8cf0e9" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a984afe5b3c42f68ee65f38209d98e31c" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>UInt32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1afe18655c8cbb6da28b167e21084ef988" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>UInt32Array</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array_1a3b4a0af390812a482eea255822f4a2de" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::UInt32Array</scope><name>UInt32Array</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kind="enum" prot="public">
    <compoundname>com::leapmotion::leap::Config::ValueType</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1_1_swig_next" prot="private">com::leapmotion::leap::Config::ValueType::SwigNext</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1ad25276245caac6fd26fc36f564fe01ab" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.TYPE_BOOLEAN</definition>
        <argsstring/>
        <name>TYPE_BOOLEAN</name>
        <briefdescription>
<para>A boolean value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="168" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aca9028791c54a3c53ec5e1f239e07e7f" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.TYPE_DOUBLE</definition>
        <argsstring/>
        <name>TYPE_DOUBLE</name>
        <briefdescription>
<para>A double precision floating-point number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="186" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a92e2831f255ecb514a63889056307807" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.TYPE_FLOAT</definition>
        <argsstring/>
        <name>TYPE_FLOAT</name>
        <briefdescription>
<para>A floating-point number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="183" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a01c0c509e33fb6416331682749509afa" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.TYPE_INT32</definition>
        <argsstring/>
        <name>TYPE_INT32</name>
        <briefdescription>
<para>A 32-bit integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="171" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aabbf9f61a78234a34bd6dc8e5dd8d6ce" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.TYPE_INT64</definition>
        <argsstring/>
        <name>TYPE_INT64</name>
        <briefdescription>
<para>A 64-bit integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="174" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1af17f07c3e8f4a89ded305620823cf6a5" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.TYPE_STRING</definition>
        <argsstring/>
        <name>TYPE_STRING</name>
        <briefdescription>
<para>A string of characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="189" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aaab47eace1ae8d939f49e7db4c57ccbc" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.TYPE_UINT32</definition>
        <argsstring/>
        <name>TYPE_UINT32</name>
        <briefdescription>
<para>A 32-bit unsigned integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="177" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a38ea04f47bc28f0f745721fa39dfe39e" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.TYPE_UINT64</definition>
        <argsstring/>
        <name>TYPE_UINT64</name>
        <briefdescription>
<para>A 64-bit unsigned integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="180" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aad461bd6ac1330526334ec742fe60c16" prot="public" static="no" mutable="no">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.TYPE_UNKNOWN</definition>
        <argsstring/>
        <name>TYPE_UNKNOWN</name>
        <briefdescription>
<para>The data type is unknown. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="165" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1ac00e9428381aa2ca68317df82325c5e2" prot="private" static="no" mutable="no">
        <type>final int</type>
        <definition>final int com.leapmotion.leap.Config.ValueType.swigValue</definition>
        <argsstring/>
        <name>swigValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="223" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a59e07f4c00bb8084693018ab672a79ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>final int</type>
        <definition>final int com.leapmotion.leap.Config.ValueType.swigValue</definition>
        <argsstring>()</argsstring>
        <name>swigValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="192" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="192" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a47b48e34050792e182b782822b4f33f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound">ValueType</ref></type>
        <definition>static ValueType com.leapmotion.leap.Config.ValueType.swigToEnum</definition>
        <argsstring>(int swigValue)</argsstring>
        <name>swigToEnum</name>
        <param>
          <type>int</type>
          <declname>swigValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="196" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="196" bodyend="204"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a40b2875f17ecbda1e4c44cff0b76ab0d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.ValueType</definition>
        <argsstring>()</argsstring>
        <name>ValueType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="207" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1ac7d52f0f3774e92dbaf67feb2dbb1a3c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.ValueType</definition>
        <argsstring>(int swigValue)</argsstring>
        <name>ValueType</name>
        <param>
          <type>int</type>
          <declname>swigValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="212" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aaac4107d3c1d8ba6b32345baf26d3c2e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Config.ValueType.ValueType</definition>
        <argsstring>(ValueType swigEnum)</argsstring>
        <name>ValueType</name>
        <param>
          <type><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound">ValueType</ref></type>
          <declname>swigEnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="218" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="218" bodyend="221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Enumerates the possible data types for configuration values. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a045db7e824cfbb29b3ac81abcbda7159" kindref="member">Config::type()</ref> function returns an item from the <ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound">ValueType</ref> enumeration. </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" line="162" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java" bodystart="162" bodyend="228"/>
    <listofallmembers>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a47b48e34050792e182b782822b4f33f3" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>swigToEnum</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1ac00e9428381aa2ca68317df82325c5e2" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>swigValue</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a59e07f4c00bb8084693018ab672a79ad" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>swigValue</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1ad25276245caac6fd26fc36f564fe01ab" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>TYPE_BOOLEAN</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aca9028791c54a3c53ec5e1f239e07e7f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>TYPE_DOUBLE</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a92e2831f255ecb514a63889056307807" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>TYPE_FLOAT</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a01c0c509e33fb6416331682749509afa" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>TYPE_INT32</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aabbf9f61a78234a34bd6dc8e5dd8d6ce" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>TYPE_INT64</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1af17f07c3e8f4a89ded305620823cf6a5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>TYPE_STRING</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aaab47eace1ae8d939f49e7db4c57ccbc" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>TYPE_UINT32</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a38ea04f47bc28f0f745721fa39dfe39e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>TYPE_UINT64</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aad461bd6ac1330526334ec742fe60c16" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>TYPE_UNKNOWN</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1a40b2875f17ecbda1e4c44cff0b76ab0d" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>ValueType</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1ac7d52f0f3774e92dbaf67feb2dbb1a3c" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>ValueType</name></member>
      <member refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1aaac4107d3c1d8ba6b32345baf26d3c2e" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Config::ValueType</scope><name>ValueType</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="classcom_1_1leapmotion_1_1leap_1_1_vector" kind="class" prot="public">
    <compoundname>com::leapmotion::leap::Vector</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a88ce00cd01d485d8e9ae48f14ce6b0e5" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long com.leapmotion.leap.Vector.swigCPtr</definition>
        <argsstring/>
        <name>swigCPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="27" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1aef04388fb35ada0359be3aa1280c8efd" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Vector.swigCMemOwn</definition>
        <argsstring/>
        <name>swigCMemOwn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="28" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6f1620522e3a0c885c5723f9128e9de6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Vector.finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="39" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7eb5529e228ed195ac4a857c3d24df1b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Vector.Vector</definition>
        <argsstring>(long cPtr, boolean cMemoryOwn)</argsstring>
        <name>Vector</name>
        <param>
          <type>long</type>
          <declname>cPtr</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>cMemoryOwn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="30" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="30" bodyend="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1ad3bdaadaf095eeb265291f2a64a7556e" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long com.leapmotion.leap.Vector.getCPtr</definition>
        <argsstring>(Vector obj)</argsstring>
        <name>getCPtr</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="35" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="35" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a3e1559ccfdbcca8594600af460c86625" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.angleTo</definition>
        <argsstring>(Vector other)</argsstring>
        <name>angleTo</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The angle between this vector and the specified vector in radians. </para>        </briefdescription>
        <detaileddescription>
<para>The angle is measured in the plane formed by the two vectors. The angle returned is always the smaller of the two conjugate angles. Thus <computeroutput>A.angleTo(B) == B.angleTo(A)</computeroutput> and is always a positive value less than or equal to pi radians (180 degrees).</para><para>If either vector has zero length, then this function returns zero.</para><para><image type="html" name="Math_AngleTo.png"/>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The angle between this vector and the specified vector in radians. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="186" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1ae24246a28023db7f459c3218938b504c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Vector.cross</definition>
        <argsstring>(Vector other)</argsstring>
        <name>cross</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The cross product of this vector and the specified vector. </para>        </briefdescription>
        <detaileddescription>
<para>The cross product is a vector orthogonal to both original vectors. It has a magnitude equal to the area of a parallelogram having the two vectors as sides. The direction of the returned vector is determined by the right-hand rule. Thus <computeroutput>A.cross(B) == -B.cross(A).</computeroutput></para><para><image type="html" name="Math_Cross.png"/>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The cross product of this vector and the specified vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="279" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1aafefdf977677efce81d0f188cbf1bda6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>synchronized void</type>
        <definition>synchronized void com.leapmotion.leap.Vector.delete</definition>
        <argsstring>()</argsstring>
        <name>delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="43" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7af09174561edbe3fa639363c3f1ec70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.distanceTo</definition>
        <argsstring>(Vector other)</argsstring>
        <name>distanceTo</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The distance between the point represented by this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object and a point represented by the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The distance from this point to the specified point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="166" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1acc121bbdb861079951dfb62a35e77071" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Vector.divide</definition>
        <argsstring>(float scalar)</argsstring>
        <name>divide</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Divide vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="327" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="327" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1ad499bd83e3676b2b79f4be138454c479" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.dot</definition>
        <argsstring>(Vector other)</argsstring>
        <name>dot</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The dot product of this vector with another vector. </para>        </briefdescription>
        <detaileddescription>
<para>The dot product is the magnitude of the projection of this vector onto the specified vector.</para><para><image type="html" name="Math_Dot.png"/>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The dot product of this vector and the specified vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="261" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a65dd586b063eba3e16e7ef079b4bb819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Vector.equals</definition>
        <argsstring>(Vector other)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> equality component-wise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="339" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="339" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1aace71cfbe3547910ff60e7748bef4a1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.get</definition>
        <argsstring>(long index)</argsstring>
        <name>get</name>
        <param>
          <type>long</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Index vector components numerically. </para>        </briefdescription>
        <detaileddescription>
<para>Index 0 is x, index 1 is y, and index 2 is z. <simplesect kind="return"><para>The x, y, or z component of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref>, if the specified index value is at least 0 and at most 2; otherwise, returns zero. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="359" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="359" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.getX</definition>
        <argsstring>()</argsstring>
        <name>getX</name>
        <briefdescription>
<para>The horizontal component. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="371" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="371" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.getY</definition>
        <argsstring>()</argsstring>
        <name>getY</name>
        <briefdescription>
<para>The vertical component. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="383" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.getZ</definition>
        <argsstring>()</argsstring>
        <name>getZ</name>
        <briefdescription>
<para>The depth component. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="395" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="395" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6805632ab99d332b121883beb8ac015a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean com.leapmotion.leap.Vector.isValid</definition>
        <argsstring>()</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Returns true if all of the vector's components are finite. </para>        </briefdescription>
        <detaileddescription>
<para>If any component is NaN or infinite, then this returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="348" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="348" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6b713b087c4a1550d2892751daa6b9ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.magnitude</definition>
        <argsstring>()</argsstring>
        <name>magnitude</name>
        <briefdescription>
<para>*The magnitude, or length, of this vector. </para>        </briefdescription>
        <detaileddescription>
<para>The magnitude is the L2 norm, or Euclidean distance between the origin and the point represented by the (x, y, z) components of this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object.</para><para><simplesect kind="return"><para>The length of this vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="144" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a29b3635fc135833a7809b5a5197108a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.magnitudeSquared</definition>
        <argsstring>()</argsstring>
        <name>magnitudeSquared</name>
        <briefdescription>
<para>*The square of the magnitude, or length, of this vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The square of the length of this vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="154" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a8b0b1e6f5ab30a65aedbf6b8dc0a9ee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Vector.minus</definition>
        <argsstring>(Vector other)</argsstring>
        <name>minus</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtract vectors component-wise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="315" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6af23209bd1dd0c52209079eed289ce8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Vector.normalized</definition>
        <argsstring>()</argsstring>
        <name>normalized</name>
        <briefdescription>
<para>A normalized copy of this vector. </para>        </briefdescription>
        <detaileddescription>
<para>A normalized vector has the same direction as the original vector, but with a length of one.</para><para><simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object with a length of one, pointing in the same direction as this <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="293" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="293" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a094d02ff75dfc7a7c6365d9cd028d4bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Vector.opposite</definition>
        <argsstring>()</argsstring>
        <name>opposite</name>
        <briefdescription>
<para>A copy of this vector pointing in the opposite direction. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> object with all components negated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="303" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a3846e71ed303896bcb8920759f786128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.pitch</definition>
        <argsstring>()</argsstring>
        <name>pitch</name>
        <briefdescription>
<para>The pitch angle in radians. </para>        </briefdescription>
        <detaileddescription>
<para>Pitch is the angle between the negative z-axis and the projection of the vector onto the y-z plane. In other words, pitch represents rotation around the x-axis. If the vector points upward, the returned angle is between 0 and pi radians (180 degrees); if it points downward, the angle is between 0 and -pi radians.</para><para><image type="html" name="Math_Pitch_Angle.png"/>
</para><para><simplesect kind="return"><para>The angle of this vector above or below the horizon (x-z plane). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="204" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1ae953da8fad75f9c6875235a94af2b4ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Vector.plus</definition>
        <argsstring>(Vector other)</argsstring>
        <name>plus</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Add vectors component-wise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="309" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1aac1844b328ff263d881171c362d71837" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.roll</definition>
        <argsstring>()</argsstring>
        <name>roll</name>
        <briefdescription>
<para>The roll angle in radians. </para>        </briefdescription>
        <detaileddescription>
<para>Roll is the angle between the y-axis and the projection of the vector onto the x-y plane. In other words, roll represents rotation around the z-axis. If the vector points to the left of the y-axis, then the returned angle is between 0 and pi radians (180 degrees); if it points to the right, the angle is between 0 and -pi radians.</para><para><image type="html" name="Math_Roll_Angle.png"/>
</para><para>Use this function to get roll angle of the plane to which this vector is a normal. For example, if this vector represents the normal to the palm, then this function returns the tilt or roll of the palm plane compared to the horizontal (x-z) plane.</para><para><simplesect kind="return"><para>The angle of this vector to the right or left of the y-axis. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="245" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a8506b443988fc0d5d4ef00367a4ae2d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Vector.setX</definition>
        <argsstring>(float value)</argsstring>
        <name>setX</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>The horizontal component. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="365" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7a80bb11d8c7a666c4e7c5adc91e4aa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Vector.setY</definition>
        <argsstring>(float value)</argsstring>
        <name>setY</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>The vertical component. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="377" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1af88539afb2c8eee19154361c6b6e32ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void com.leapmotion.leap.Vector.setZ</definition>
        <argsstring>(float value)</argsstring>
        <name>setZ</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>The depth component. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="389" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="389" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1aea149a86ea12f74b32a0fe82f666181f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector com.leapmotion.leap.Vector.times</definition>
        <argsstring>(float scalar)</argsstring>
        <name>times</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Multiply vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="321" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a1abbc2db04a185837f58d7dbceb89d3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float[]</type>
        <definition>float [] com.leapmotion.leap.Vector.toFloatArray</definition>
        <argsstring>()</argsstring>
        <name>toFloatArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="53" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1aba41477e3082659ec7987429bccd845b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String com.leapmotion.leap.Vector.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>Returns a string containing this vector in a human readable format: (x, y, z). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="333" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="333" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Vector.Vector</definition>
        <argsstring>()</argsstring>
        <name>Vector</name>
        <briefdescription>
<para>Creates a new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> with all components set to zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="59" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a9b9d024ea58c8ce0ee7851662b268ee8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Vector.Vector</definition>
        <argsstring>(float _x, float _y, float _z)</argsstring>
        <name>Vector</name>
        <param>
          <type>float</type>
          <declname>_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_z</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> with the specified component values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="65" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a245e59cfd1e1b6a37b2fd93c42ce58c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>com.leapmotion.leap.Vector.Vector</definition>
        <argsstring>(Vector vector)</argsstring>
        <name>Vector</name>
        <param>
          <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Copies the specified <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="71" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a94015d7ce48ab69adebbdf7414b462e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float com.leapmotion.leap.Vector.yaw</definition>
        <argsstring>()</argsstring>
        <name>yaw</name>
        <briefdescription>
<para>The yaw angle in radians. </para>        </briefdescription>
        <detaileddescription>
<para>Yaw is the angle between the negative z-axis and the projection of the vector onto the x-z plane. In other words, yaw represents rotation around the y-axis. If the vector points to the right of the negative z-axis, then the returned angle is between 0 and pi radians (180 degrees); if it points to the left, the angle is between 0 and -pi radians.</para><para><image type="html" name="Math_Yaw_Angle.png"/>
</para><para><simplesect kind="return"><para>The angle of this vector to the right or left of the negative z-axis. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="222" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="222" bodyend="224"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a9ea8cc1db9b0e7a4fbf44c99c03f68e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.backward</definition>
        <argsstring>()</argsstring>
        <name>backward</name>
        <briefdescription>
<para>The unit vector pointing backward along the positive z-axis: (0, 0, 1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="131" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1ae7a1e8e3b7bf44bf106743ba8fdee666" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.down</definition>
        <argsstring>()</argsstring>
        <name>down</name>
        <briefdescription>
<para>The unit vector pointing down along the negative y-axis: (0, -1, 0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="113" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a71e39596252837897bfb4e522f81a471" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.forward</definition>
        <argsstring>()</argsstring>
        <name>forward</name>
        <briefdescription>
<para>The unit vector pointing forward along the negative z-axis: (0, 0, -1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="125" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a26372f7c8299ad958849033272e9000f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.left</definition>
        <argsstring>()</argsstring>
        <name>left</name>
        <briefdescription>
<para>The unit vector pointing left along the negative x-axis: (-1, 0, 0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="101" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a1824792398f794deacf1631ca217d69d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.right</definition>
        <argsstring>()</argsstring>
        <name>right</name>
        <briefdescription>
<para>The unit vector pointing right along the positive x-axis: (1, 0, 0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="107" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1aa7307c5bfe098fd6794a745e0d11360f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.up</definition>
        <argsstring>()</argsstring>
        <name>up</name>
        <briefdescription>
<para>The unit vector pointing up along the positive y-axis: (0, 1, 0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="119" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a3265f33265cd45bfc25a8d4cbb735240" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.xAxis</definition>
        <argsstring>()</argsstring>
        <name>xAxis</name>
        <briefdescription>
<para>The x-axis unit vector: (1, 0, 0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="83" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1aeced7b630ad5116804fdb6140f54a6e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.yAxis</definition>
        <argsstring>()</argsstring>
        <name>yAxis</name>
        <briefdescription>
<para>The y-axis unit vector: (0, 1, 0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="89" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1a2c009c83c79ce5f571b9bc25fc229b8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.zAxis</definition>
        <argsstring>()</argsstring>
        <name>zAxis</name>
        <briefdescription>
<para>The z-axis unit vector: (0, 0, 1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="95" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classcom_1_1leapmotion_1_1leap_1_1_vector_1afbf55f5415064edba5044edd1f208f5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector com.leapmotion.leap.Vector.zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
<para>The zero vector: (0, 0, 0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="77" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="77" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound">Vector</ref> struct represents a three-component mathematical vector or point such as a direction or position in three-dimensional space. </para>    </briefdescription>
    <detaileddescription>
<para>The Leap software employs a right-handed Cartesian coordinate system. Values given are in units of real-world millimeters. The origin is centered at the center of the Leap device. The x- and z-axes lie in the horizontal plane, with the x-axis running parallel to the long edge of the device. The y-axis is vertical, with positive values increasing upwards (in contrast to the downward orientation of most computer graphics coordinate systems). The z-axis has positive values increasing away from the computer screen.</para><para><image type="html" name="Leap_Axes.png"/>
 </para>    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" line="26" bodyfile="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java" bodystart="26" bodyend="399"/>
    <listofallmembers>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a3e1559ccfdbcca8594600af460c86625" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>angleTo</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a9ea8cc1db9b0e7a4fbf44c99c03f68e5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>backward</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ae24246a28023db7f459c3218938b504c" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>cross</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aafefdf977677efce81d0f188cbf1bda6" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>delete</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7af09174561edbe3fa639363c3f1ec70" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>distanceTo</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1acc121bbdb861079951dfb62a35e77071" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>divide</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ad499bd83e3676b2b79f4be138454c479" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>dot</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ae7a1e8e3b7bf44bf106743ba8fdee666" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>down</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a65dd586b063eba3e16e7ef079b4bb819" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>equals</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6f1620522e3a0c885c5723f9128e9de6" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>finalize</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a71e39596252837897bfb4e522f81a471" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>forward</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aace71cfbe3547910ff60e7748bef4a1f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>get</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ad3bdaadaf095eeb265291f2a64a7556e" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>getCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>getX</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>getY</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>getZ</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6805632ab99d332b121883beb8ac015a" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>isValid</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a26372f7c8299ad958849033272e9000f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>left</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6b713b087c4a1550d2892751daa6b9ab" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>magnitude</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a29b3635fc135833a7809b5a5197108a5" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>magnitudeSquared</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a8b0b1e6f5ab30a65aedbf6b8dc0a9ee2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>minus</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6af23209bd1dd0c52209079eed289ce8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>normalized</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a094d02ff75dfc7a7c6365d9cd028d4bb" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>opposite</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a3846e71ed303896bcb8920759f786128" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>pitch</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ae953da8fad75f9c6875235a94af2b4ac" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>plus</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a1824792398f794deacf1631ca217d69d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>right</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aac1844b328ff263d881171c362d71837" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>roll</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a8506b443988fc0d5d4ef00367a4ae2d7" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>setX</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7a80bb11d8c7a666c4e7c5adc91e4aa2" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>setY</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1af88539afb2c8eee19154361c6b6e32ee" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>setZ</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aef04388fb35ada0359be3aa1280c8efd" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>swigCMemOwn</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a88ce00cd01d485d8e9ae48f14ce6b0e5" prot="private" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>swigCPtr</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aea149a86ea12f74b32a0fe82f666181f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>times</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a1abbc2db04a185837f58d7dbceb89d3d" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>toFloatArray</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aba41477e3082659ec7987429bccd845b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>toString</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aa7307c5bfe098fd6794a745e0d11360f" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>up</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7eb5529e228ed195ac4a857c3d24df1b" prot="protected" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>Vector</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>Vector</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a9b9d024ea58c8ce0ee7851662b268ee8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>Vector</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a245e59cfd1e1b6a37b2fd93c42ce58c9" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>Vector</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a3265f33265cd45bfc25a8d4cbb735240" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>xAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a94015d7ce48ab69adebbdf7414b462e8" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>yaw</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aeced7b630ad5116804fdb6140f54a6e4" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>yAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a2c009c83c79ce5f571b9bc25fc229b8b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>zAxis</name></member>
      <member refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1afbf55f5415064edba5044edd1f208f5b" prot="public" virt="non-virtual"><scope>com::leapmotion::leap::Vector</scope><name>zero</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespacecom" kind="namespace">
    <compoundname>com</compoundname>
    <innernamespace refid="namespacecom_1_1leapmotion">com::leapmotion</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespacecom_1_1leapmotion" kind="namespace">
    <compoundname>com::leapmotion</compoundname>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespacecom_1_1leapmotion_1_1leap" kind="namespace">
    <compoundname>com::leapmotion::leap</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array" prot="public">com::leapmotion::leap::BoolArray</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" prot="public">com::leapmotion::leap::CircleGesture</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_config" prot="public">com::leapmotion::leap::Config</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_controller" prot="public">com::leapmotion::leap::Controller</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_double_array" prot="public">com::leapmotion::leap::DoubleArray</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_finger" prot="public">com::leapmotion::leap::Finger</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" prot="public">com::leapmotion::leap::FingerList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_float_array" prot="public">com::leapmotion::leap::FloatArray</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_frame" prot="public">com::leapmotion::leap::Frame</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" prot="public">com::leapmotion::leap::Gesture</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" prot="public">com::leapmotion::leap::GestureList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_hand" prot="public">com::leapmotion::leap::Hand</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" prot="public">com::leapmotion::leap::HandList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array" prot="public">com::leapmotion::leap::Int32Array</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_interface" prot="public">com::leapmotion::leap::Interface</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" prot="public">com::leapmotion::leap::KeyTapGesture</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_leap" prot="public">com::leapmotion::leap::Leap</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i" prot="public">com::leapmotion::leap::LeapJNI</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_listener" prot="public">com::leapmotion::leap::Listener</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" prot="public">com::leapmotion::leap::Matrix</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" prot="public">com::leapmotion::leap::Pointable</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" prot="public">com::leapmotion::leap::PointableList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_screen" prot="public">com::leapmotion::leap::Screen</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" prot="public">com::leapmotion::leap::ScreenList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" prot="public">com::leapmotion::leap::ScreenTapGesture</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_string_array" prot="public">com::leapmotion::leap::StringArray</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" prot="public">com::leapmotion::leap::SwipeGesture</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_tool" prot="public">com::leapmotion::leap::Tool</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" prot="public">com::leapmotion::leap::ToolList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array" prot="public">com::leapmotion::leap::UInt32Array</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_vector" prot="public">com::leapmotion::leap::Vector</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java" line="9"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespacestd" kind="namespace">
    <compoundname>std</compoundname>
    <innerclass refid="classstd_1_1allocator" prot="public">std::allocator</innerclass>
    <innerclass refid="classstd_1_1array" prot="public">std::array</innerclass>
    <innerclass refid="classstd_1_1auto__ptr" prot="public">std::auto_ptr</innerclass>
    <innerclass refid="classstd_1_1bad__alloc" prot="public">std::bad_alloc</innerclass>
    <innerclass refid="classstd_1_1bad__cast" prot="public">std::bad_cast</innerclass>
    <innerclass refid="classstd_1_1bad__exception" prot="public">std::bad_exception</innerclass>
    <innerclass refid="classstd_1_1bad__typeid" prot="public">std::bad_typeid</innerclass>
    <innerclass refid="classstd_1_1basic__fstream" prot="public">std::basic_fstream</innerclass>
    <innerclass refid="classstd_1_1basic__ifstream" prot="public">std::basic_ifstream</innerclass>
    <innerclass refid="classstd_1_1basic__ios" prot="public">std::basic_ios</innerclass>
    <innerclass refid="classstd_1_1basic__iostream" prot="public">std::basic_iostream</innerclass>
    <innerclass refid="classstd_1_1basic__istream" prot="public">std::basic_istream</innerclass>
    <innerclass refid="classstd_1_1basic__istringstream" prot="public">std::basic_istringstream</innerclass>
    <innerclass refid="classstd_1_1basic__ofstream" prot="public">std::basic_ofstream</innerclass>
    <innerclass refid="classstd_1_1basic__ostream" prot="public">std::basic_ostream</innerclass>
    <innerclass refid="classstd_1_1basic__ostringstream" prot="public">std::basic_ostringstream</innerclass>
    <innerclass refid="classstd_1_1basic__string" prot="public">std::basic_string</innerclass>
    <innerclass refid="classstd_1_1basic__stringstream" prot="public">std::basic_stringstream</innerclass>
    <innerclass refid="classstd_1_1bitset" prot="public">std::bitset</innerclass>
    <innerclass refid="classstd_1_1complex" prot="public">std::complex</innerclass>
    <innerclass refid="classstd_1_1deque" prot="public">std::deque</innerclass>
    <innerclass refid="classstd_1_1domain__error" prot="public">std::domain_error</innerclass>
    <innerclass refid="classstd_1_1error__category" prot="public">std::error_category</innerclass>
    <innerclass refid="classstd_1_1error__code" prot="public">std::error_code</innerclass>
    <innerclass refid="classstd_1_1error__condition" prot="public">std::error_condition</innerclass>
    <innerclass refid="classstd_1_1exception" prot="public">std::exception</innerclass>
    <innerclass refid="classstd_1_1forward__list" prot="public">std::forward_list</innerclass>
    <innerclass refid="classstd_1_1fstream" prot="public">std::fstream</innerclass>
    <innerclass refid="classstd_1_1ifstream" prot="public">std::ifstream</innerclass>
    <innerclass refid="classstd_1_1invalid__argument" prot="public">std::invalid_argument</innerclass>
    <innerclass refid="classstd_1_1ios" prot="public">std::ios</innerclass>
    <innerclass refid="classstd_1_1ios__base" prot="public">std::ios_base</innerclass>
    <innerclass refid="classstd_1_1istream" prot="public">std::istream</innerclass>
    <innerclass refid="classstd_1_1istringstream" prot="public">std::istringstream</innerclass>
    <innerclass refid="classstd_1_1length__error" prot="public">std::length_error</innerclass>
    <innerclass refid="classstd_1_1list" prot="public">std::list</innerclass>
    <innerclass refid="classstd_1_1logic__error" prot="public">std::logic_error</innerclass>
    <innerclass refid="classstd_1_1map" prot="public">std::map</innerclass>
    <innerclass refid="classstd_1_1multimap" prot="public">std::multimap</innerclass>
    <innerclass refid="classstd_1_1multiset" prot="public">std::multiset</innerclass>
    <innerclass refid="classstd_1_1ofstream" prot="public">std::ofstream</innerclass>
    <innerclass refid="classstd_1_1ostream" prot="public">std::ostream</innerclass>
    <innerclass refid="classstd_1_1ostringstream" prot="public">std::ostringstream</innerclass>
    <innerclass refid="classstd_1_1out__of__range" prot="public">std::out_of_range</innerclass>
    <innerclass refid="classstd_1_1overflow__error" prot="public">std::overflow_error</innerclass>
    <innerclass refid="classstd_1_1priority__queue" prot="public">std::priority_queue</innerclass>
    <innerclass refid="classstd_1_1queue" prot="public">std::queue</innerclass>
    <innerclass refid="classstd_1_1range__error" prot="public">std::range_error</innerclass>
    <innerclass refid="classstd_1_1runtime__error" prot="public">std::runtime_error</innerclass>
    <innerclass refid="classstd_1_1set" prot="public">std::set</innerclass>
    <innerclass refid="classstd_1_1smart__ptr" prot="public">std::smart_ptr</innerclass>
    <innerclass refid="classstd_1_1stack" prot="public">std::stack</innerclass>
    <innerclass refid="classstd_1_1string" prot="public">std::string</innerclass>
    <innerclass refid="classstd_1_1stringstream" prot="public">std::stringstream</innerclass>
    <innerclass refid="classstd_1_1system__error" prot="public">std::system_error</innerclass>
    <innerclass refid="classstd_1_1thread" prot="public">std::thread</innerclass>
    <innerclass refid="classstd_1_1underflow__error" prot="public">std::underflow_error</innerclass>
    <innerclass refid="classstd_1_1unique__ptr" prot="public">std::unique_ptr</innerclass>
    <innerclass refid="classstd_1_1unordered__map" prot="public">std::unordered_map</innerclass>
    <innerclass refid="classstd_1_1unordered__multimap" prot="public">std::unordered_multimap</innerclass>
    <innerclass refid="classstd_1_1unordered__multiset" prot="public">std::unordered_multiset</innerclass>
    <innerclass refid="classstd_1_1unordered__set" prot="public">std::unordered_set</innerclass>
    <innerclass refid="classstd_1_1valarray" prot="public">std::valarray</innerclass>
    <innerclass refid="classstd_1_1vector" prot="public">std::vector</innerclass>
    <innerclass refid="classstd_1_1weak__ptr" prot="public">std::weak_ptr</innerclass>
    <innerclass refid="classstd_1_1wfstream" prot="public">std::wfstream</innerclass>
    <innerclass refid="classstd_1_1wifstream" prot="public">std::wifstream</innerclass>
    <innerclass refid="classstd_1_1wios" prot="public">std::wios</innerclass>
    <innerclass refid="classstd_1_1wistream" prot="public">std::wistream</innerclass>
    <innerclass refid="classstd_1_1wistringstream" prot="public">std::wistringstream</innerclass>
    <innerclass refid="classstd_1_1wofstream" prot="public">std::wofstream</innerclass>
    <innerclass refid="classstd_1_1wostream" prot="public">std::wostream</innerclass>
    <innerclass refid="classstd_1_1wostringstream" prot="public">std::wostringstream</innerclass>
    <innerclass refid="classstd_1_1wstring" prot="public">std::wstring</innerclass>
    <innerclass refid="classstd_1_1wstringstream" prot="public">std::wstringstream</innerclass>
    <briefdescription>
<para>STL namespace. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[STL]" line="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespace_swig" kind="namespace">
    <compoundname>Swig</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="457"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespace_swig_1_1@31" kind="namespace">
    <compoundname>Swig::@31</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="458"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_bool_array_8java" kind="file">
    <compoundname>BoolArray.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_bool_array" prot="public">com::leapmotion::leap::BoolArray</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BoolArray<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>BoolArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(BoolArray<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_BoolArray(swigCPtr);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>BoolArray()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_BoolArray__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>BoolArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_BoolArray__SWIG_1(n),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.BoolArray_size(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>capacity()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.BoolArray_capacity(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.BoolArray_reserve(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isEmpty()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.BoolArray_isEmpty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.BoolArray_clear(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.BoolArray_add(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.BoolArray_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.BoolArray_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i,<sp/>val);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/BoolArray.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_circle_gesture_8java" kind="file">
    <compoundname>CircleGesture.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" prot="public">com::leapmotion::leap::CircleGesture</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="33" refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound" tooltip="The CircleGesture classes represents a circular finger movement.">CircleGesture</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1af03263629b924c674d5d486a3082d45c" kindref="member" tooltip="Constructs a new CircleGesture object.">CircleGesture</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.CircleGesture_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture" kindref="compound" tooltip="The CircleGesture classes represents a circular finger movement.">CircleGesture</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_CircleGesture(swigCPtr);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1ab756335888069ab496e292e7ad95a732" kindref="member" tooltip="The circle gesture type.">classType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type.swigToEnum(LeapJNI.CircleGesture_classType());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1af03263629b924c674d5d486a3082d45c" kindref="member" tooltip="Constructs a new CircleGesture object.">CircleGesture</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_CircleGesture__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1af03263629b924c674d5d486a3082d45c" kindref="member" tooltip="Constructs a new CircleGesture object.">CircleGesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_CircleGesture__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.getCPtr(rhs),<sp/>rhs),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a83c3b2eb0729375f3dc1ef532d35f1ba" kindref="member" tooltip="The center point of the circle within the Leap frame of reference.">center</ref>()<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.CircleGesture_center(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1ae1ce3748c0f520f0beabc2f97448141c" kindref="member" tooltip="Returns the normal vector for the circle being traced.">normal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.CircleGesture_normal(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a2f5ba747ab2f04fe5e9d3163b1ca3186" kindref="member" tooltip="The number of times the finger tip has traversed the circle.">progress</ref>()<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.CircleGesture_progress(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a4847a085466bb5a10a7a68516ef6c748" kindref="member" tooltip="The radius of the circle.">radius</ref>()<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.CircleGesture_radius(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_circle_gesture_1a1e145a98d76932ca3d8cc5ade9cfd35d" kindref="member" tooltip="The finger performing the circle gesture.">pointable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>(LeapJNI.CircleGesture_pointable(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/CircleGesture.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_config_8java" kind="file">
    <compoundname>Config.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_config" prot="public">com::leapmotion::leap::Config</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type_1_1_swig_next" prot="private">com::leapmotion::leap::Config::ValueType::SwigNext</innerclass>
    <innerclass refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" prot="public">com::leapmotion::leap::Config::ValueType</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="18" refid="classcom_1_1leapmotion_1_1leap_1_1_config" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound" tooltip="The Config class provides access to Leap system configuration information.">Config</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a27f0fe3690e0de400698fa6266d7d5e0" kindref="member" tooltip="Constructs a Config object.">Config</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Config_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound" tooltip="The Config class provides access to Leap system configuration information.">Config</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Config(swigCPtr);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a27f0fe3690e0de400698fa6266d7d5e0" kindref="member" tooltip="Constructs a Config object.">Config</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Config(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound" tooltip="The Config class provides access to Leap system configuration information.">Config</ref>.ValueType<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a045db7e824cfbb29b3ac81abcbda7159" kindref="member" tooltip="Reports the natural data type for the value related to the specified key.">type</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound" tooltip="The Config class provides access to Leap system configuration information.">Config</ref>.ValueType.swigToEnum(LeapJNI.Config_type(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1abfd2fdac052a84fc2bb987878cc68ede" kindref="member" tooltip="Reports whether the value is an array of homogeneous objects.">isArray</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Config_isArray(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a50f4e307e234b2387b64f416732e1e07" kindref="member" tooltip="Gets the boolean representation for the specified key.">getBool</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Config_getBool(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a2edc24df6e3cf0d5393f4a2329b759ad" kindref="member" tooltip="Gets the 32-bit integer representation for the specified key.">getInt32</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Config_getInt32(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1af1299d7c3b26cd66e2bc170be586cb42" kindref="member" tooltip="Gets the 64-bit integer representation for the specified key.">getInt64</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Config_getInt64(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a9dce281c9de4b4b6f4debfcdcb904374" kindref="member" tooltip="Gets the unsigned 32-bit integer representation for the specified key.">getUInt32</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Config_getUInt32(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>java.math.BigInteger<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a527d6ccd07eafa27a03483065038d0fe" kindref="member" tooltip="Gets the unsigned 64-bit integer representation for the specified key.">getUInt64</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Config_getUInt64(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a49ffe2193e8afe570121f7ba67b1e897" kindref="member" tooltip="Gets the floating point representation for the specified key.">getFloat</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Config_getFloat(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1acc353081411ad88366a3f696fcefa679" kindref="member" tooltip="Gets the double precision representation for the specified key.">getDouble</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Config_getDouble(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1ac7b16ec05befb0eeb35a8f9361ffbbc7" kindref="member" tooltip="Gets the string representation for the specified key.">getString</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Config_getString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>BoolArray<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a07ff11e86a2233250f46d49d394ec91b" kindref="member" tooltip="Gets the boolean array representation for the specified key.">getBoolArray</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BoolArray(LeapJNI.Config_getBoolArray(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Int32Array<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a7601d1a3f6eff618deb0d3886bcd813f" kindref="member" tooltip="Gets the 32-bit integer array representation for the specified key.">getInt32Array</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Int32Array(LeapJNI.Config_getInt32Array(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>UInt32Array<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1aa0524c5946e1f4a5651753f133348cd2" kindref="member" tooltip="Gets the unsigned 32-bit integer array representation for the specified key.">getUInt32Array</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UInt32Array(LeapJNI.Config_getUInt32Array(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FloatArray<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1abe55dd23a26d8d963e27e9908558b9c0" kindref="member" tooltip="Gets the floating point array representation for the specified key.">getFloatArray</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FloatArray(LeapJNI.Config_getFloatArray(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DoubleArray<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1afedf98b202dafa25fdec7e6e61c87d48" kindref="member" tooltip="Gets the double precision array representation for the specified key.">getDoubleArray</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DoubleArray(LeapJNI.Config_getDoubleArray(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"/></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>StringArray<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config_1a58371033ba5132537b45a2c959d1f2ad" kindref="member" tooltip="Gets the string array representation for the specified key.">getStringArray</ref>(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StringArray(LeapJNI.Config_getStringArray(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"/></codeline>
<codeline lineno="162" refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_UNKNOWN,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_BOOLEAN,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_INT32,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_INT64,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_UINT32,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_UINT64,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_FLOAT,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_DOUBLE,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_STRING,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"/></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue()<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref><sp/>swigToEnum(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref>[]<sp/>swigValues<sp/>=<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref>.class.getEnumConstants();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigValue<sp/>&lt;<sp/>swigValues.length<sp/>&amp;&amp;<sp/>swigValue<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>swigValues[swigValue].swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValues[swigValue];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref><sp/>swigEnum<sp/>:<sp/>swigValues)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigEnum.swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigEnum;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">"No<sp/>enum<sp/>"</highlight><highlight class="normal"><sp/>+<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref>.class<sp/>+<sp/></highlight><highlight class="stringliteral">"<sp/>with<sp/>value<sp/>"</highlight><highlight class="normal"><sp/>+<sp/>swigValue);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">"unused"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>SwigNext.next++;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"/></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">"unused"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigValue;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>swigValue+1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"/></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">"unused"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_config_1_1_value_type" kindref="compound" tooltip="Enumerates the possible data types for configuration values.">ValueType</ref><sp/>swigEnum)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigEnum.swigValue;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>this.swigValue+1;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"/></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"/></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SwigNext<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Config.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_controller_8java" kind="file">
    <compoundname>Controller.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_controller" prot="public">com::leapmotion::leap::Controller</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="52" refid="classcom_1_1leapmotion_1_1leap_1_1_controller" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a615807b6ff5b7d7b4323096988fba8bf" kindref="member" tooltip="Constructs a Controller object.">Controller</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Controller_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Controller(swigCPtr);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a615807b6ff5b7d7b4323096988fba8bf" kindref="member" tooltip="Constructs a Controller object.">Controller</ref>()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Controller__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a615807b6ff5b7d7b4323096988fba8bf" kindref="member" tooltip="Constructs a Controller object.">Controller</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>listener)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Controller__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.getCPtr(listener),<sp/>listener),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a80a13bc6fc939b6b40791b03bd314ed3" kindref="member" tooltip="Reports whether this Controller is connected to the Leap device.">isConnected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Controller_isConnected(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad19466e5c1fd3c1e9ea894a33d643695" kindref="member" tooltip="Adds a listener to this Controller.">addListener</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>listener)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Controller_addListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.getCPtr(listener),<sp/>listener);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a33ae2103e110125fdb2eb6054b33ef7b" kindref="member" tooltip="Remove a listener from the list of listeners that will receive Leap events.">removeListener</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>listener)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Controller_removeListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.getCPtr(listener),<sp/>listener);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"/></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member" tooltip="Returns a frame of tracking data from the Leap.">frame</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>history)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>(LeapJNI.Controller_frame__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>history),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1af31ab95b5311721e816e8d9ece03bea4" kindref="member" tooltip="Returns a frame of tracking data from the Leap.">frame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>(LeapJNI.Controller_frame__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"/></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound" tooltip="The Config class provides access to Leap system configuration information.">Config</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a7f1782f297d729edbda9df347e5ad220" kindref="member" tooltip="Returns a Config object, which you can use to query the Leap system for configuration information...">config</ref>()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_config" kindref="compound" tooltip="The Config class provides access to Leap system configuration information.">Config</ref>(LeapJNI.Controller_config(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound" tooltip="The ScreenList class represents a list of Screen objects.">ScreenList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1a566d7f4f612e29d1ec443ffcc4fdaa0b" kindref="member" tooltip="The list of screens whose positions have been identified by using the Leap application Screen Locator...">calibratedScreens</ref>()<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound" tooltip="The ScreenList class represents a list of Screen objects.">ScreenList</ref>(LeapJNI.Controller_calibratedScreens(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad49179bb7ada9753e50d63d640b7e2b6" kindref="member" tooltip="Enables or disables reporting of a specified gesture type.">enableGesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/>type,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Controller_enableGesture__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>type.swigValue(),<sp/>enable);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"/></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad49179bb7ada9753e50d63d640b7e2b6" kindref="member" tooltip="Enables or disables reporting of a specified gesture type.">enableGesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Controller_enableGesture__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>type.swigValue());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"/></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller_1ad445c8142735bdaef98685d1391865c3" kindref="member" tooltip="Reports whether the specified gesture type is enabled.">isGestureEnabled</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Controller_isGestureEnabled(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>type.swigValue());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"/></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Controller.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_double_array_8java" kind="file">
    <compoundname>DoubleArray.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_double_array" prot="public">com::leapmotion::leap::DoubleArray</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DoubleArray<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>DoubleArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(DoubleArray<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_DoubleArray(swigCPtr);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DoubleArray()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_DoubleArray__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DoubleArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_DoubleArray__SWIG_1(n),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.DoubleArray_size(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>capacity()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.DoubleArray_capacity(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.DoubleArray_reserve(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isEmpty()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.DoubleArray_isEmpty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.DoubleArray_clear(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.DoubleArray_add(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.DoubleArray_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.DoubleArray_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i,<sp/>val);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/DoubleArray.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_finger_8java" kind="file">
    <compoundname>Finger.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_finger" prot="public">com::leapmotion::leap::Finger</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="25" refid="classcom_1_1leapmotion_1_1leap_1_1_finger" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1aaed2941cf3c49c6fd56a6d012007889e" kindref="member" tooltip="Constructs a Finger object.">Finger</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Finger_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Finger(swigCPtr);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1aaed2941cf3c49c6fd56a6d012007889e" kindref="member" tooltip="Constructs a Finger object.">Finger</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Finger__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1aaed2941cf3c49c6fd56a6d012007889e" kindref="member" tooltip="Constructs a Finger object.">Finger</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Finger__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>.getCPtr(arg0),<sp/>arg0),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1ad7757644ee6f23a55b37f343d81498da" kindref="member" tooltip="Returns an invalid Finger object.">invalid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1aaed2941cf3c49c6fd56a6d012007889e" kindref="member" tooltip="Constructs a Finger object.">Finger</ref>(LeapJNI.Finger_invalid(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_1ac70aef945e2bd5788f386b3acaa2063c" kindref="member" tooltip="A string containing a brief, human readable description of the Finger object.">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Finger_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Finger.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_finger_list_8java" kind="file">
    <compoundname>FingerList.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" prot="public">com::leapmotion::leap::FingerList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1_1_finger_list_iterator" prot="public">com::leapmotion::leap::FingerList::FingerListIterator</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="17" refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>implements<sp/>Iterable&lt;Finger&gt;<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a0729a37753c58128aadb4366526b23fc" kindref="member" tooltip="Constructs an empty list of fingers.">FingerList</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.FingerList_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_FingerList(swigCPtr);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FingerListIterator<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;Finger&gt;<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>hasNext()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1abcbed77727c5ae54426a6a18553ebcb0" kindref="member" tooltip="Returns the number of fingers in this list.">count</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref><sp/>next()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(index++);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;<ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref>&gt;<sp/>iterator()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FingerListIterator();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a0729a37753c58128aadb4366526b23fc" kindref="member" tooltip="Constructs an empty list of fingers.">FingerList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_FingerList(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1abcbed77727c5ae54426a6a18553ebcb0" kindref="member" tooltip="Returns the number of fingers in this list.">count</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.FingerList_count(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a6a6d2ea9901391848a26714f18c4e504" kindref="member" tooltip="Reports whether the list is empty.">empty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.FingerList_empty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref>(LeapJNI.FingerList_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a8e6b14cfb9c11b1c1c7851dcac7e129e" kindref="member" tooltip="Appends the members of the specifed FingerList to this FingerList.">append</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list_1a0729a37753c58128aadb4366526b23fc" kindref="member" tooltip="Constructs an empty list of fingers.">FingerList</ref>(LeapJNI.FingerList_append(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FingerList.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_float_array_8java" kind="file">
    <compoundname>FloatArray.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_float_array" prot="public">com::leapmotion::leap::FloatArray</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FloatArray<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>FloatArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(FloatArray<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_FloatArray(swigCPtr);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FloatArray()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_FloatArray__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FloatArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_FloatArray__SWIG_1(n),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.FloatArray_size(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>capacity()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.FloatArray_capacity(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.FloatArray_reserve(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isEmpty()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.FloatArray_isEmpty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.FloatArray_clear(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.FloatArray_add(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.FloatArray_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.FloatArray_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i,<sp/>val);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/FloatArray.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_frame_8java" kind="file">
    <compoundname>Frame.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_frame" prot="public">com::leapmotion::leap::Frame</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="22" refid="classcom_1_1leapmotion_1_1leap_1_1_frame" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1aed613c567b9b3b9f8dcf52856c9a2030" kindref="member" tooltip="Constructs a Frame object.">Frame</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Frame_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Frame(swigCPtr);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1aed613c567b9b3b9f8dcf52856c9a2030" kindref="member" tooltip="Constructs a Frame object.">Frame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Frame(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1add4aa27e1b4181fb8c9bae5feaf4139d" kindref="member" tooltip="A unique ID for this Frame.">id</ref>()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Frame_id(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1abf56bd79f7143e5e51a9c830bf0a5fbe" kindref="member" tooltip="The frame capture time in microseconds elapsed since the Leap started.">timestamp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Frame_timestamp(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ae95881f0ce37c72e4e74b0bd46e02cc7" kindref="member" tooltip="The list of Hand objects detected in this frame, given in arbitrary order.">hands</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref>(LeapJNI.Frame_hands(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a75d80b1d6c46b04fc6c446c79ce3cc19" kindref="member" tooltip="The Hand object with the specified ID in this frame.">hand</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref>(LeapJNI.Frame_hand(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1aeaadff41e48021771b3e33333c505d5d" kindref="member" tooltip="The list of Pointable objects (fingers and tools) detected in this frame, given in arbitrary order...">pointables</ref>()<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref>(LeapJNI.Frame_pointables(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a91c0d83c637fb367e72216d22dac8fb7" kindref="member" tooltip="The Pointable object with the specified ID in this frame.">pointable</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>(LeapJNI.Frame_pointable(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a63148fe55813b2c426a711cfa143f801" kindref="member" tooltip="The list of Finger objects detected in this frame, given in arbitrary order.">fingers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref>(LeapJNI.Frame_fingers(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a841c6a05eb2dfa190d3a249073aaf348" kindref="member" tooltip="The Finger object with the specified ID in this frame.">finger</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref>(LeapJNI.Frame_finger(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a1d4d3ca18d34b4df7422f18a735527ad" kindref="member" tooltip="The list of Tool objects detected in this frame, given in arbitrary order.">tools</ref>()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref>(LeapJNI.Frame_tools(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a8b35e3a0bb912a2a9904bee41f6373da" kindref="member" tooltip="The Tool object with the specified ID in this frame.">tool</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref>(LeapJNI.Frame_tool(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a03f702e60e7b917a9a5b5603f3132fa3" kindref="member" tooltip="The Gesture object with the specified ID in this frame.">gesture</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>(LeapJNI.Frame_gesture(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound" tooltip="The GestureList class represents a list of Gesture objects.">GestureList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a308d136b5187166dcfd0f1be28aec2c5" kindref="member" tooltip="The gestures recognized or continuing in this frame.">gestures</ref>()<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound" tooltip="The GestureList class represents a list of Gesture objects.">GestureList</ref>(LeapJNI.Frame_gestures__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound" tooltip="The GestureList class represents a list of Gesture objects.">GestureList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a308d136b5187166dcfd0f1be28aec2c5" kindref="member" tooltip="The gestures recognized or continuing in this frame.">gestures</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound" tooltip="The GestureList class represents a list of Gesture objects.">GestureList</ref>(LeapJNI.Frame_gestures__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"/></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a2248c1409975aa689bd63bc3970a8656" kindref="member" tooltip="The change of position derived from the overall linear motion between the current frame and the speci...">translation</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Frame_translation(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"/></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a84c9f63c0cf256ec3de2c375586e5eba" kindref="member" tooltip="The axis of rotation derived from the overall rotational motion between the current frame and the spe...">rotationAxis</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Frame_rotationAxis(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"/></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9570b870042931e39da08ac41b70e5d0" kindref="member" tooltip="The angle of rotation around the rotation axis derived from the overall rotational motion between the...">rotationAngle</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Frame_rotationAngle__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"/></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9570b870042931e39da08ac41b70e5d0" kindref="member" tooltip="The angle of rotation around the rotation axis derived from the overall rotational motion between the...">rotationAngle</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>axis)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Frame_rotationAngle__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(axis),<sp/>axis);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"/></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1ac7cfc29107e6bd94ecd4e851a40f88af" kindref="member" tooltip="The transform matrix expressing the rotation derived from the overall rotational motion between the c...">rotationMatrix</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref>(LeapJNI.Frame_rotationMatrix(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"/></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9d09300fae5e7b7f243758d1a1d44d2a" kindref="member" tooltip="The scale factor derived from the overall motion between the current frame and the specified frame...">scaleFactor</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Frame_scaleFactor(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"/></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a895c3c63566e8987a11fcaee4f875829" kindref="member" tooltip="Reports whether this Frame instance is valid.">isValid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Frame_isValid(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"/></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a0aa54564365f6e4cb849bee2a2df4a73" kindref="member" tooltip="Returns an invalid Frame object.">invalid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1aed613c567b9b3b9f8dcf52856c9a2030" kindref="member" tooltip="Constructs a Frame object.">Frame</ref>(LeapJNI.Frame_invalid(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"/></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a73e01ad097ed520ed0eb6189c156c618" kindref="member" tooltip="Compare Frame object equality.">equals</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Frame_equals(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"/></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame_1a9c0392d98f61df3c560c9895cbb41fcc" kindref="member" tooltip="A string containing a brief, human readable description of the Frame object.">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Frame_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"/></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Frame.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_gesture_8java" kind="file">
    <compoundname>Gesture.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" prot="public">com::leapmotion::leap::Gesture</innerclass>
    <innerclass refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" prot="public">com::leapmotion::leap::Gesture::State</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state_1_1_swig_next" prot="private">com::leapmotion::leap::Gesture::State::SwigNext</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type_1_1_swig_next" prot="private">com::leapmotion::leap::Gesture::Type::SwigNext</innerclass>
    <innerclass refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" prot="public">com::leapmotion::leap::Gesture::Type</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="58" refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" kindref="member" tooltip="Constructs a new Gesture object.">Gesture</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Gesture_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Gesture(swigCPtr);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" kindref="member" tooltip="Constructs a new Gesture object.">Gesture</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Gesture__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" kindref="member" tooltip="Constructs a new Gesture object.">Gesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Gesture__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.getCPtr(rhs),<sp/>rhs),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a7420937c98ea7646f083e5c0a469fe3d" kindref="member" tooltip="The gesture type.">type</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type.swigToEnum(LeapJNI.Gesture_type(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.State<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a13f39cae216c5f285c526936a6b0af67" kindref="member" tooltip="The gesture state.">state</ref>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.State.swigToEnum(LeapJNI.Gesture_state(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ad3e6aa7ddce5cf3079bcc6259f7d7412" kindref="member" tooltip="The gesture ID.">id</ref>()<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_id(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a762ca0339845c9fd8f56eb9c50a9d939" kindref="member" tooltip="The elapsed duration of the recognized movement up to the frame containing this Gesture object...">duration</ref>()<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_duration(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ade91b8b357a0b65559f0b6e92259611a" kindref="member" tooltip="The elapsed duration in seconds.">durationSeconds</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_durationSeconds(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1acd58fdacb406067210d346766317c73d" kindref="member" tooltip="The Frame containing this Gesture instance.">frame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>(LeapJNI.Gesture_frame(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a774b6b0a846bc908140a9695446ec398" kindref="member" tooltip="The list of hands associated with this Gesture, if any.">hands</ref>()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref>(LeapJNI.Gesture_hands(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"/></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a43e5763a3e347a066aabd5cac4e0f899" kindref="member" tooltip="The list of fingers and tools associated with this Gesture, if any.">pointables</ref>()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref>(LeapJNI.Gesture_pointables(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"/></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a1fbc97e34f25c3e1bb2f6ffecc57c563" kindref="member" tooltip="Reports whether this Gesture instance represents a valid Gesture.">isValid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_isValid(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a9d1e2879db9699c3376ecad4ac6b5326" kindref="member" tooltip="Compare Gesture object equality.">equals</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_equals(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.getCPtr(rhs),<sp/>rhs);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"/></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a6e5c086a26fa919648e307887cdefcf2" kindref="member" tooltip="A string containing a brief, human-readable description of this Gesture.">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Gesture_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"/></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1a8a5bf5a6582c95367b8a46ac0a220da5" kindref="member" tooltip="Returns an invalid Gesture object.">invalid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_1ac29ba36fa9b334ce822936cf530b3aa7" kindref="member" tooltip="Constructs a new Gesture object.">Gesture</ref>(LeapJNI.Gesture_invalid(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"/></codeline>
<codeline lineno="259" refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_INVALID(-1),</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_SWIPE(1),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_CIRCLE(4),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_SCREEN_TAP(5),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPE_KEY_TAP(6),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"/></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue()<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"/></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref><sp/>swigToEnum(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>[]<sp/>swigValues<sp/>=<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>.class.getEnumConstants();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigValue<sp/>&lt;<sp/>swigValues.length<sp/>&amp;&amp;<sp/>swigValue<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>swigValues[swigValue].swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValues[swigValue];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref><sp/>swigEnum<sp/>:<sp/>swigValues)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigEnum.swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigEnum;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">"No<sp/>enum<sp/>"</highlight><highlight class="normal"><sp/>+<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>.class<sp/>+<sp/></highlight><highlight class="stringliteral">"<sp/>with<sp/>value<sp/>"</highlight><highlight class="normal"><sp/>+<sp/>swigValue);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"/></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">"unused"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>()<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>SwigNext.next++;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"/></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">"unused"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigValue;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>swigValue+1;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"/></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">"unused"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_type" kindref="compound" tooltip="The supported types of gestures.">Type</ref><sp/>swigEnum)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigEnum.swigValue;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>this.swigValue+1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"/></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"/></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SwigNext<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"/></codeline>
<codeline lineno="319" refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>STATE_INVALID(-1),</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>STATE_START(1),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>STATE_UPDATE(2),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>STATE_STOP(3),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"/></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue()<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"/></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref><sp/>swigToEnum(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>[]<sp/>swigValues<sp/>=<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>.class.getEnumConstants();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigValue<sp/>&lt;<sp/>swigValues.length<sp/>&amp;&amp;<sp/>swigValue<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>swigValues[swigValue].swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigValues[swigValue];</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref><sp/>swigEnum<sp/>:<sp/>swigValues)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigEnum.swigValue<sp/>==<sp/>swigValue)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swigEnum;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">"No<sp/>enum<sp/>"</highlight><highlight class="normal"><sp/>+<sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>.class<sp/>+<sp/></highlight><highlight class="stringliteral">"<sp/>with<sp/>value<sp/>"</highlight><highlight class="normal"><sp/>+<sp/>swigValue);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"/></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">"unused"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>()<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>SwigNext.next++;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"/></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">"unused"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigValue;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>swigValue+1;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"/></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>@SuppressWarnings(</highlight><highlight class="stringliteral">"unused"</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref>(<ref refid="enumcom_1_1leapmotion_1_1leap_1_1_gesture_1_1_state" kindref="compound" tooltip="The possible gesture states.">State</ref><sp/>swigEnum)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.swigValue<sp/>=<sp/>swigEnum.swigValue;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SwigNext.next<sp/>=<sp/>this.swigValue+1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"/></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swigValue;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"/></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SwigNext<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"/></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Gesture.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_gesture_list_8java" kind="file">
    <compoundname>GestureList.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" prot="public">com::leapmotion::leap::GestureList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1_1_gesture_list_iterator" prot="public">com::leapmotion::leap::GestureList::GestureListIterator</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="17" refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound" tooltip="The GestureList class represents a list of Gesture objects.">GestureList</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>implements<sp/>Iterable&lt;Gesture&gt;<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1af2b91c8b1f8ac1226de6be4c0de9ff7d" kindref="member" tooltip="Constructs an empty gesture list.">GestureList</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.GestureList_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound" tooltip="The GestureList class represents a list of Gesture objects.">GestureList</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_GestureList(swigCPtr);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GestureListIterator<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;Gesture&gt;<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>hasNext()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a4bc27175479eb04efb1e8c6b02cc71c5" kindref="member" tooltip="The length of this list.">count</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>next()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(index++);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>&gt;<sp/>iterator()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GestureListIterator();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1af2b91c8b1f8ac1226de6be4c0de9ff7d" kindref="member" tooltip="Constructs an empty gesture list.">GestureList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_GestureList(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a4bc27175479eb04efb1e8c6b02cc71c5" kindref="member" tooltip="The length of this list.">count</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.GestureList_count(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a8282b92d4cd004a81a38c4cadeca6431" kindref="member" tooltip="Reports whether the list is empty.">empty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.GestureList_empty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>(LeapJNI.GestureList_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound" tooltip="The GestureList class represents a list of Gesture objects.">GestureList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1a67d640d0a2630612dd801efd74e916fd" kindref="member" tooltip="Appends the members of the specified GestureList to this GestureList.">append</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound" tooltip="The GestureList class represents a list of Gesture objects.">GestureList</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list_1af2b91c8b1f8ac1226de6be4c0de9ff7d" kindref="member" tooltip="Constructs an empty gesture list.">GestureList</ref>(LeapJNI.GestureList_append(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture_list" kindref="compound" tooltip="The GestureList class represents a list of Gesture objects.">GestureList</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/GestureList.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_hand_8java" kind="file">
    <compoundname>Hand.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_hand" prot="public">com::leapmotion::leap::Hand</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="26" refid="classcom_1_1leapmotion_1_1leap_1_1_hand" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1ac4ffbfccb689e551f6746d779cdd7de2" kindref="member" tooltip="Constructs a Hand object.">Hand</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Hand_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Hand(swigCPtr);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1ac4ffbfccb689e551f6746d779cdd7de2" kindref="member" tooltip="Constructs a Hand object.">Hand</ref>()<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Hand(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a86deb2637cd447c733e76d6ab31257b9" kindref="member" tooltip="A unique ID assigned to this Hand object, whose value remains the same across consecutive frames whil...">id</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Hand_id(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a3834bde833cdbdba102da2d9b3a63d9a" kindref="member" tooltip="The Frame associated with this Hand.">frame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>(LeapJNI.Hand_frame(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a59ccdd31d706349212e57f05e6def377" kindref="member" tooltip="The list of Pointable objects (fingers and tools) detected in this frame that are associated with thi...">pointables</ref>()<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref>(LeapJNI.Hand_pointables(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a82fa63906f22507aa5b0f265bc62f426" kindref="member" tooltip="The Pointable object with the specified ID associated with this hand.">pointable</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>(LeapJNI.Hand_pointable(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1aecc93940ce6172c40c002cc6748cb4d2" kindref="member" tooltip="The list of Finger objects detected in this frame that are attached to this hand, given in arbitrary ...">fingers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref>(LeapJNI.Hand_fingers(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a71ca5cf1110b809f542e31da3b5681c3" kindref="member" tooltip="The Finger object with the specified ID attached to this hand.">finger</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger" kindref="compound" tooltip="The Finger class represents a tracked finger.">Finger</ref>(LeapJNI.Hand_finger(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a039f8706c09259d29e43a861acb29fe9" kindref="member" tooltip="The list of Tool objects detected in this frame that are held by this hand, given in arbitrary order...">tools</ref>()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref>(LeapJNI.Hand_tools(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a338bf536f09a445af8698fe7e83b8eaa" kindref="member" tooltip="The Tool object with the specified ID held by this hand.">tool</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref>(LeapJNI.Hand_tool(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"/></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1afffef90b815fed26a340743529c06dd1" kindref="member" tooltip="The center position of the palm in millimeters from the Leap origin.">palmPosition</ref>()<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Hand_palmPosition(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1adc6d31986f672333c26e6d57f90205eb" kindref="member" tooltip="The rate of change of the palm position in millimeters/second.">palmVelocity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Hand_palmVelocity(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"/></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a7c1c7235ed4862e4d734d76349e35169" kindref="member" tooltip="The normal vector to the palm.">palmNormal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Hand_palmNormal(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a717b65759c51018ee9f68ac15f9cd148" kindref="member" tooltip="The direction from the palm position toward the fingers.">direction</ref>()<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Hand_direction(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a7bd24ab161e5291abd466453a8c58cc8" kindref="member" tooltip="The center of a sphere fit to the curvature of this hand.">sphereCenter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Hand_sphereCenter(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"/></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a720d093f7c2855cfee31310b02742a3a" kindref="member" tooltip="The radius of a sphere fit to the curvature of this hand.">sphereRadius</ref>()<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Hand_sphereRadius(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"/></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a6a6cda94ce7e5952f036e52e3f217ec5" kindref="member" tooltip="The change of position of this hand between the current frame and the specified frame.">translation</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Hand_translation(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"/></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a62ee64b2c9d3fd5684f5fb3f5d7055a5" kindref="member" tooltip="The axis of rotation derived from the change in orientation of this hand, and any associated fingers ...">rotationAxis</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Hand_rotationAxis(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"/></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1ab2fb02d04a8a2b4867bd0125401c234f" kindref="member" tooltip="The angle of rotation around the rotation axis derived from the change in orientation of this hand...">rotationAngle</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Hand_rotationAngle__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"/></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1ab2fb02d04a8a2b4867bd0125401c234f" kindref="member" tooltip="The angle of rotation around the rotation axis derived from the change in orientation of this hand...">rotationAngle</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>axis)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Hand_rotationAngle__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(axis),<sp/>axis);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"/></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a4c320c5331e950c8ec0bf86080356501" kindref="member" tooltip="The transform matrix expressing the rotation derived from the change in orientation of this hand...">rotationMatrix</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref>(LeapJNI.Hand_rotationMatrix(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"/></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a6253f8161a8bf73c3958aa75f721aef0" kindref="member" tooltip="The scale factor derived from this hand&amp;#39;s motion between the current frame and the specified frame...">scaleFactor</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/>sinceFrame)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Hand_scaleFactor(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>.getCPtr(sinceFrame),<sp/>sinceFrame);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"/></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a81361b9b0f4b6e7e847604cc6653a55c" kindref="member" tooltip="Reports whether this is a valid Hand object.">isValid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Hand_isValid(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"/></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a8f22298a8593dca67e7ef7b4fa0bf80f" kindref="member" tooltip="Returns an invalid Hand object.">invalid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1ac4ffbfccb689e551f6746d779cdd7de2" kindref="member" tooltip="Constructs a Hand object.">Hand</ref>(LeapJNI.Hand_invalid(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"/></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1aafef9bed01f929a9f758019234191184" kindref="member" tooltip="Compare Hand object equality.">equals</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Hand_equals(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"/></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_1a6c2f2f399bb6179b4156549d2f436eaa" kindref="member" tooltip="A string containing a brief, human readable description of the Hand object.">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Hand_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"/></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Hand.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_hand_list_8java" kind="file">
    <compoundname>HandList.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" prot="public">com::leapmotion::leap::HandList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1_1_hand_list_iterator" prot="public">com::leapmotion::leap::HandList::HandListIterator</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="17" refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>implements<sp/>Iterable&lt;Hand&gt;<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a668ad32526f770bc4f7aad33b00a1309" kindref="member" tooltip="Constructs an empty list of hands.">HandList</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.HandList_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_HandList(swigCPtr);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HandListIterator<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;Hand&gt;<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>hasNext()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1af341a1bfe518816cb11592410c6141e2" kindref="member" tooltip="Returns the number of hands in this list.">count</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref><sp/>next()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(index++);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;<ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref>&gt;<sp/>iterator()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HandListIterator();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a668ad32526f770bc4f7aad33b00a1309" kindref="member" tooltip="Constructs an empty list of hands.">HandList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_HandList(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1af341a1bfe518816cb11592410c6141e2" kindref="member" tooltip="Returns the number of hands in this list.">count</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.HandList_count(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1ae36df85bad1eb89b4cdd813968982796" kindref="member" tooltip="Reports whether the list is empty.">empty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.HandList_empty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref>(LeapJNI.HandList_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a695dd12e673a0808095e28b53091c27b" kindref="member" tooltip="Appends the members of the specifed HandList to this HandList.">append</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list_1a668ad32526f770bc4f7aad33b00a1309" kindref="member" tooltip="Constructs an empty list of hands.">HandList</ref>(LeapJNI.HandList_append(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand_list" kindref="compound" tooltip="The HandList class represents a list of Hand objects.">HandList</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/HandList.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_int32_array_8java" kind="file">
    <compoundname>Int32Array.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_int32_array" prot="public">com::leapmotion::leap::Int32Array</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Int32Array<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>Int32Array(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(Int32Array<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Int32Array(swigCPtr);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Int32Array()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Int32Array__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Int32Array(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Int32Array__SWIG_1(n),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Int32Array_size(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>capacity()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Int32Array_capacity(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Int32Array_reserve(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isEmpty()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Int32Array_isEmpty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Int32Array_clear(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Int32Array_add(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Int32Array_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Int32Array_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i,<sp/>val);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Int32Array.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_interface_8java" kind="file">
    <compoundname>Interface.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_interface" prot="public">com::leapmotion::leap::Interface</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Interface<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>Interface(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(Interface<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UnsupportedOperationException(</highlight><highlight class="stringliteral">"C++<sp/>destructor<sp/>does<sp/>not<sp/>have<sp/>public<sp/>access"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Interface.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_key_tap_gesture_8java" kind="file">
    <compoundname>KeyTapGesture.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" prot="public">com::leapmotion::leap::KeyTapGesture</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="30" refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound" tooltip="The KeyTapGesture class represents a tapping gesture by a finger or tool.">KeyTapGesture</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1ad54b78d9498062467e78d1c80861fcca" kindref="member" tooltip="Constructs a new KeyTapGesture object.">KeyTapGesture</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.KeyTapGesture_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture" kindref="compound" tooltip="The KeyTapGesture class represents a tapping gesture by a finger or tool.">KeyTapGesture</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_KeyTapGesture(swigCPtr);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1abc1c883ed18f1a3dc34467c87ca1525c" kindref="member" tooltip="The key tap gesture type.">classType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type.swigToEnum(LeapJNI.KeyTapGesture_classType());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1ad54b78d9498062467e78d1c80861fcca" kindref="member" tooltip="Constructs a new KeyTapGesture object.">KeyTapGesture</ref>()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_KeyTapGesture__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1ad54b78d9498062467e78d1c80861fcca" kindref="member" tooltip="Constructs a new KeyTapGesture object.">KeyTapGesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_KeyTapGesture__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.getCPtr(rhs),<sp/>rhs),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1a1dfcb2c95a4a938088d1673b1ce509c8" kindref="member" tooltip="The position where the key tap is registered.">position</ref>()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.KeyTapGesture_position(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1aac4f485db17eaf4c7c12a000305c5ad3" kindref="member" tooltip="The direction of finger tip motion.">direction</ref>()<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.KeyTapGesture_direction(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1adc4960b3b5a79e4ddda6e732bdf84936" kindref="member" tooltip="The progess value is always 1.0 for a key tap gesture.">progress</ref>()<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.KeyTapGesture_progress(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_key_tap_gesture_1af69aa682632c33ab53b47edaddc0bf05" kindref="member" tooltip="The finger performing the key tap gesture.">pointable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>(LeapJNI.KeyTapGesture_pointable(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"/></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/KeyTapGesture.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_leap_8java" kind="file">
    <compoundname>Leap.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_leap" prot="public">com::leapmotion::leap::Leap</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Leap<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Leap.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_leap_j_n_i_8java" kind="file">
    <compoundname>LeapJNI.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_leap_j_n_i" prot="public">com::leapmotion::leap::LeapJNI</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LeapJNI<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_BoolArray__SWIG_0();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_BoolArray__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>BoolArray_size(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>BoolArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>BoolArray_capacity(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>BoolArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoolArray_reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>BoolArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>BoolArray_isEmpty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>BoolArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoolArray_clear(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>BoolArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoolArray_add(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>BoolArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>BoolArray_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>BoolArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoolArray_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>BoolArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_BoolArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Int32Array__SWIG_0();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Int32Array__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Int32Array_size(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Int32Array<sp/>jarg1_);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Int32Array_capacity(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Int32Array<sp/>jarg1_);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Int32Array_reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Int32Array<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Int32Array_isEmpty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Int32Array<sp/>jarg1_);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Int32Array_clear(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Int32Array<sp/>jarg1_);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Int32Array_add(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Int32Array<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Int32Array_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Int32Array<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Int32Array_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Int32Array<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Int32Array(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_UInt32Array__SWIG_0();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_UInt32Array__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>UInt32Array_size(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>UInt32Array<sp/>jarg1_);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>UInt32Array_capacity(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>UInt32Array<sp/>jarg1_);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UInt32Array_reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>UInt32Array<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>UInt32Array_isEmpty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>UInt32Array<sp/>jarg1_);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UInt32Array_clear(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>UInt32Array<sp/>jarg1_);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UInt32Array_add(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>UInt32Array<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>UInt32Array_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>UInt32Array<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UInt32Array_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>UInt32Array<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_UInt32Array(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_FloatArray__SWIG_0();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_FloatArray__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>FloatArray_size(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FloatArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>FloatArray_capacity(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FloatArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FloatArray_reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FloatArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>FloatArray_isEmpty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FloatArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FloatArray_clear(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FloatArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FloatArray_add(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FloatArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FloatArray_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FloatArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FloatArray_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FloatArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_FloatArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_DoubleArray__SWIG_0();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_DoubleArray__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>DoubleArray_size(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>DoubleArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>DoubleArray_capacity(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>DoubleArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoubleArray_reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>DoubleArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>DoubleArray_isEmpty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>DoubleArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoubleArray_clear(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>DoubleArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoubleArray_add(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>DoubleArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DoubleArray_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>DoubleArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoubleArray_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>DoubleArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_DoubleArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_StringArray__SWIG_0();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_StringArray__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>StringArray_size(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>StringArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>StringArray_capacity(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>StringArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StringArray_reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>StringArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>StringArray_isEmpty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>StringArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StringArray_clear(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>StringArray<sp/>jarg1_);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StringArray_add(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>StringArray<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>StringArray_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>StringArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StringArray_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>StringArray<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2,<sp/>String<sp/>jarg3);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_StringArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>System.loadLibrary(</highlight><highlight class="stringliteral">"LeapJava"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(UnsatisfiedLinkError<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>System.err.println(</highlight><highlight class="stringliteral">"Native<sp/>code<sp/>library<sp/>failed<sp/>to<sp/>load.<sp/>\n"</highlight><highlight class="normal"><sp/>+<sp/>e);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>System.exit(1);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Vector__SWIG_0();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Vector__SWIG_1(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Vector__SWIG_2(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_zero();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_xAxis();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_yAxis();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_zAxis();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_left();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_right();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_down();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_up();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_forward();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_backward();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_magnitude(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_magnitudeSquared(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_distanceTo(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_angleTo(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_pitch(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_yaw(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_roll(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_dot(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_cross(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_normalized(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_opposite(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_plus(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_minus(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_times(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Vector_divide(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Vector_toString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Vector_equals(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Vector_isValid(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vector_x_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_x_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vector_y_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_y_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Vector_z_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Vector_z_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Vector(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Matrix__SWIG_0();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Matrix__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Matrix__SWIG_2(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg3,<sp/>Vector<sp/>jarg3_);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Matrix__SWIG_3(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg3,<sp/>Vector<sp/>jarg3_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg4,<sp/>Vector<sp/>jarg4_);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Matrix__SWIG_4(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Matrix__SWIG_5(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Vector<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg2,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg3,<sp/>Vector<sp/>jarg3_);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Matrix_identity();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Matrix_setRotation(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Matrix_transformPoint(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Matrix_transformDirection(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Matrix_rigidInverse(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Matrix_times(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Matrix<sp/>jarg2_);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Matrix_equals(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Matrix<sp/>jarg2_);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Matrix_toString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Matrix_xBasis_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Matrix_xBasis_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Matrix_yBasis_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Matrix_yBasis_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Matrix_zBasis_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Matrix_zBasis_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Matrix_origin_set(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Matrix_origin_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Matrix<sp/>jarg1_);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Matrix(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Pointable();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Pointable_id(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Pointable_frame(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Pointable_hand(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Pointable_tipPosition(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Pointable_tipVelocity(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Pointable_direction(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Pointable_width(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Pointable_length(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Pointable_isFinger(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Pointable_isTool(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Pointable_isValid(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Pointable_invalid();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Pointable_equals(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Pointable<sp/>jarg2_);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Pointable_toString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Pointable(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Finger__SWIG_0();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Finger__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Finger_invalid();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Finger_toString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Finger<sp/>jarg1_);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Finger(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Tool__SWIG_0();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Tool__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Pointable<sp/>jarg1_);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Tool_invalid();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Tool_toString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Tool<sp/>jarg1_);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Tool(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Hand();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Hand_id(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_frame(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_pointables(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_pointable(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_fingers(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_finger(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_tools(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_tool(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_palmPosition(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_palmVelocity(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_palmNormal(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_direction(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_sphereCenter(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Hand_sphereRadius(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_translation(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_rotationAxis(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Hand_rotationAngle__SWIG_0(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Hand_rotationAngle__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg3,<sp/>Vector<sp/>jarg3_);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_rotationMatrix(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Hand_scaleFactor(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Hand_isValid(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_invalid();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Hand_equals(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Hand<sp/>jarg2_);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Hand_toString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Hand<sp/>jarg1_);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Hand(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Gesture__SWIG_0();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Gesture__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Gesture_type(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Gesture_state(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Gesture_id(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Gesture_duration(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Gesture_durationSeconds(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Gesture_frame(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Gesture_hands(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Gesture_pointables(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Gesture_isValid(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Gesture_equals(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Gesture<sp/>jarg2_);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Gesture_toString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Gesture_invalid();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Gesture(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SwipeGesture_classType();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_SwipeGesture__SWIG_0();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_SwipeGesture__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SwipeGesture_startPosition(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>SwipeGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SwipeGesture_position(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>SwipeGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SwipeGesture_direction(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>SwipeGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>SwipeGesture_speed(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>SwipeGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SwipeGesture_pointable(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>SwipeGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_SwipeGesture(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CircleGesture_classType();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_CircleGesture__SWIG_0();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_CircleGesture__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>CircleGesture_center(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>CircleGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>CircleGesture_normal(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>CircleGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CircleGesture_progress(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>CircleGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CircleGesture_radius(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>CircleGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>CircleGesture_pointable(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>CircleGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_CircleGesture(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScreenTapGesture_classType();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_ScreenTapGesture__SWIG_0();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_ScreenTapGesture__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ScreenTapGesture_position(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenTapGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ScreenTapGesture_direction(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenTapGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ScreenTapGesture_progress(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenTapGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ScreenTapGesture_pointable(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenTapGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_ScreenTapGesture(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>KeyTapGesture_classType();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_KeyTapGesture__SWIG_0();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_KeyTapGesture__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Gesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>KeyTapGesture_position(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>KeyTapGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>KeyTapGesture_direction(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>KeyTapGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>KeyTapGesture_progress(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>KeyTapGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>KeyTapGesture_pointable(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>KeyTapGesture<sp/>jarg1_);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_KeyTapGesture(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Screen();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Screen_id(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_intersect__SWIG_0(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Pointable<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>jarg3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg4);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_intersect__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Pointable<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_intersect__SWIG_2(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg3,<sp/>Vector<sp/>jarg3_,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>jarg4,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg5);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_intersect__SWIG_3(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg3,<sp/>Vector<sp/>jarg3_,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>jarg4);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_project__SWIG_0(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>jarg3,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jarg4);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_project__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_horizontalAxis(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_verticalAxis(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_bottomLeftCorner(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_normal(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Screen_widthPixels(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Screen_heightPixels(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Screen_distanceToPoint(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Screen_isValid(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_invalid();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Screen_equals(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Screen<sp/>jarg2_);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Screen_toString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Screen<sp/>jarg1_);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Screen(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_PointableList();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PointableList_count(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>PointableList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>PointableList_empty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>PointableList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>PointableList_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>PointableList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>PointableList_append__SWIG_0(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>PointableList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>PointableList<sp/>jarg2_);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>PointableList_append__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>PointableList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>FingerList<sp/>jarg2_);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>PointableList_append__SWIG_2(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>PointableList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>ToolList<sp/>jarg2_);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_PointableList(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_FingerList();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FingerList_count(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FingerList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>FingerList_empty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FingerList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>FingerList_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FingerList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>FingerList_append(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>FingerList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>FingerList<sp/>jarg2_);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_FingerList(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_ToolList();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ToolList_count(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ToolList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>ToolList_empty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ToolList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ToolList_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ToolList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ToolList_append(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ToolList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>ToolList<sp/>jarg2_);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_ToolList(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_HandList();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HandList_count(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>HandList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>HandList_empty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>HandList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>HandList_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>HandList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>HandList_append(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>HandList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>HandList<sp/>jarg2_);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_HandList(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_GestureList();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GestureList_count(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>GestureList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>GestureList_empty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>GestureList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GestureList_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>GestureList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GestureList_append(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>GestureList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>GestureList<sp/>jarg2_);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_GestureList(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_ScreenList();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ScreenList_count(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>ScreenList_empty(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenList<sp/>jarg1_);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ScreenList_get(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ScreenList_closestScreenHit__SWIG_0(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Pointable<sp/>jarg2_);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ScreenList_closestScreenHit__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg3,<sp/>Vector<sp/>jarg3_);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ScreenList_closestScreen(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>ScreenList<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Vector<sp/>jarg2_);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_ScreenList(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Frame();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_id(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_timestamp(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_hands(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_hand(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_pointables(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_pointable(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_fingers(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_finger(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_tools(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_tool(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_gesture(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_gestures__SWIG_0(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_gestures__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_translation(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_rotationAxis(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Frame_rotationAngle__SWIG_0(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Frame_rotationAngle__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg3,<sp/>Vector<sp/>jarg3_);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_rotationMatrix(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Frame_scaleFactor(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Frame_isValid(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_invalid();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Frame_equals(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Frame<sp/>jarg2_);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Frame_toString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Frame<sp/>jarg1_);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Frame(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Config();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Config_type(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Config_isArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Config_getBool(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Config_getInt32(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Config_getInt64(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Config_getUInt32(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>java.math.BigInteger<sp/>Config_getUInt64(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Config_getFloat(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Config_getDouble(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/>String<sp/>Config_getString(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Config_getBoolArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Config_getInt32Array(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Config_getUInt32Array(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Config_getFloatArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Config_getDoubleArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Config_getStringArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Config<sp/>jarg1_,<sp/>String<sp/>jarg2);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Config(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Controller__SWIG_0();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Controller(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Controller__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Controller_isConnected(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Controller_addListener(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Listener<sp/>jarg2_);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Controller_removeListener(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Listener<sp/>jarg2_);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Controller_frame__SWIG_0(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Controller_frame__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Controller_config(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Controller_calibratedScreens(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Controller_enableGesture__SWIG_0(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>jarg3);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Controller_enableGesture__SWIG_1(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>Controller_isGestureEnabled(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Controller<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jarg2);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>new_Listener();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delete_Listener(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onInit(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onInitSwigExplicitListener(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onConnect(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onConnectSwigExplicitListener(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onDisconnect(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onDisconnectSwigExplicitListener(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onExit(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onExitSwigExplicitListener(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onFrame(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_onFrameSwigExplicitListener(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1,<sp/>Listener<sp/>jarg1_,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg2,<sp/>Controller<sp/>jarg2_);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_director_connect(Listener<sp/>obj,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cptr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>mem_own,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>weak_global);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Listener_change_ownership(Listener<sp/>obj,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cptr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>take_or_release);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Pointable_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Finger_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Tool_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Hand_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Gesture_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SwipeGesture_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>CircleGesture_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ScreenTapGesture_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>KeyTapGesture_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Screen_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>PointableList_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>FingerList_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ToolList_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>HandList_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GestureList_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ScreenList_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Frame_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Config_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Controller_SWIGUpcast(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jarg1);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"/></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener_onInit(Listener<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.onInit(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Controller(arg0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener_onConnect(Listener<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.onConnect(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Controller(arg0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener_onDisconnect(Listener<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.onDisconnect(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Controller(arg0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener_onExit(Listener<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.onExit(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Controller(arg0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener_onFrame(Listener<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.onFrame(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Controller(arg0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"/></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>native<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swig_module_init();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>swig_module_init();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/LeapJNI.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_listener_8java" kind="file">
    <compoundname>Listener.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_listener" prot="public">com::leapmotion::leap::Listener</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="24" refid="classcom_1_1leapmotion_1_1leap_1_1_listener" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1ae7f2e02d1f441c8f9c0868168106c84b" kindref="member" tooltip="Constructs a Listener object.">Listener</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Listener(swigCPtr);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swigDirectorDisconnect()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swigReleaseOwnership()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Listener_change_ownership(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>swigCPtr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swigTakeOwnership()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Listener_change_ownership(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>swigCPtr,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1ae7f2e02d1f441c8f9c0868168106c84b" kindref="member" tooltip="Constructs a Listener object.">Listener</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Listener(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Listener_director_connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>swigCPtr,<sp/>swigCMemOwn,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a9350b36122e690e20078ba284701bed0" kindref="member" tooltip="Called once, when this Listener object is newly added to a Controller.">onInit</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onInit(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onInitSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a46b9ec2670695d44d4e9ddf77c8301c3" kindref="member" tooltip="Called when the Controller object connects to the Leap software, or when this Listener object is adde...">onConnect</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onConnect(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onConnectSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a860bf64a24bcb4ac5bce4e8d35c48783" kindref="member" tooltip="Called when the Controller object disconnects from the Leap software.">onDisconnect</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onDisconnect(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onDisconnectSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1a78fa3b1a0850e3d8410b7200f3d813af" kindref="member" tooltip="Called when this Listener object is removed from the Controller or the Controller instance is destroy...">onExit</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onExit(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onExitSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"/></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener_1afb0bdc73f5b4edf164a4b1134557f975" kindref="member" tooltip="Called when a new frame of hand and finger tracking data is available.">onFrame</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getClass()<sp/>==<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_listener" kindref="compound" tooltip="The Listener class defines a set of callback functions that you can override in a subclass to respond...">Listener</ref>.class)<sp/>LeapJNI.Listener_onFrame(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>LeapJNI.Listener_onFrameSwigExplicitListener(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_controller" kindref="compound" tooltip="The Controller class is your main interface to the Leap device.">Controller</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Listener.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_matrix_8java" kind="file">
    <compoundname>Matrix.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" prot="public">com::leapmotion::leap::Matrix</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="22" refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Matrix(swigCPtr);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>toArray3x3(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>output[0]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[1]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[2]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>output[3]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[4]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[5]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>output[6]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[7]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[8]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/>toArray3x3(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>output[0]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[1]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[2]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>output[3]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[4]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[5]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>output[6]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[7]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[8]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>toArray3x3()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toArray3x3(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[9]);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>toArray4x4(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>output[0]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[1]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[2]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();<sp/>output[3]<sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>output[4]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[5]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[6]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();<sp/>output[7]<sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>output[8]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[9]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[10]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();<sp/>output[11]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>output[12]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a93ef0ca7ea36d2cea05025b57a78557c" kindref="member" tooltip="The translation factors for all three axes.">getOrigin</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[13]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a93ef0ca7ea36d2cea05025b57a78557c" kindref="member" tooltip="The translation factors for all three axes.">getOrigin</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[14]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a93ef0ca7ea36d2cea05025b57a78557c" kindref="member" tooltip="The translation factors for all three axes.">getOrigin</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();<sp/>output[15]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/>toArray4x4(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/>output)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>output[0]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[1]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[2]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();<sp/>output[3]<sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>output[4]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[5]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[6]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();<sp/>output[7]<sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>output[8]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[9]<sp/><sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[10]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();<sp/>output[11]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>output[12]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a93ef0ca7ea36d2cea05025b57a78557c" kindref="member" tooltip="The translation factors for all three axes.">getOrigin</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>();<sp/>output[13]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a93ef0ca7ea36d2cea05025b57a78557c" kindref="member" tooltip="The translation factors for all three axes.">getOrigin</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>();<sp/>output[14]<sp/>=<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a93ef0ca7ea36d2cea05025b57a78557c" kindref="member" tooltip="The translation factors for all three axes.">getOrigin</ref>().<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>();<sp/>output[15]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>toArray4x4()<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toArray4x4(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[16]);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Matrix__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Matrix__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>_xBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>_yBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>_zBasis)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Matrix__SWIG_2(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(_xBasis),<sp/>_xBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(_yBasis),<sp/>_yBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(_zBasis),<sp/>_zBasis),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>_xBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>_yBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>_zBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>_origin)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Matrix__SWIG_3(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(_xBasis),<sp/>_xBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(_yBasis),<sp/>_yBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(_zBasis),<sp/>_zBasis,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(_origin),<sp/>_origin),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>axis,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angleRadians)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Matrix__SWIG_4(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(axis),<sp/>axis,<sp/>angleRadians),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>axis,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angleRadians,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>translation)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Matrix__SWIG_5(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(axis),<sp/>axis,<sp/>angleRadians,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(translation),<sp/>translation),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1ae913d8d9ae2a7b3fd392d377aa857b52" kindref="member" tooltip="Returns the identity matrix specifying no translation, rotation, and scale.">identity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>(LeapJNI.Matrix_identity(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a9bfabbe6d014993280fb3d32567f6566" kindref="member" tooltip="Sets this transformation matrix to represent a rotation around the specified vector.">setRotation</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>_axis,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angleRadians)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Matrix_setRotation(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(_axis),<sp/>_axis,<sp/>angleRadians);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a5d53f3c89146984ecfce93656a79dd27" kindref="member" tooltip="Transforms a vector with this matrix by transforming its rotation, scale, and translation.">transformPoint</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Matrix_transformPoint(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(in),<sp/>in),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"/></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1afb281870b00541a564e65d75bc18d563" kindref="member" tooltip="Transforms a vector with this matrix by transforming its rotation and scale only.">transformDirection</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Matrix_transformDirection(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(in),<sp/>in),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"/></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1afa9c1bd198e2c79335102f984803dd04" kindref="member" tooltip="Performs a matrix inverse if the matrix consists entirely of rigid transformations (translations and ...">rigidInverse</ref>()<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>(LeapJNI.Matrix_rigidInverse(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"/></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2310b676acccf5f1ae1c5b66f3ba1cf1" kindref="member" tooltip="Multiply transform matrices.">times</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3fb1f055f321905be7c70537103fe947" kindref="member" tooltip="Constructs an identity transformation matrix.">Matrix</ref>(LeapJNI.Matrix_times(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a11a92236fe5995059950a6750d9b857d" kindref="member" tooltip="Compare Matrix equality component-wise.">equals</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Matrix_equals(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix" kindref="compound" tooltip="The Matrix struct represents a transformation matrix.">Matrix</ref>.getCPtr(other),<sp/>other);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"/></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a9527c7aed8be36db3ca94b7e55564cec" kindref="member" tooltip="Write the matrix to a string in a human readable format.">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Matrix_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"/></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a91a2189aed5e3bbc0ed194527003cc74" kindref="member" tooltip="The rotation and scale factors for the x-axis.">setXBasis</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Matrix_xBasis_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(value),<sp/>value);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a408d44b653cd6ce1c7b23bb7289dc699" kindref="member" tooltip="The rotation and scale factors for the x-axis.">getXBasis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr<sp/>=<sp/>LeapJNI.Matrix_xBasis_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cPtr<sp/>==<sp/>0)<sp/>?<sp/>null<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(cPtr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"/></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a0830cf554cf505a9e8f702c39c5d2921" kindref="member" tooltip="The rotation and scale factors for the y-axis.">setYBasis</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Matrix_yBasis_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(value),<sp/>value);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a3d75372a823d8708bde73553e8591db4" kindref="member" tooltip="The rotation and scale factors for the y-axis.">getYBasis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr<sp/>=<sp/>LeapJNI.Matrix_yBasis_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cPtr<sp/>==<sp/>0)<sp/>?<sp/>null<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(cPtr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aaa0663d2830fd305ed802cce9eb09b66" kindref="member" tooltip="The rotation and scale factors for the z-axis.">setZBasis</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Matrix_zBasis_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(value),<sp/>value);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a2fa788e89b2865fc502d73ce71350316" kindref="member" tooltip="The rotation and scale factors for the z-axis.">getZBasis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr<sp/>=<sp/>LeapJNI.Matrix_zBasis_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cPtr<sp/>==<sp/>0)<sp/>?<sp/>null<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(cPtr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1aaadcba5062752797ca57e4ff85ceb824" kindref="member" tooltip="The translation factors for all three axes.">setOrigin</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Matrix_origin_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(value),<sp/>value);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"/></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_matrix_1a93ef0ca7ea36d2cea05025b57a78557c" kindref="member" tooltip="The translation factors for all three axes.">getOrigin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr<sp/>=<sp/>LeapJNI.Matrix_origin_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cPtr<sp/>==<sp/>0)<sp/>?<sp/>null<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(cPtr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"/></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Matrix.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_pointable_8java" kind="file">
    <compoundname>Pointable.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" prot="public">com::leapmotion::leap::Pointable</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="28" refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af2d1ea38d8b44a706cc86c32769b7cb5" kindref="member" tooltip="Constructs a Pointable object.">Pointable</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Pointable_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Pointable(swigCPtr);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af2d1ea38d8b44a706cc86c32769b7cb5" kindref="member" tooltip="Constructs a Pointable object.">Pointable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Pointable(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a46e7a47f1aa97fb073b61bc6eb1b2031" kindref="member" tooltip="A unique ID assigned to this Pointable object, whose value remains the same across consecutive frames...">id</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Pointable_id(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a0fc9745b4aa3f0284880647b4b482612" kindref="member" tooltip="The Frame associated with this Pointable object.">frame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_frame" kindref="compound" tooltip="The Frame class represents a set of hand and finger tracking data detected in a single frame...">Frame</ref>(LeapJNI.Pointable_frame(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a10e06f1db3177a259a5e0966fb361e7a" kindref="member" tooltip="The Hand associated with this finger or tool.">hand</ref>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_hand" kindref="compound" tooltip="The Hand class reports the physical characteristics of a detected hand.">Hand</ref>(LeapJNI.Pointable_hand(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a34729c90d3c4b38a6f5994ae1ad14ee2" kindref="member" tooltip="The tip position in millimeters from the Leap origin.">tipPosition</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Pointable_tipPosition(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af7389a76398c7928d339c73f5af02d9e" kindref="member" tooltip="The rate of change of the tip position in millimeters/second.">tipVelocity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Pointable_tipVelocity(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1affbc3d564e74967addf273eb7006e7ae" kindref="member" tooltip="The direction in which this finger or tool is pointing.">direction</ref>()<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Pointable_direction(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1abba55cfb2de52af88b5a1faec2b1923b" kindref="member" tooltip="The estimated width of the finger or tool in millimeters.">width</ref>()<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Pointable_width(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"/></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1aa8f442aa58b8694384327f29111a0c41" kindref="member" tooltip="The estimated length of the finger or tool in millimeters.">length</ref>()<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Pointable_length(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af8a0d3d9dc96d7d86545e604f41cb6af" kindref="member" tooltip="Whether or not the Pointable is believed to be a finger.">isFinger</ref>()<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Pointable_isFinger(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a1a939138ab33f2d76e0aebdbdc28861e" kindref="member" tooltip="Whether or not the Pointable is believed to be a tool.">isTool</ref>()<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Pointable_isTool(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1ac2a70d69d57a21766312bb0b42fc114a" kindref="member" tooltip="Reports whether this is a valid Pointable object.">isValid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Pointable_isValid(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a8d83e3b802c19f19a0f517b34095bc22" kindref="member" tooltip="Returns an invalid Pointable object.">invalid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1af2d1ea38d8b44a706cc86c32769b7cb5" kindref="member" tooltip="Constructs a Pointable object.">Pointable</ref>(LeapJNI.Pointable_invalid(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"/></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a39b00dc8ec7e54c5e07e591b38db29cf" kindref="member" tooltip="Compare Pointable object equality.">equals</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Pointable_equals(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_1a91c99f0961d34be8d67ea4124ca238c5" kindref="member" tooltip="A string containing a brief, human readable description of the Pointable object.">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Pointable_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"/></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Pointable.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_pointable_list_8java" kind="file">
    <compoundname>PointableList.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" prot="public">com::leapmotion::leap::PointableList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1_1_pointable_list_iterator" prot="public">com::leapmotion::leap::PointableList::PointableListIterator</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="19" refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>implements<sp/>Iterable&lt;Pointable&gt;<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a96265c7491b43c6a72feddec2267f800" kindref="member" tooltip="Constructs an empty list of pointable entities.">PointableList</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.PointableList_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_PointableList(swigCPtr);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PointableListIterator<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;Pointable&gt;<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>hasNext()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1ae801f8eea46b390760c0db493992923f" kindref="member" tooltip="Returns the number of pointable entities in this list.">count</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>next()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(index++);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>&gt;<sp/>iterator()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PointableListIterator();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a96265c7491b43c6a72feddec2267f800" kindref="member" tooltip="Constructs an empty list of pointable entities.">PointableList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_PointableList(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1ae801f8eea46b390760c0db493992923f" kindref="member" tooltip="Returns the number of pointable entities in this list.">count</ref>()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.PointableList_count(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a5efc8624ea6be2325c385f5e3d95bae6" kindref="member" tooltip="Reports whether the list is empty.">empty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.PointableList_empty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>(LeapJNI.PointableList_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a85116f43e8731bf1e1f0842eff5388be" kindref="member" tooltip="Appends the members of the specifed PointableList to this PointableList.">append</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a96265c7491b43c6a72feddec2267f800" kindref="member" tooltip="Constructs an empty list of pointable entities.">PointableList</ref>(LeapJNI.PointableList_append__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"/></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a85116f43e8731bf1e1f0842eff5388be" kindref="member" tooltip="Appends the members of the specifed PointableList to this PointableList.">append</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a96265c7491b43c6a72feddec2267f800" kindref="member" tooltip="Constructs an empty list of pointable entities.">PointableList</ref>(LeapJNI.PointableList_append__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_finger_list" kindref="compound" tooltip="The FingerList class represents a list of Finger objects.">FingerList</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list" kindref="compound" tooltip="The PointableList class represents a list of Pointable objects.">PointableList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a85116f43e8731bf1e1f0842eff5388be" kindref="member" tooltip="Appends the members of the specifed PointableList to this PointableList.">append</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable_list_1a96265c7491b43c6a72feddec2267f800" kindref="member" tooltip="Constructs an empty list of pointable entities.">PointableList</ref>(LeapJNI.PointableList_append__SWIG_2(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/PointableList.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_screen_8java" kind="file">
    <compoundname>Screen.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_screen" prot="public">com::leapmotion::leap::Screen</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="36" refid="classcom_1_1leapmotion_1_1leap_1_1_screen" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a73d3f48363688cf3f2a7990a62ccfb6a" kindref="member" tooltip="Constructs a Screen object.">Screen</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Screen_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Screen(swigCPtr);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a73d3f48363688cf3f2a7990a62ccfb6a" kindref="member" tooltip="Constructs a Screen object.">Screen</ref>()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Screen(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a7e259d19686e894620125b3db791e04b" kindref="member" tooltip="A unique identifier for this screen based on the screen information in the configuration.">id</ref>()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Screen_id(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a4b8a8b37c26147deff0707112123bafe" kindref="member" tooltip="Returns the intersection between this screen and a ray projecting from a Pointable object...">intersect</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>pointable,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>normalize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>clampRatio)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_intersect__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>.getCPtr(pointable),<sp/>pointable,<sp/>normalize,<sp/>clampRatio),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"/></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a4b8a8b37c26147deff0707112123bafe" kindref="member" tooltip="Returns the intersection between this screen and a ray projecting from a Pointable object...">intersect</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>pointable,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>normalize)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_intersect__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>.getCPtr(pointable),<sp/>pointable,<sp/>normalize),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"/></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a4b8a8b37c26147deff0707112123bafe" kindref="member" tooltip="Returns the intersection between this screen and a ray projecting from a Pointable object...">intersect</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>position,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>direction,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>normalize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>clampRatio)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_intersect__SWIG_2(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(position),<sp/>position,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(direction),<sp/>direction,<sp/>normalize,<sp/>clampRatio),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"/></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a4b8a8b37c26147deff0707112123bafe" kindref="member" tooltip="Returns the intersection between this screen and a ray projecting from a Pointable object...">intersect</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>position,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>direction,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>normalize)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_intersect__SWIG_3(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(position),<sp/>position,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(direction),<sp/>direction,<sp/>normalize),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"/></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a117a8cdd78d4bb7c553b5bfde35f0c23" kindref="member" tooltip="Returns the projection from the specified position onto this screen.">project</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>position,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>normalize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>clampRatio)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_project__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(position),<sp/>position,<sp/>normalize,<sp/>clampRatio),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"/></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a117a8cdd78d4bb7c553b5bfde35f0c23" kindref="member" tooltip="Returns the projection from the specified position onto this screen.">project</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>position,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>normalize)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_project__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(position),<sp/>position,<sp/>normalize),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"/></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1adc291ef5b94913e54c4250da15c666dd" kindref="member" tooltip="A Vector representing the horizontal axis of this Screen within the Leap coordinate system...">horizontalAxis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_horizontalAxis(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"/></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a275a06f4572ef4c37a862f705bb21bae" kindref="member" tooltip="A Vector representing the vertical axis of this Screen within the Leap coordinate system...">verticalAxis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_verticalAxis(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"/></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a9d9fc867c67a9e76d62af5108f31367f" kindref="member" tooltip="A Vector representing the bottom left corner of this Screen within the Leap coordinate system...">bottomLeftCorner</ref>()<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_bottomLeftCorner(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"/></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a16c58729697811e93b7656c94a902254" kindref="member" tooltip="A Vector normal to the plane in which this Screen lies.">normal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.Screen_normal(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"/></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a0a307da9d78fd4c7fcbe046df4defc93" kindref="member" tooltip="The horizontal resolution of this screen, in pixels.">widthPixels</ref>()<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Screen_widthPixels(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"/></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1af0430a290919b6c494538a598260ead2" kindref="member" tooltip="The vertical resolution of this screen, in pixels.">heightPixels</ref>()<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Screen_heightPixels(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"/></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a3944427f7ab482cb79cb0cd0fe62d396" kindref="member" tooltip="The shortest distance from the specified point to the plane in which this Screen lies.">distanceToPoint</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>point)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Screen_distanceToPoint(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(point),<sp/>point);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"/></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a8804f80b992b43d46d29e27bfe9be417" kindref="member" tooltip="Reports whether this is a valid Screen object.">isValid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Screen_isValid(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"/></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a59b8a3e73e63fdbb720925c6bd4c52a4" kindref="member" tooltip="Returns an invalid Screen object.">invalid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a73d3f48363688cf3f2a7990a62ccfb6a" kindref="member" tooltip="Constructs a Screen object.">Screen</ref>(LeapJNI.Screen_invalid(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"/></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1ad40b7c54aef7d8bb55caf654b6ac7bdc" kindref="member" tooltip="Compare Screen object equality.">equals</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Screen_equals(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref>.getCPtr(arg0),<sp/>arg0);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"/></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_1a6c4b9dab3eec68cafda31c1d4173ccfb" kindref="member" tooltip="A string containing a brief, human readable description of the Screen object.">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Screen_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"/></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Screen.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_screen_list_8java" kind="file">
    <compoundname>ScreenList.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" prot="public">com::leapmotion::leap::ScreenList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1_1_screen_list_iterator" prot="public">com::leapmotion::leap::ScreenList::ScreenListIterator</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="24" refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound" tooltip="The ScreenList class represents a list of Screen objects.">ScreenList</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>implements<sp/>Iterable&lt;Screen&gt;<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a30c583c3e258baa3177e26d7f79887e1" kindref="member" tooltip="Constructs an empty list of screens.">ScreenList</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.ScreenList_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list" kindref="compound" tooltip="The ScreenList class represents a list of Screen objects.">ScreenList</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_ScreenList(swigCPtr);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ScreenListIterator<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;Screen&gt;<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>hasNext()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a7d571d0f5fa89b3ed8b3d62ffeba4541" kindref="member" tooltip="Returns the number of screens in this list.">count</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref><sp/>next()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(index++);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;<ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref>&gt;<sp/>iterator()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ScreenListIterator();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a30c583c3e258baa3177e26d7f79887e1" kindref="member" tooltip="Constructs an empty list of screens.">ScreenList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_ScreenList(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a7d571d0f5fa89b3ed8b3d62ffeba4541" kindref="member" tooltip="Returns the number of screens in this list.">count</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.ScreenList_count(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1acd0537b800be8ba6eff441d8386cc577" kindref="member" tooltip="Reports whether the list is empty.">empty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.ScreenList_empty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref>(LeapJNI.ScreenList_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a630aba17bdc5610f5f7d1b1def796a3a" kindref="member" tooltip="Gets the closest Screen intercepting a ray projecting from the specified Pointable object...">closestScreenHit</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>pointable)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref>(LeapJNI.ScreenList_closestScreenHit__SWIG_0(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>.getCPtr(pointable),<sp/>pointable),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a630aba17bdc5610f5f7d1b1def796a3a" kindref="member" tooltip="Gets the closest Screen intercepting a ray projecting from the specified Pointable object...">closestScreenHit</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>position,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>direction)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref>(LeapJNI.ScreenList_closestScreenHit__SWIG_1(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(position),<sp/>position,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(direction),<sp/>direction),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_list_1a6826b66fda183d59cb09483c02206d53" kindref="member" tooltip="Gets the Screen closest to the specified position.">closestScreen</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>position)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen" kindref="compound" tooltip="The Screen class represents a computer monitor screen.">Screen</ref>(LeapJNI.ScreenList_closestScreen(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(position),<sp/>position),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"/></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenList.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_screen_tap_gesture_8java" kind="file">
    <compoundname>ScreenTapGesture.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" prot="public">com::leapmotion::leap::ScreenTapGesture</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="30" refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound" tooltip="The ScreenTapGesture class represents a tapping gesture by a finger or tool.">ScreenTapGesture</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1abcee0014d6b4f96f39e95aabbc995d2d" kindref="member" tooltip="Constructs a new ScreenTapGesture object.">ScreenTapGesture</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.ScreenTapGesture_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture" kindref="compound" tooltip="The ScreenTapGesture class represents a tapping gesture by a finger or tool.">ScreenTapGesture</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_ScreenTapGesture(swigCPtr);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a80490fb65cb06fd60171c4dc05deb211" kindref="member" tooltip="The screen tap gesture type.">classType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type.swigToEnum(LeapJNI.ScreenTapGesture_classType());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1abcee0014d6b4f96f39e95aabbc995d2d" kindref="member" tooltip="Constructs a new ScreenTapGesture object.">ScreenTapGesture</ref>()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_ScreenTapGesture__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1abcee0014d6b4f96f39e95aabbc995d2d" kindref="member" tooltip="Constructs a new ScreenTapGesture object.">ScreenTapGesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_ScreenTapGesture__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.getCPtr(rhs),<sp/>rhs),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a516f9d8ad8ccb01eb6b3765239bc0f6d" kindref="member" tooltip="The position where the screen tap is registered.">position</ref>()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.ScreenTapGesture_position(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a036e61e60292e21e750596f091281579" kindref="member" tooltip="The direction of finger tip motion.">direction</ref>()<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.ScreenTapGesture_direction(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a45e92b2d8e4a64989af0da069bf64b39" kindref="member" tooltip="The progess value is always 1.0 for a screen tap gesture.">progress</ref>()<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.ScreenTapGesture_progress(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_screen_tap_gesture_1a615687baa717d64eba11763be949fcbc" kindref="member" tooltip="The finger performing the screen tap gesture.">pointable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>(LeapJNI.ScreenTapGesture_pointable(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ScreenTapGesture.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_string_array_8java" kind="file">
    <compoundname>StringArray.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_string_array" prot="public">com::leapmotion::leap::StringArray</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StringArray<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>StringArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(StringArray<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_StringArray(swigCPtr);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>StringArray()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_StringArray__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>StringArray(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_StringArray__SWIG_1(n),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.StringArray_size(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>capacity()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.StringArray_capacity(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.StringArray_reserve(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isEmpty()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.StringArray_isEmpty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.StringArray_clear(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(String<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.StringArray_add(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.StringArray_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>String<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.StringArray_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i,<sp/>val);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/StringArray.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_swipe_gesture_8java" kind="file">
    <compoundname>SwipeGesture.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" prot="public">com::leapmotion::leap::SwipeGesture</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="24" refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound" tooltip="The SwipeGesture class represents a swiping motion of a finger or tool.">SwipeGesture</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound" tooltip="The SwipeGesture class represents a swiping motion of a finger or tool.">SwipeGesture</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.SwipeGesture_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound" tooltip="The SwipeGesture class represents a swiping motion of a finger or tool.">SwipeGesture</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_SwipeGesture(swigCPtr);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1acde13cfa5590a51e78c798a93504adb3" kindref="member" tooltip="The swipe gesture type.">classType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.Type.swigToEnum(LeapJNI.SwipeGesture_classType());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound" tooltip="The SwipeGesture class represents a swiping motion of a finger or tool.">SwipeGesture</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_SwipeGesture__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture" kindref="compound" tooltip="The SwipeGesture class represents a swiping motion of a finger or tool.">SwipeGesture</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_SwipeGesture__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_gesture" kindref="compound" tooltip="The Gesture class represents a recognized movement by the user.">Gesture</ref>.getCPtr(rhs),<sp/>rhs),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a0528c070f61a70188f235c4f8dcd97f4" kindref="member" tooltip="The position where the swipe began.">startPosition</ref>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.SwipeGesture_startPosition(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1aba4940408797a84d046d90e34741b1e3" kindref="member" tooltip="The current position of the swipe.">position</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.SwipeGesture_position(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1aa81c3633a8d97df4ab22beb9a6f0d8bc" kindref="member" tooltip="The unit direction vector parallel to the swipe motion.">direction</ref>()<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>(LeapJNI.SwipeGesture_direction(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a3f34543ea035064b932946a611b49d3b" kindref="member" tooltip="The swipe speed in mm/second.">speed</ref>()<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.SwipeGesture_speed(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_swipe_gesture_1a91f5ed0c9abfec5d6b7508527217a3c1" kindref="member" tooltip="The finger performing the swipe gesture.">pointable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>(LeapJNI.SwipeGesture_pointable(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"/></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/SwipeGesture.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_tool_8java" kind="file">
    <compoundname>Tool.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_tool" prot="public">com::leapmotion::leap::Tool</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="28" refid="classcom_1_1leapmotion_1_1leap_1_1_tool" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a2ea8c07bf98de7b35b20ec7ffdec14ae" kindref="member" tooltip="Constructs a Tool object.">Tool</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.Tool_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Tool(swigCPtr);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a2ea8c07bf98de7b35b20ec7ffdec14ae" kindref="member" tooltip="Constructs a Tool object.">Tool</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Tool__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a2ea8c07bf98de7b35b20ec7ffdec14ae" kindref="member" tooltip="Constructs a Tool object.">Tool</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref><sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Tool__SWIG_1(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_pointable" kindref="compound" tooltip="The Pointable class reports the physical characteristics of a detected finger or tool.">Pointable</ref>.getCPtr(arg0),<sp/>arg0),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a34fc53c5f731139874bf6ca22033d379" kindref="member" tooltip="Returns an invalid Tool object.">invalid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a2ea8c07bf98de7b35b20ec7ffdec14ae" kindref="member" tooltip="Constructs a Tool object.">Tool</ref>(LeapJNI.Tool_invalid(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_1a11ad726564106e0db85c2bfafc600139" kindref="member" tooltip="A string containing a brief, human readable description of the Tool object.">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Tool_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Tool.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_tool_list_8java" kind="file">
    <compoundname>ToolList.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" prot="public">com::leapmotion::leap::ToolList</innerclass>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1_1_tool_list_iterator" prot="public">com::leapmotion::leap::ToolList::ToolListIterator</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="17" refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>Interface<sp/>implements<sp/>Iterable&lt;Tool&gt;<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ad86416ff619a0cd5f771b9dfed8041f4" kindref="member" tooltip="Constructs an empty list of tools.">ToolList</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>super(LeapJNI.ToolList_SWIGUpcast(cPtr),<sp/>cMemoryOwn);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_ToolList(swigCPtr);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>super.delete();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ToolListIterator<sp/></highlight><highlight class="keyword">implements</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;Tool&gt;<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>hasNext()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a5544908923813bd100ec86dd1e1abd75" kindref="member" tooltip="Returns the number of tools in this list.">count</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref><sp/>next()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(index++);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>java.util.Iterator&lt;<ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref>&gt;<sp/>iterator()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ToolListIterator();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ad86416ff619a0cd5f771b9dfed8041f4" kindref="member" tooltip="Constructs an empty list of tools.">ToolList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_ToolList(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a5544908923813bd100ec86dd1e1abd75" kindref="member" tooltip="Returns the number of tools in this list.">count</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.ToolList_count(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ab5e9ab7903d6e7cc4bae867f1ce70f05" kindref="member" tooltip="Reports whether the list is empty.">empty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.ToolList_empty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool" kindref="compound" tooltip="The Tool class represents a tracked tool.">Tool</ref>(LeapJNI.ToolList_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1a792135109d044e6d0db59908e94f6bd2" kindref="member" tooltip="Appends the members of the specifed ToolList to this ToolList.">append</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list_1ad86416ff619a0cd5f771b9dfed8041f4" kindref="member" tooltip="Constructs an empty list of tools.">ToolList</ref>(LeapJNI.ToolList_append(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_tool_list" kindref="compound" tooltip="The ToolList class represents a list of Tool objects.">ToolList</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/ToolList.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_u_int32_array_8java" kind="file">
    <compoundname>UInt32Array.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_u_int32_array" prot="public">com::leapmotion::leap::UInt32Array</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UInt32Array<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>UInt32Array(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(UInt32Array<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_UInt32Array(swigCPtr);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>UInt32Array()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_UInt32Array__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>UInt32Array(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_UInt32Array__SWIG_1(n),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.UInt32Array_size(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>capacity()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.UInt32Array_capacity(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.UInt32Array_reserve(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isEmpty()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.UInt32Array_isEmpty(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.UInt32Array_clear(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.UInt32Array_add(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.UInt32Array_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.UInt32Array_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i,<sp/>val);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/UInt32Array.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_vector_8java" kind="file">
    <compoundname>Vector.java</compoundname>
    <innerclass refid="classcom_1_1leapmotion_1_1leap_1_1_vector" prot="public">com::leapmotion::leap::Vector</innerclass>
    <innernamespace refid="namespacecom_1_1leapmotion_1_1leap">com::leapmotion::leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.leapmotion.leap;</highlight></codeline>
<codeline lineno="26" refid="classcom_1_1leapmotion_1_1leap_1_1_vector" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>swigCPtr;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>swigCMemOwn;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cPtr,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>cMemoryOwn)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/>cMemoryOwn;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>cPtr;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getCPtr(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>null)<sp/>?<sp/>0<sp/>:<sp/>obj.swigCPtr;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalize()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">synchronized</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCPtr<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigCMemOwn)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swigCMemOwn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeapJNI.delete_Vector(swigCPtr);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swigCPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>toFloatArray()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>{<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>(),<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>(),<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>()};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Vector__SWIG_0(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_z)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Vector__SWIG_1(_x,<sp/>_y,<sp/>_z),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">(LeapJNI.new_Vector__SWIG_2(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(vector),<sp/>vector),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1afbf55f5415064edba5044edd1f208f5b" kindref="member" tooltip="The zero vector: (0, 0, 0)">zero</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_zero(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a3265f33265cd45bfc25a8d4cbb735240" kindref="member" tooltip="The x-axis unit vector: (1, 0, 0)">xAxis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_xAxis(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aeced7b630ad5116804fdb6140f54a6e4" kindref="member" tooltip="The y-axis unit vector: (0, 1, 0)">yAxis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_yAxis(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a2c009c83c79ce5f571b9bc25fc229b8b" kindref="member" tooltip="The z-axis unit vector: (0, 0, 1)">zAxis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_zAxis(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"/></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a26372f7c8299ad958849033272e9000f" kindref="member" tooltip="The unit vector pointing left along the negative x-axis: (-1, 0, 0)">left</ref>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_left(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a1824792398f794deacf1631ca217d69d" kindref="member" tooltip="The unit vector pointing right along the positive x-axis: (1, 0, 0)">right</ref>()<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_right(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ae7a1e8e3b7bf44bf106743ba8fdee666" kindref="member" tooltip="The unit vector pointing down along the negative y-axis: (0, -1, 0)">down</ref>()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_down(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aa7307c5bfe098fd6794a745e0d11360f" kindref="member" tooltip="The unit vector pointing up along the positive y-axis: (0, 1, 0)">up</ref>()<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_up(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a71e39596252837897bfb4e522f81a471" kindref="member" tooltip="The unit vector pointing forward along the negative z-axis: (0, 0, -1)">forward</ref>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_forward(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a9ea8cc1db9b0e7a4fbf44c99c03f68e5" kindref="member" tooltip="The unit vector pointing backward along the positive z-axis: (0, 0, 1)">backward</ref>()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_backward(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6b713b087c4a1550d2892751daa6b9ab" kindref="member" tooltip="*The magnitude, or length, of this vector.">magnitude</ref>()<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_magnitude(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a29b3635fc135833a7809b5a5197108a5" kindref="member" tooltip="*The square of the magnitude, or length, of this vector.">magnitudeSquared</ref>()<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_magnitudeSquared(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"/></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7af09174561edbe3fa639363c3f1ec70" kindref="member" tooltip="The distance between the point represented by this Vector object and a point represented by the speci...">distanceTo</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_distanceTo(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(other),<sp/>other);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a3e1559ccfdbcca8594600af460c86625" kindref="member" tooltip="The angle between this vector and the specified vector in radians.">angleTo</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_angleTo(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(other),<sp/>other);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"/></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a3846e71ed303896bcb8920759f786128" kindref="member" tooltip="The pitch angle in radians.">pitch</ref>()<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_pitch(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a94015d7ce48ab69adebbdf7414b462e8" kindref="member" tooltip="The yaw angle in radians.">yaw</ref>()<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_yaw(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aac1844b328ff263d881171c362d71837" kindref="member" tooltip="The roll angle in radians.">roll</ref>()<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_roll(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"/></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ad499bd83e3676b2b79f4be138454c479" kindref="member" tooltip="The dot product of this vector with another vector.">dot</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_dot(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(other),<sp/>other);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"/></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ae24246a28023db7f459c3218938b504c" kindref="member" tooltip="The cross product of this vector and the specified vector.">cross</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_cross(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"/></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6af23209bd1dd0c52209079eed289ce8" kindref="member" tooltip="A normalized copy of this vector.">normalized</ref>()<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_normalized(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"/></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a094d02ff75dfc7a7c6365d9cd028d4bb" kindref="member" tooltip="A copy of this vector pointing in the opposite direction.">opposite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_opposite(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"/></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ae953da8fad75f9c6875235a94af2b4ac" kindref="member" tooltip="Add vectors component-wise.">plus</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_plus(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"/></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a8b0b1e6f5ab30a65aedbf6b8dc0a9ee2" kindref="member" tooltip="Subtract vectors component-wise.">minus</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_minus(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(other),<sp/>other),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"/></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aea149a86ea12f74b32a0fe82f666181f" kindref="member" tooltip="Multiply vector by a scalar.">times</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_times(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>scalar),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"/></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1acc121bbdb861079951dfb62a35e77071" kindref="member" tooltip="Divide vector by a scalar.">divide</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1ab1f1d78560fa93b47c77d731b643f65e" kindref="member" tooltip="Creates a new Vector with all components set to zero.">Vector</ref>(LeapJNI.Vector_divide(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>scalar),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"/></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>@Override<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>String<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1aba41477e3082659ec7987429bccd845b" kindref="member" tooltip="Returns a string containing this vector in a human readable format: (x, y, z).">toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_toString(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"/></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a65dd586b063eba3e16e7ef079b4bb819" kindref="member" tooltip="Compare Vector equality component-wise.">equals</ref>(<ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_equals(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector" kindref="compound" tooltip="The Vector struct represents a three-component mathematical vector or point such as a direction or po...">Vector</ref>.getCPtr(other),<sp/>other);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"/></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a6805632ab99d332b121883beb8ac015a" kindref="member" tooltip="Returns true if all of the vector&amp;#39;s components are finite.">isValid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_isValid(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"/></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"/></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a8506b443988fc0d5d4ef00367a4ae2d7" kindref="member" tooltip="The horizontal component.">setX</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Vector_x_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"/></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7901d72a1490c333a7192d3bcd93b069" kindref="member" tooltip="The horizontal component.">getX</ref>()<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_x_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"/></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a7a80bb11d8c7a666c4e7c5adc91e4aa2" kindref="member" tooltip="The vertical component.">setY</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Vector_y_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"/></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a609c86c70d7d82dbd60607bf35b66bdd" kindref="member" tooltip="The vertical component.">getY</ref>()<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_y_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"/></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1af88539afb2c8eee19154361c6b6e32ee" kindref="member" tooltip="The depth component.">setZ</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>LeapJNI.Vector_z_set(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"/></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1leapmotion_1_1leap_1_1_vector_1a0632680777cfb405da4883fc3daa2438" kindref="member" tooltip="The depth component.">getZ</ref>()<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LeapJNI.Vector_z_get(swigCPtr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"/></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/Vector.java"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_leap__wrap__java_8cpp" kind="file">
    <compoundname>Leap_wrap_java.cpp</compoundname>
    <includes local="no">jni.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">string</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">vector</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="yes">Leap.h</includes>
    <includes refid="_leap__wrap__java_8h" local="yes">Leap_wrap_java.h</includes>
    <incdepgraph>
      <node id="71">
        <label>Leap.h</label>
      </node>
      <node id="69">
        <label>stdint.h</label>
      </node>
      <node id="64">
        <label>stdlib.h</label>
      </node>
      <node id="67">
        <label>stdexcept</label>
      </node>
      <node id="66">
        <label>string</label>
      </node>
      <node id="72">
        <label>Leap_wrap_java.h</label>
        <link refid="_leap__wrap__java_8h_source"/>
      </node>
      <node id="65">
        <label>string.h</label>
      </node>
      <node id="68">
        <label>vector</label>
      </node>
      <node id="62">
        <label>/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp</label>
        <link refid="Leap_wrap_java.cpp"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>jni.h</label>
      </node>
      <node id="70">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_s_w_i_g___java_exceptions__t" prot="public">SWIG_JavaExceptions_t</innerclass>
    <innernamespace refid="namespace_swig">Swig</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a91b7b0dc42795a9766b801eb733543cf" prot="public" static="no">
        <name>SWIG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="564" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a348dca0399dff2bcea8e49cb9cb04991" prot="public" static="no">
        <name>SWIG_contract_assert</name>
        <param><defname>nullreturn</defname></param>
        <param><defname>expr</defname></param>
        <param><defname>msg</defname></param>
        <initializer>if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="259" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a08d7251e749eb4d7a032a647f48950a5" prot="public" static="no">
        <name>SWIG_DIRECTORS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="59" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1aea3c8b056dcc8c1ab93f6b825cd1371b" prot="public" static="no">
        <name>SWIGEXPORT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="169" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a6d0a7c65b3712775e92c8bdb7acdd0ee" prot="public" static="no">
        <name>SWIGINLINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="108" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a8f2319f775e5b9d5906c9ef25d9b819a" prot="public" static="no">
        <name>SWIGINTERN</name>
        <initializer>static SWIGUNUSED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="143" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1afc5b08bb3c3cd2e3fb2e34b775346153" prot="public" static="no">
        <name>SWIGINTERNINLINE</name>
        <initializer>SWIGINTERN SWIGINLINE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="148" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1aa44de7bf6024602ca7e923c0fa5bd119" prot="public" static="no">
        <name>SWIGJAVA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="58" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1adcd6410456ea7a76147d3ad95b9bcb36" prot="public" static="no">
        <name>SWIGSTDCALL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="179" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a7e84031693895e512662f5b390c6d0e4" prot="public" static="no">
        <name>SWIGTEMPLATEDISAMBIGUATOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="99" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a6ee41cd160d397aa76668bf4db65e2d1" prot="public" static="no">
        <name>SWIGUNUSED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="123" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_leap__wrap__java_8cpp_1a6a54164d0685c632e7540c5ad32a453a" prot="public" static="no">
        <name>SWIGUNUSEDPARM</name>
        <param><defname>p</defname></param>
        <initializer>p SWIGUNUSED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="137" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6" prot="public" static="no">
        <name>SWIG_JavaExceptionCodes</name>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6accbe98fef6893702d7fe5e460dc3aa57" prot="public">
          <name>SWIG_JavaOutOfMemoryError</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6a199e1efa751429198cb46a1aeee15bb7" prot="public">
          <name>SWIG_JavaIOException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6ab1afb65d7a91a2ce1dcbbc64e88a349a" prot="public">
          <name>SWIG_JavaRuntimeException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6af12f677ec45b7b3e71451e74d9b75694" prot="public">
          <name>SWIG_JavaIndexOutOfBoundsException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6a66d33030f15e58c604fbb649a9dd1bf2" prot="public">
          <name>SWIG_JavaArithmeticException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6ae9e1faedf7322cd8b18dfcda70701db3" prot="public">
          <name>SWIG_JavaIllegalArgumentException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6ab8355b629f74b9204e5d04826c142424" prot="public">
          <name>SWIG_JavaNullPointerException</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6ac41e998929496bf1f42871aac04b1e97" prot="public">
          <name>SWIG_JavaDirectorPureVirtual</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_leap__wrap__java_8cpp_1a759553ce11c7722bea834d8ff7c1bbd6a6aacbda6ab6e6550234dace9d04e9e60" prot="public">
          <name>SWIG_JavaUnknownError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="213" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="213" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7a145d70fe59bf31c0e8133704b4efca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_BoolArray_1add</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_BoolArray_1add</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="836" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="836" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2681a6ebccfcd25c4cf04ccb6e923153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_BoolArray_1capacity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_BoolArray_1capacity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="782" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="782" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab14e284b7b4e92af991771c06deb58d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_BoolArray_1clear</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_BoolArray_1clear</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="825" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="825" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad6900e4caaea4b9153af75b35077dc66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_BoolArray_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_BoolArray_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="851" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="851" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9c7ff63f9a0c49e7db8998c6866b9df2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_BoolArray_1isEmpty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_BoolArray_1isEmpty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="810" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="810" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af0faf9abb06da08c07cfb789a9bcf959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_BoolArray_1reserve</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_BoolArray_1reserve</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="797" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="797" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a28370cb8de54aec74b2598117e3a81e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_BoolArray_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jboolean jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_BoolArray_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="875" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="875" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a24dc178bc1dd14b6e567acc0c8d89a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_BoolArray_1size</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_BoolArray_1size</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="767" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="767" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a58bb75c46dc33ebb0d79052a7964474a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1center</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1center</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4002" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4002" bodyend="4014"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa64503dad79d4931168c3ed4cd645a7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1classType</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1classType</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3959" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3959" bodyend="3968"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a554e5c7fda6036d0f5caf1380db25532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1normal</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1normal</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4017" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4017" bodyend="4029"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a994eb085f1b04befdaf4263d16983fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4062" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4062" bodyend="4074"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a01b5097f7dbfc1dbd4e7cbf6b55faa9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1progress</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1progress</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4032" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4032" bodyend="4044"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae7cfd1032b1367851c75d0c3ee83cb9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1radius</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1radius</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4047" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4047" bodyend="4059"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a132bbed90a30f38b62dfa2cc88483100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_CircleGesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6683" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6683" bodyend="6689"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af7ab0497fd08444a0ed36da9b9d70253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getBool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getBool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5830" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5830" bodyend="5852"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2f2bf98aecee8e91aa588e2fb7725adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getBoolArray</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getBoolArray</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6046" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6046" bodyend="6068"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afc1d6fa1f1d2622a6a51a26caa30e4fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jdouble JNICALL</type>
        <definition>jdouble JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getDouble</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getDouble</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5996" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5996" bodyend="6018"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9002836776b273b69c3f90205cb50a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getDoubleArray</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getDoubleArray</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6146" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6146" bodyend="6168"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a33ee886e278266ef75ed55037366ed23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getFloat</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getFloat</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5971" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5971" bodyend="5993"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2677d39841cdb33f8f51b97c49e2befb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getFloatArray</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getFloatArray</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6121" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6121" bodyend="6143"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8a782e50c02dbdd47846b7a1c937c1fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getInt32</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getInt32</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5855" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5855" bodyend="5877"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aabe2a9f90fc0fb3427288cd8a66f14b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getInt32Array</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getInt32Array</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6071" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6071" bodyend="6093"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a478608e8def73f910717d4db6809546f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getInt64</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getInt64</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5880" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5880" bodyend="5902"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7cdf093247ee48c8437c4eb577c74cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6021" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6021" bodyend="6043"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8beb961de54df71904db2faf2674aefd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getStringArray</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getStringArray</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6171" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6171" bodyend="6193"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6a491355cf4458af00afb78b72df2394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getUInt32</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getUInt32</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5905" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5905" bodyend="5927"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aaecae43552728c380512c771b5dfab94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getUInt32Array</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getUInt32Array</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6096" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6096" bodyend="6118"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac431f79195eae3130a7b6c6e9028c6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jobject JNICALL</type>
        <definition>jobject JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1getUInt64</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1getUInt64</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5930" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5930" bodyend="5968"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2b960881f664be40eb6c618a0687970d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1isArray</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1isArray</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5805" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5805" bodyend="5827"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aea75a30dce1255f30affd76c7cbd37b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6771" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6771" bodyend="6777"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad0d699880c4676969adb02fc7fe49a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Config_1type</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Config_1type</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5780" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5780" bodyend="5802"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a52ea745b35efc2a9d0f3238d13042c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1addListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1addListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6262" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6262" bodyend="6281"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae613254b4e30b1bd8401c60abaef6d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1calibratedScreens</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1calibratedScreens</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6353" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6353" bodyend="6365"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a223fdcf24bd9ebf57a68de624a8d2649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1config</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1config</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6338" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6338" bodyend="6350"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae7f3134d289e9ac83d6ffbd89f6962e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jboolean jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6368" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6368" bodyend="6380"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a264853b4ec9eb2dbc2e725987a5b4e13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6383" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6383" bodyend="6393"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9092de5711772bebfee1cb83d3f90285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6306" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6306" bodyend="6320"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7c7ae5a2128264e8dbacd6bb9bd2a767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6323" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6323" bodyend="6335"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae493472549f10cc6dc0a0f10c241178b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1isConnected</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1isConnected</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6247" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6247" bodyend="6259"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a077ef056648ecb4f15655fcaed45aa4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1isGestureEnabled</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1isGestureEnabled</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6396" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6396" bodyend="6410"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a55d98fe64a705599735a8c5bc37bd4e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1removeListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1removeListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6284" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6284" bodyend="6303"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4413d40db78708765b168772841567ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Controller_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Controller_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6779" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6779" bodyend="6785"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab9caaaee872ad1212e5dc9b538c4eb24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1BoolArray</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1BoolArray</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="899" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="899" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3b71984edd2238aa54042efe507a6b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1CircleGesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1CircleGesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4077" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4077" bodyend="4084"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afc7045bd116b1dd5f12ebec9950a3b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Config</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Config</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6196" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6196" bodyend="6203"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8e24819ed307f4f3010f4aedcd36ca31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Controller</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Controller</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6218" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6218" bodyend="6225"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a644f8c2aa20e62a1d60d750a86405b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1DoubleArray</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1DoubleArray</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1571" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1571" bodyend="1578"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa69fd6a043feb794d712ff6376bce3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Finger</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Finger</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3087" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3087" bodyend="3094"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a34dde2e9513d648ea113763f2554c997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1FingerList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1FingerList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4906" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4906" bodyend="4913"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac3447911dfa7e8037bc6cfda69822123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1FloatArray</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1FloatArray</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1403" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1403" bodyend="1410"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1ecea65eeebf3323ffff275d58b6614a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5758" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5758" bodyend="5765"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a50a7035922a8311f4cc5a2693f41198f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Gesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Gesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3821" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3821" bodyend="3828"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6de623710fab76df6988d9af0b8e6af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1GestureList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1GestureList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5179" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5179" bodyend="5186"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a84e0ef3922f15758c3a1f3e418a0b2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Hand</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Hand</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3596" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3596" bodyend="3603"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad286e8bc79c2d7a04ca97b2432be4d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1HandList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1HandList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5088" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5088" bodyend="5095"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3afcc234620cbcd1066e930f9a914b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Int32Array</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Int32Array</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1067" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1067" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a52cf871d670256b07e36ab454fd272c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1KeyTapGesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1KeyTapGesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4303" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4303" bodyend="4310"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a310fc6feda09608cf404b885cf9d4b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Listener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Listener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6425" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6425" bodyend="6432"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a77f8a1697dcd5c2b1cbf3a7bddc2dddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Matrix</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Matrix</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2783" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2783" bodyend="2790"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7693cc26dc73487d894b4b15c0df8f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3019" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3019" bodyend="3026"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a18ba07306707c45794236c4c1da87928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1PointableList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1PointableList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4815" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4815" bodyend="4822"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acd006427767de5a7a9e7462baa885a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Screen</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Screen</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4680" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4680" bodyend="4687"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0a44690a7262fe805bca9af669ff5d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1ScreenList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1ScreenList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5321" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5321" bodyend="5328"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a525c1011894b8575a45972e7c048aaa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1ScreenTapGesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1ScreenTapGesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4190" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4190" bodyend="4197"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a46d9d79f133be8ebc39701ba63ed63e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1StringArray</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1StringArray</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1751" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1751" bodyend="1758"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a54f557b303896d5b99dae831e067fa10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1SwipeGesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1SwipeGesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3949" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3949" bodyend="3956"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4f8f501a1f8cc3a91f953d716d9775f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Tool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Tool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3155" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3155" bodyend="3162"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a86bb379db4d0ce188ffa4df2936ce27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1ToolList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1ToolList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4997" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4997" bodyend="5004"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a22cf7d121217f49fb3c3415bed8dd9eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1UInt32Array</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1UInt32Array</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1235" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1235" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a63eb6f25c55957204b2ced144549d106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_delete_1Vector</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_delete_1Vector</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2354" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2354" bodyend="2361"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab5a010c19ae6aa3bd6b463a576b4284e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_DoubleArray_1add</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1add</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jdouble</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1508" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1508" bodyend="1520"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae40311169ea2cd8ef09fb8a2bea6505d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_DoubleArray_1capacity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1capacity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1454" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1454" bodyend="1466"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4b591d20eb438175c45d96c8ee46fa51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_DoubleArray_1clear</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1clear</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1497" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1497" bodyend="1505"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a26b8cb18fce8bad36b7dc5ccf95a8f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jdouble JNICALL</type>
        <definition>jdouble JNICALL Java_com_leapmotion_leap_LeapJNI_DoubleArray_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1523" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1523" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acbb4695ec06ee3a2a54519a526e4ee5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_DoubleArray_1isEmpty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1isEmpty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1482" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1482" bodyend="1494"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0e31c8024955c5b8bc24c13e2403e061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_DoubleArray_1reserve</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1reserve</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1469" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1469" bodyend="1479"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a37eb29be45caa34370493682d76c1a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_DoubleArray_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jdouble jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jdouble</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1547" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1547" bodyend="1568"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa7cea7be68ae8449c91adc393d603bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_DoubleArray_1size</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1size</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1439" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1439" bodyend="1451"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8bfe9309d2b2a6f886368a8764cd0e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Finger_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Finger_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3060" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3060" bodyend="3069"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3e852cd6d14f8240d2d92b4d5f7a15f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Finger_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Finger_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6643" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6643" bodyend="6649"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7223274ba54041ecfeb59e13c076968a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Finger_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Finger_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3072" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3072" bodyend="3084"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad39a2915d0e23c6b550f1b448ee07467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1append</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1append</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4884" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4884" bodyend="4903"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acd2f269a60a7f95c4e6c67f56feb8c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4837" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4837" bodyend="4849"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afbdd1b19aa84743cdd77154e24f75673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4852" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4852" bodyend="4864"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a040091080d62d4a1e074ec734acc6ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4867" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4867" bodyend="4881"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a354f82e603afa413931955c2b0be2b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_FingerList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FingerList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6723" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6723" bodyend="6729"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2ff4d69046395e8a24504f2780978557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_FloatArray_1add</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FloatArray_1add</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1340" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1340" bodyend="1352"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a16a3a0b0e1624c9f106fbcd51902e7cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_FloatArray_1capacity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FloatArray_1capacity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1286" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1286" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a10b53de9edf4a38074cb718e8817b748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_FloatArray_1clear</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FloatArray_1clear</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1329" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1329" bodyend="1337"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a41c58304fb49847a19b8373575c46979" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_FloatArray_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FloatArray_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1355" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1355" bodyend="1376"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad67b4c43ce826650d579d5e9615fb2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_FloatArray_1isEmpty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FloatArray_1isEmpty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1314" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1314" bodyend="1326"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0076f65645c63953e3aa7a053f964661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_FloatArray_1reserve</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FloatArray_1reserve</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1301" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1301" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af4d89b890973112c4e6eb6ff20e7e43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_FloatArray_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jfloat jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FloatArray_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1379" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1379" bodyend="1400"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acbc2dd58f48c8ffe92c2a3b7b0e3cd61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_FloatArray_1size</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_FloatArray_1size</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1271" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1271" bodyend="1283"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab20003bb7d34839ca9a907c3decf1c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5721" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5721" bodyend="5740"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad999b1bc8d50a34bc0beccd6f1656d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1finger</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1finger</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5452" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5452" bodyend="5466"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9e543099035558d5c978701fe1457daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1fingers</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1fingers</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5437" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5437" bodyend="5449"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad76151294da4a9f0cf5ab2bd53aa0ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1gesture</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1gesture</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5501" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5501" bodyend="5515"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae520260c0bc6eb0242f1944980c65a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5518" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5518" bodyend="5530"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a140a5b683c30a5b4fdcd23e065860883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5533" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5533" bodyend="5552"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a635e794ff9495ac2ef4f0183d8423f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1hand</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1hand</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5388" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5388" bodyend="5402"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a109d05e14ca856e6d27081d4f89e20f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1hands</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1hands</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5373" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5373" bodyend="5385"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a35d8ed3d75f176537fefe5f2b734687f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5343" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5343" bodyend="5355"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac6bdcc0c63261a3cc6b57a68b8094a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5709" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5709" bodyend="5718"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a253ccdda0e7883577f4f288cbd483bf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5694" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5694" bodyend="5706"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abf8b3f02f0fdaae8425e0ed24ab037f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5420" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5420" bodyend="5434"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af81d7077192b477f04fe52b39edeeeda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1pointables</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1pointables</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5405" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5405" bodyend="5417"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afaa420152044c52513396bffb0a2ca3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5599" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5599" bodyend="5618"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2ebedb95e6a8b3b4c87753ce3a46be32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5621" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5621" bodyend="5647"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4ff2412677e4a24ed27f00c015937b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5577" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5577" bodyend="5596"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac5f1c73468639342ac36443bfcec8e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1rotationMatrix</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationMatrix</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5650" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5650" bodyend="5669"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab485299e2134852cf65ec11b81da6438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1scaleFactor</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1scaleFactor</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5672" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5672" bodyend="5691"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0673775a9352f957ed623c2e6eab4e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6763" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6763" bodyend="6769"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a693d2edd4fe9b01b2068c595b1ca470b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1timestamp</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1timestamp</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5358" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5358" bodyend="5370"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a370b33be62d1e7b8f2649d83b8482a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1tool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1tool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5484" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5484" bodyend="5498"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7e461254ab7232c94ffd11e094898ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1tools</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1tools</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5469" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5469" bodyend="5481"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac5a65a4f7b37d494a655a5c568d78ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5743" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5743" bodyend="5755"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a43b252f62dfacc1bdc63d5e3ed67d0bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Frame_1translation</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Frame_1translation</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5555" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5555" bodyend="5574"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1add45d309fded32354844412382187be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1duration</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1duration</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3682" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3682" bodyend="3694"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af27e7d534aedf83c9690db167d3c6e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1durationSeconds</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1durationSeconds</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3697" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3697" bodyend="3709"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6c56e4881ab390a735c849f8e939bb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3772" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3772" bodyend="3791"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4e3bd97cd21dd0400811a0dfcc1a5e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3712" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3712" bodyend="3724"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6928ab98c1697b4c7f9abb38df1e6022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1hands</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1hands</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3727" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3727" bodyend="3739"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a89223690281c135764de4c1f00721a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3667" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3667" bodyend="3679"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a63e2a71b24d994c7aa61fe87c7764795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3809" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3809" bodyend="3818"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a11cbf924cb041809c00b3cc10c09655f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3757" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3757" bodyend="3769"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad04a8500d889b5dde79fc4ddad00589f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1pointables</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1pointables</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3742" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3742" bodyend="3754"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a37f078fafb78345ad8a02eeb741d53c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1state</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1state</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3652" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3652" bodyend="3664"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6653f6868f92d2e6e8b949e70adc3b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6667" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6667" bodyend="6673"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0275be30534b2510a7997401ede22619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3794" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3794" bodyend="3806"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa82c3d0fae4d2b08c8ce4d2d5e9f7bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Gesture_1type</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Gesture_1type</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3637" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3637" bodyend="3649"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a16d52e80320a900ce5cb4bc953f283cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1append</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1append</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5157" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5157" bodyend="5176"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af353ef4647e090ca6b490eb1042221f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5110" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5110" bodyend="5122"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abbe8cf37e067b6268da84d8a412799fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5125" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5125" bodyend="5137"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2424d627ade48723abdc2cb939b5a01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5140" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5140" bodyend="5154"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aad168119f453f198e082624adddb5dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_GestureList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_GestureList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6747" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6747" bodyend="6753"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6d7dbc47551c7e45f33956d4cfda446a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3348" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3348" bodyend="3360"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a88c51552b48443e1a55ac545b4b1e737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3559" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3559" bodyend="3578"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5d7c7fbd5cd614779e0d1db6f708fea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1finger</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1finger</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3254" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3254" bodyend="3268"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aecbee9ee9c92063cc48f93aedfc5838d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1fingers</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1fingers</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3239" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3239" bodyend="3251"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a97e04f94d1ca55268f4154757da0cc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3192" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3192" bodyend="3204"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adcdc5a3d97d235cd6e99a98a39e87491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3177" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3177" bodyend="3189"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae67327fd0ae7d0cae2eb0d39c1d496df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3547" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3547" bodyend="3556"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac17b1c4f2298b5d5e93004713f1629a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3532" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3532" bodyend="3544"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acc68d4d3662264cd2f6f77e8d6018149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1palmNormal</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1palmNormal</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3333" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3333" bodyend="3345"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab16b95f40e3de6ddb7c9a4a0f57399da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1palmPosition</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1palmPosition</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3303" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3303" bodyend="3315"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac9acbda63b9bb6f9fa4d8a679e1962d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1palmVelocity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1palmVelocity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3318" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3318" bodyend="3330"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a21f8df614fd69c526627265356befc6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3222" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3222" bodyend="3236"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac400abfa3271b418b070945854dd8f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1pointables</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1pointables</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3207" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3207" bodyend="3219"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee9044ecc199664e6164c519f268ffc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3437" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3437" bodyend="3456"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab8fafbb90ffdbfaa7c50d860d2e1641e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3459" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3459" bodyend="3485"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abc22f97e85d6ae00b0abee7059f8ebaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3415" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3415" bodyend="3434"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2cf8790c08d66e711bc358de08e307eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1rotationMatrix</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationMatrix</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3488" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3488" bodyend="3507"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a13bacaaf2cc229a3f55e45de41520e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1scaleFactor</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1scaleFactor</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3510" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3510" bodyend="3529"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7865739eef82a72e1e09bb5f77ba9a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1sphereCenter</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1sphereCenter</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3363" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3363" bodyend="3375"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a34b05d07ca985f947304265a2ac37814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1sphereRadius</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1sphereRadius</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3378" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3378" bodyend="3390"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a056973c3a06ecaf4379f680170389a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6659" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6659" bodyend="6665"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a031e0e39a9d2403ff6cece4c24f47a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1tool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1tool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3286" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3286" bodyend="3300"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab62b935d569a50a658ac39b6adbed4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1tools</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1tools</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3271" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3271" bodyend="3283"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ace6d89e2a6da09cc0d790a707ce41fd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3581" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3581" bodyend="3593"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa0616c9f1432c8c21f772397ec1234a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Hand_1translation</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Hand_1translation</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3393" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3393" bodyend="3412"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad22a0f9eb289ed314ff14c26a24cfc40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1append</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1append</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5066" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5066" bodyend="5085"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a02349679c12415f5d0e14198af9e20a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5019" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5019" bodyend="5031"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4a7bca11c2bae018094f72627eb3c128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5034" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5034" bodyend="5046"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6ef3e57a1eaa7e33457538aa8767f3d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5049" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5049" bodyend="5063"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a45a9f95a844b1f925d4b0479948938ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_HandList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_HandList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6739" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6739" bodyend="6745"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af6b3d3774f17782fc8804d2c9c454754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Int32Array_1add</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Int32Array_1add</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1004" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1004" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a44bcc91185a287ff308ff72f73993150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Int32Array_1capacity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Int32Array_1capacity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="950" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="950" bodyend="962"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a45e2dbbad9dd742195207538eef28c83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Int32Array_1clear</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Int32Array_1clear</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="993" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="993" bodyend="1001"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae43020b0d930ddeef96d8afe32aa8da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Int32Array_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Int32Array_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1019" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1019" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab200c453923f419090360839fd7fa2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Int32Array_1isEmpty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Int32Array_1isEmpty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="978" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="978" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a154e51b1a3f088a42dae5dd5ea382b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Int32Array_1reserve</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Int32Array_1reserve</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="965" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="965" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad56a8d7c37f3471a787c62436e5061a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Int32Array_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Int32Array_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1043" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1043" bodyend="1064"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a24f8dbb7ccddafed0ab779bad340ae9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Int32Array_1size</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Int32Array_1size</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="935" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="935" bodyend="947"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adc5e2027fa70fe4e4704dec17f1173b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1classType</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1classType</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4200" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4200" bodyend="4209"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3fe15807c131809484025ccd73160e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4258" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4258" bodyend="4270"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a40bafbab004d8ceaa5b6b5d4cb7a1888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4288" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4288" bodyend="4300"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a178cf30ec76633942f14b9f1ba5c2b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1position</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1position</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4243" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4243" bodyend="4255"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a931f57cc03a3a6373ac0551a252e00a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1progress</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1progress</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4273" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4273" bodyend="4285"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3ea373f604bcaebb6f356583bcbdc19a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6699" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6699" bodyend="6705"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a68f223d10b12ebc5dcf8168350b412dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1change_1ownership</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1change_1ownership</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jself</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>objarg</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jtake_or_release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6625" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6625" bodyend="6632"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4b904d1ef567f8cd0eadd3272ae4c040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1director_1connect</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1director_1connect</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jself</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>objarg</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jswig_mem_own</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jweak_global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6615" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6615" bodyend="6622"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee2d80d2ced99f01ef6589685b475482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onConnect</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onConnect</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6471" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6471" bodyend="6486"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a316b1bcab7e593ef109d69dfa1ca2143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onConnectSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onConnectSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6489" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6489" bodyend="6504"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae8c225537a11e44cb5e32f4ebcb014ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnect</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnect</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6507" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6507" bodyend="6522"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0ea8f7fd4b6bcbd399442e5c4ed67ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnectSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnectSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6525" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6525" bodyend="6540"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5e474e2e6084672c2aa5c8f55ea3d8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onExit</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onExit</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6543" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6543" bodyend="6558"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0637bad365fab89f5e7cf1c5d56031b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onExitSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onExitSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6561" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6561" bodyend="6576"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac85023da6d7a57a1d7dfd03060841212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onFrame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onFrame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6579" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6579" bodyend="6594"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af486baba25d3b0792af05685e74da24f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onFrameSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onFrameSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6597" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6597" bodyend="6612"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ace540592c376244f59454c847945d64d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onInit</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onInit</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6435" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6435" bodyend="6450"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af9a40437c711d7c07a36a31a19830d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Listener_1onInitSwigExplicitListener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Listener_1onInitSwigExplicitListener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6453" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6453" bodyend="6468"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac2b6b96adbf6b69781e5174e8ec1f538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2630" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2630" bodyend="2649"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a56b84167f749f82f169e986ce5c97d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1identity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1identity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2517" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2517" bodyend="2526"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae1d2ed579c2aa8e4b8a19f836ce101ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2768" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2768" bodyend="2780"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a673f27c299f51cebcb2291d2048c70de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2754" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2754" bodyend="2765"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae79e214024414622ac73e057fd9e43e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1rigidInverse</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1rigidInverse</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2593" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2593" bodyend="2605"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9ea47e99d7b94956eff14ace8e0155aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1setRotation</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1setRotation</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2529" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2529" bodyend="2546"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5d5875f8352ae81cf8cb47327b592f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1times</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1times</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2608" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2608" bodyend="2627"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afd8d6796dc9d935f3bdb43e231991633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2652" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2652" bodyend="2664"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad79bf4d427a9da5a001dfed536e10548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1transformDirection</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1transformDirection</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2571" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2571" bodyend="2590"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a48e2ee4d28a03890ca50fb5c862d15c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1transformPoint</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1transformPoint</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2549" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2549" bodyend="2568"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab94018c2b176e0e83bbc49b2436e0843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2681" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2681" bodyend="2693"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a805f07981c0470dc4ec76474bc4ac18f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2667" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2667" bodyend="2678"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1ee053368d445ff97a05cc40f459467e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2710" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2710" bodyend="2722"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4418ca4dfe02b63ee2848325ed91bca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2696" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2696" bodyend="2707"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae6781d1d0e11604eb2aa9c203600416e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2739" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2739" bodyend="2751"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1ca4ca56c252c15d82d31b360d52ad1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2725" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2725" bodyend="2736"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8b719c6f38f40f8cd19dc6faca0a5c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1BoolArray_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1BoolArray_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="741" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="741" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4a4fdf7e8cf5e55c7f4b5cc8d5a26bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1BoolArray_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1BoolArray_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="753" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="753" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2aa30be02a20e30af06958f609de749a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3971" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3971" bodyend="3980"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee7a9bd806cde5c818aaa22fe7c3b203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3983" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3983" bodyend="3999"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a283c01244eaaa7ad19a4b607814f0361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Config</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Config</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5768" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5768" bodyend="5777"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9dcbe7108ce17529e95b380065b79f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6206" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6206" bodyend="6215"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa4e450ab7de5da89970eda0e50fdcd34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6228" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6228" bodyend="6244"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a61216fbc968152e473e635087cd36658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1DoubleArray_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1DoubleArray_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1413" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1413" bodyend="1422"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a14e2a46a6696ca7204ccd07df7bd9619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1DoubleArray_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1DoubleArray_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1425" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1425" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab9904fe758126356be3d3cbef0504a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3029" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3029" bodyend="3038"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8fabd178b8a60b6bdc133eba6bd77312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3041" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3041" bodyend="3057"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4c566a42dd94e3cd643baa2edc56ef87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1FingerList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1FingerList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4825" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4825" bodyend="4834"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aaa8e6877d1165c7459f699b0813d63d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1FloatArray_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1FloatArray_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1245" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1245" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a22cc3455459d23af151f81ca23b6a53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1FloatArray_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1FloatArray_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1257" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1257" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a30bdf87a38274e97809f188371ec942f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5331" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5331" bodyend="5340"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abd378c398b24c057e1bc11f434377640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3606" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3606" bodyend="3615"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a04b3beb6faec0da2afb490291aa3defd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3618" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3618" bodyend="3634"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a32a5834114e67b3351cd50d48ccb019a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1GestureList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1GestureList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5098" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5098" bodyend="5107"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aef9488c05d3ca372624a8ca37b80b6b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Hand</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Hand</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3165" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3165" bodyend="3174"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac0ee57d185450d53f6368518841b3aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1HandList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1HandList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5007" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5007" bodyend="5016"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9dd1c4f5bf1e1a840f8b2aa76ed09ab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Int32Array_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Int32Array_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="909" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="909" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3870f418ff09b9a728f24b6f6bf927a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Int32Array_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Int32Array_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="921" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="921" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0bf0c6cf4503ff7a033cb9dc5497ed95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4212" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4212" bodyend="4221"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0e491963b86be7cc87c81bb388a4eada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4224" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4224" bodyend="4240"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1d446eeaa38039df86912c7478c7ea9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Listener</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Listener</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6413" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6413" bodyend="6422"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afbea97998d9d0e4d9a2afa72dc38b904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2364" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2364" bodyend="2373"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac6129e3a0ba84d0c6681ce456e823354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2376" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2376" bodyend="2392"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a842f5635544b376b2ce88d8170f21788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_12</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_12</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2395" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2395" bodyend="2425"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9a3719835a41d0525642684fd3c1ddef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_13</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_13</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg4</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg4_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2428" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2428" bodyend="2465"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab248973b2bdf1447c1288b9913749f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_14</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_14</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2468" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2468" bodyend="2486"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a531de24971251292b143338568982643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_15</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_15</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2489" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2489" bodyend="2514"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a13cf652e4fcc32c7fee7306a120ad397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2793" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2793" bodyend="2802"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa3624dc60c3e2b3531b2f8e5146cc437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1PointableList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1PointableList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4690" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4690" bodyend="4699"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af45300444a8c3744bcd1d06442a26bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Screen</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Screen</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4313" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4313" bodyend="4322"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa7a6210d50cb3c1073a540f4b7c40f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1ScreenList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1ScreenList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5189" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5189" bodyend="5198"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aeae868fec56e127de5ea1a239fef5530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4099" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4099" bodyend="4108"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab485013e191c6f72ff8de21362b7217f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4111" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4111" bodyend="4127"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad1960a36f3285757743c37d67eb4bbd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1StringArray_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1StringArray_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1581" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1581" bodyend="1590"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a926523b2c15449a45122d909b2737baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1StringArray_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1StringArray_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1593" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1593" bodyend="1604"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a19b7458491789f0d63f81dfa35116355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3843" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3843" bodyend="3852"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1c6498a95254a7b8722fd987a1bbadd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3855" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3855" bodyend="3871"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac84e28cdae6c522157d2258a0cd871f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3097" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3097" bodyend="3106"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7cb7a06b9e1b433fc3faf38bd879a985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3109" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3109" bodyend="3125"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa0acf45ffb6b8a5c6b0791d46f6b34b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1ToolList</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1ToolList</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4916" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4916" bodyend="4925"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a58edc0c23185728a05c92d0e6e75dd5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1UInt32Array_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1UInt32Array_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1077" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1077" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aec750c175136757b1b8eb306a58cc85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1UInt32Array_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1UInt32Array_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1089" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1089" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1dfa73e856719273a556cfd5e89895e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1761" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1761" bodyend="1770"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a405bf07f3950f370dc13f4812d2883f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2, jfloat jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1773" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1773" bodyend="1788"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a584c5a3f3b8dbd2211af301ade4da7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_12</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_12</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1791" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1791" bodyend="1807"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a403ad92abe4592b0fb725dc6691f206c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2880" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2880" bodyend="2892"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af97fe05ef80b66b96b063642e3f1d0de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2982" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2982" bodyend="3001"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa60efc1b1f7a5b5fbeb9c44d52711d56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1frame</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1frame</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2820" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2820" bodyend="2832"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a02db44326380ef7870fe285489a05b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1hand</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1hand</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2835" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2835" bodyend="2847"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aac58aa14eb97075333c043ac76d88d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2805" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2805" bodyend="2817"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aaf9c53b8acaf214483736302cba82528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2970" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2970" bodyend="2979"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a39366b4f1652f432911fbb1b8508785b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1isFinger</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1isFinger</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2925" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2925" bodyend="2937"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acdee2ca3330e33bac59bc94dbe04f46c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1isTool</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1isTool</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2940" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2940" bodyend="2952"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7a6f419aa2eda2221bd09555d1cd3a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2955" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2955" bodyend="2967"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a44626e08087e538ade60f7043bc02e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1length</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1length</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2910" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2910" bodyend="2922"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a95b79aa592ae9ceba1ad8ab3774a897e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6635" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6635" bodyend="6641"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7906ecaa9e7c39d620bb51d7289798db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1tipPosition</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1tipPosition</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2850" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2850" bodyend="2862"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1a3538215497617e20edbf33316a7f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1tipVelocity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1tipVelocity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2865" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2865" bodyend="2877"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1abf1eef4ca8d3c13a36f9d4070c2f717c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3004" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3004" bodyend="3016"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7eb16660aa56f94af276833c238b4f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Pointable_1width</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Pointable_1width</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2895" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2895" bodyend="2907"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a14944eb2b140dd778d6910a17fa2e6b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4749" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4749" bodyend="4768"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee4b7824717badbe6627a0c583d15736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4771" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4771" bodyend="4790"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5b7849033b1e397562532dd0b4a408c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_12</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_12</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4793" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4793" bodyend="4812"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a091c8f4f5b95e8f5a2ab8f5cd89511e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4702" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4702" bodyend="4714"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa31beed6d09ae8bf356f47c8c511b812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4717" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4717" bodyend="4729"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae836c36eb629e5b1f9c45c9f37826353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4732" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4732" bodyend="4746"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab6ac31db86b15a51b1b20cba731dbcd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_PointableList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_PointableList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6715" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6715" bodyend="6721"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aca5578fcf852cd067ae7ad09c612d701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1bottomLeftCorner</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1bottomLeftCorner</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4534" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4534" bodyend="4546"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af9a0ec6fd2fe8221c5032d3196655822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1distanceToPoint</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1distanceToPoint</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4594" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4594" bodyend="4613"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aade1efcb1f46a510102e2ff19cc94076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4643" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4643" bodyend="4662"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adaa5465f3e91d2ed4bf1c89a15b31660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1heightPixels</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1heightPixels</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4579" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4579" bodyend="4591"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a938995755866fa26f672585f9cf483bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1horizontalAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1horizontalAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4504" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4504" bodyend="4516"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a08dc4b35564c6c5f3e503f428b897896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1id</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1id</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4325" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4325" bodyend="4337"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2c47f2cdaba566a0ef436847dff015a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3, jfloat jarg4)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4340" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4340" bodyend="4363"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4dd6dd9bf261f6b5bcd94868679713cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4366" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4366" bodyend="4387"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5fb013840bd2137c0846bca9f12e4681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_12</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4, jfloat jarg5)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_12</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg4</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4390" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4390" bodyend="4420"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad623964374add43a3498c9d342508c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_13</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jboolean jarg4)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_13</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4423" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4423" bodyend="4451"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8fa07787af3630c53163400211e6a2bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4631" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4631" bodyend="4640"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aacb724ce65bec0e41bd2952878a2239f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4616" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4616" bodyend="4628"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af2e2aa0c6ae53f589d4e44b16113b49a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1normal</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1normal</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4549" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4549" bodyend="4561"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adacf9818ab4d8b1c0da06ea2877f89c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3, jfloat jarg4)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4454" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4454" bodyend="4477"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac2589541eaa61e11dbe6261effc2ecbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jboolean</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4480" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4480" bodyend="4501"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6e9266caeb93ece2e8b06c4eeed6e91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6707" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6707" bodyend="6713"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a312835b1d91942d5e80f099707758f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4665" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4665" bodyend="4677"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa38e04117e0cf3ea3ae28ee4faea643d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1verticalAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1verticalAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4519" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4519" bodyend="4531"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aaab26e7b78d3d1988a6986980ff9841e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_Screen_1widthPixels</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Screen_1widthPixels</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4564" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4564" bodyend="4576"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a59eee9a3a26d9a990f28103ce1b9751d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreen</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreen</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5299" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5299" bodyend="5318"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a23fb86c6d0353ebfefe6bb6dbbc953ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_10</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_10</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5248" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5248" bodyend="5267"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a89bef68bbb018318886cb93685cc4b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_11</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_11</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg3_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5270" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5270" bodyend="5296"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5b8b6c52861e1c46198669aae8921d24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5201" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5201" bodyend="5213"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a18b89b5820f01ae96d23f65d681e841d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5216" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5216" bodyend="5228"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a01070ef2d0d8fa2d8ceeb5a16a82a04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="5231" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="5231" bodyend="5245"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab878c3382d4bf3188442e00ee02714f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6755" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6755" bodyend="6761"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ade3aa8ba19f3186353cb95abc968601d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1classType</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1classType</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4087" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4087" bodyend="4096"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a108b4244c6941ee3cd5450f6cbe03752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4145" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4145" bodyend="4157"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a396079bb3fd60b720a2ce9afaaafda18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4175" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4175" bodyend="4187"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7b7e30dab7aa15f74982e0713bff39e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1position</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1position</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4130" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4130" bodyend="4142"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2e3b70d0c38babfe8f5270f3363e3f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1progress</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1progress</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4160" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4160" bodyend="4172"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aac773839ca21f3e061e83df5147d0be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6691" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6691" bodyend="6697"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a83e8ff5828a8629b40c9c2be66491379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_StringArray_1add</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_StringArray_1add</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1676" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1676" bodyend="1694"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3b089ddc9b7918d3083bb2a67cf55b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_StringArray_1capacity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_StringArray_1capacity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1622" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1622" bodyend="1634"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae21b240f0b62ec20d51398a9c27eee50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_StringArray_1clear</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_StringArray_1clear</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1665" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1665" bodyend="1673"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aceb284b8b87f740e47f2a10fdd56b2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_StringArray_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_StringArray_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1697" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1697" bodyend="1718"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6cac392a5a6469786a6f0b0016439283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_StringArray_1isEmpty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_StringArray_1isEmpty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1650" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1650" bodyend="1662"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a128252e443974739649cbbe7a1ed4c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_StringArray_1reserve</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_StringArray_1reserve</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1637" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1637" bodyend="1647"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a66c8afdcf4af59d38ace91294ee4c37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_StringArray_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_StringArray_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1721" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1721" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a09b5d50eae10e0b80aef002e3c8babb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_StringArray_1size</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_StringArray_1size</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1607" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1607" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a59c4b6c837b9b406e173be48a051becf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_swig_1module_1init</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_swig_1module_1init</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6787" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6787" bodyend="6816"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acbba45c9026ac6f75dbc05d944f3bdf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1classType</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1classType</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3831" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3831" bodyend="3840"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aefacaa9e150bb1537aa26bdbd29fd064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1direction</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1direction</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3904" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3904" bodyend="3916"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ace84952c39003cc3e766b25c13658eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1pointable</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1pointable</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3934" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3934" bodyend="3946"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af00cea975b56a246b501db1b02255167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1position</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1position</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3889" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3889" bodyend="3901"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac0b4319903db890edf99bb7cd4d22ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1speed</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1speed</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3919" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3919" bodyend="3931"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a760a0a76ae9cf1bf79b8fa4cd439d314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1startPosition</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1startPosition</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3874" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3874" bodyend="3886"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acdb4a59373b49d2cee0ac4a83b758de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6675" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6675" bodyend="6681"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3a2e468984a1ea77e59bb10263c60030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Tool_1invalid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Tool_1invalid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3128" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3128" bodyend="3137"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a788df0889b60e0341866209f1673d655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Tool_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Tool_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6651" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6651" bodyend="6657"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2d50adb0bd2cf33a119c90245c12917c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Tool_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Tool_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="3140" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="3140" bodyend="3152"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aab746701f460487fd5d662d94491d122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1append</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1append</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4975" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4975" bodyend="4994"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a22cb90079f5222297db2ecb6b3102db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint JNICALL</type>
        <definition>jint JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1count</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1count</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4928" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4928" bodyend="4940"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af3d9fc84f5f0b44312dc68ffe87c7672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1empty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1empty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4943" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4943" bodyend="4955"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a20c0f859fdc15adcf46be379c34fdbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="4958" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="4958" bodyend="4972"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a51005ae1744e7b72f2e1221698b0d0ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_ToolList_1SWIGUpcast</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_ToolList_1SWIGUpcast</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="6731" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="6731" bodyend="6737"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1449c3a88693e7cfbe82f1f5a4d842b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_UInt32Array_1add</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1add</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1172" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1172" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3f9c82880c404416c0729236f466c3d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_UInt32Array_1capacity</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1capacity</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1118" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1118" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a03158a705fa9c5a2b9635ca50940b028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_UInt32Array_1clear</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1clear</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1161" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1161" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6a547346eda1464d3376a3437b63375a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_UInt32Array_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1187" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1187" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac56d1d7cc3477eb68f880b668a11d11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_UInt32Array_1isEmpty</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1isEmpty</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1146" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1146" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4c4e354538cf1452f3e36badc4703a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_UInt32Array_1reserve</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1reserve</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1133" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1133" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a17d40c9da7cb82a189d1975bbacd88c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_UInt32Array_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1211" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1211" bodyend="1232"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2a89142c2e1d6662aafb37e75349173c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_UInt32Array_1size</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1size</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1103" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1103" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a8e70468c7c41db4f5d4cc4c0c1fe35ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1angleTo</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1angleTo</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1982" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1982" bodyend="2001"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a1f67fea99dad9e156ffdef8f5e1589ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1backward</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1backward</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1918" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1918" bodyend="1927"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2993b1a4459162373c562262f67d3f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1cross</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1cross</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2071" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2071" bodyend="2090"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5c0b00261fff6d73c904b7689db746be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1distanceTo</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1distanceTo</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1960" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1960" bodyend="1979"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a7d6150b3b12a1fa597f85cc4f5adc2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1divide</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1divide</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2184" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2184" bodyend="2198"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a876919bd69eb397f991fcf7d8fdc419b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1dot</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1dot</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2049" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2049" bodyend="2068"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a894f80f06d3ebc6cbb04516270ffa711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1down</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1down</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1882" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1882" bodyend="1891"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae91dd2e71142d8e33f9e8231bdb0373d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1equals</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1equals</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2216" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2216" bodyend="2235"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a944dbe75d1f50d2191211bf7806bf49f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1forward</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1forward</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1906" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1906" bodyend="1915"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9954531e983ab64905344e8b680bddb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2253" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2253" bodyend="2267"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ae75e360e972e4695555f1f48cccbb2c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jboolean JNICALL</type>
        <definition>jboolean JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1isValid</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1isValid</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2238" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2238" bodyend="2250"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9ed3fd5e998eb312f49d7ded2b1bce5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1left</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1left</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1858" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1858" bodyend="1867"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aee2e75f08752609d094ceb860706510a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1magnitude</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1magnitude</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1930" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1930" bodyend="1942"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6c299c83ec1c059617b8b3162ed603e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1magnitudeSquared</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1magnitudeSquared</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1945" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1945" bodyend="1957"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a43a3fcd36feb7b69c21282f04383804e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1minus</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1minus</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2145" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2145" bodyend="2164"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a73c5e575b7011138e30569a838fd14b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1normalized</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1normalized</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2093" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2093" bodyend="2105"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af69bcfe5d94d82b7a8845f88e9fb089e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1opposite</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1opposite</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2108" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2108" bodyend="2120"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a02132491adfc3cc7ca46c1a14ae46c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1pitch</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1pitch</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2004" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2004" bodyend="2016"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af970a8647b8cb6c5573cbb1241e0cf3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1plus</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1plus</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg2</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2123" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2123" bodyend="2142"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aeb894fe1f312e614a88b06510ba757d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1right</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1right</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1870" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1870" bodyend="1879"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3d7cfebb3bd643365a5cd18510daf566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1roll</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1roll</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2034" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2034" bodyend="2046"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1acebbde38bb18c8e00bad369439a0f60e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1times</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1times</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2167" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2167" bodyend="2181"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a3b384a61c5cecb94809ffd80b623f31c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jstring JNICALL</type>
        <definition>jstring JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1toString</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1toString</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2201" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2201" bodyend="2213"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af15077ec2baa5312b6162b817bd8c6dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1up</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1up</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1894" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1894" bodyend="1903"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af6948da54d38080b70b7ae1631714512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1x_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1x_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2283" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2283" bodyend="2295"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ade047174a5851e09d4a1ada8307517c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1x_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1x_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2270" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2270" bodyend="2280"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a488ba2768d6d5f1fa883214a96143437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1xAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1xAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1822" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1822" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4e92b5fc66d884a2f7bfc89aebdc261f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1y_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1y_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2311" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2311" bodyend="2323"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a52c1930a54d1fa5b2d1c6e03c55cba49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1y_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1y_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2298" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2298" bodyend="2308"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a55631310b5eb017a4bfe4aaf3af13c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1yaw</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1yaw</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2019" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2019" bodyend="2031"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a0d409b6050e658d1595553be3ea97a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1yAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1yAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1834" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1834" bodyend="1843"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ac20a3f6073980ecbba5d7f608355bd61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jfloat JNICALL</type>
        <definition>jfloat JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1z_1get</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1z_1get</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2339" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2339" bodyend="2351"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a9a1d4cdbb6e375d91e1b9c7f95eb063f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void JNICALL</type>
        <definition>void JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1z_1set</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1z_1set</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>jarg1</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jarg1_</declname>
        </param>
        <param>
          <type>jfloat</type>
          <declname>jarg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="2326" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="2326" bodyend="2336"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6a518c1b3a871949770ba75eab437c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1zAxis</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1zAxis</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1846" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1846" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af6b814e3e2faeeec7fc21b3ec1ec12b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong JNICALL</type>
        <definition>jlong JNICALL Java_com_leapmotion_leap_LeapJNI_Vector_1zero</definition>
        <argsstring>(JNIEnv *jenv, jclass jcls)</argsstring>
        <name>Java_com_leapmotion_leap_LeapJNI_Vector_1zero</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>jcls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="1810" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="1810" bodyend="1819"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1afeca8b81dc9f9508ef344fd09d4e87fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; bool &gt;::const_reference</type>
        <definition>static std::vector&lt; bool &gt;::const_reference std_vector_Sl_bool_Sg__get</definition>
        <argsstring>(std::vector&lt; bool &gt; *self, int i)</argsstring>
        <name>std_vector_Sl_bool_Sg__get</name>
        <param>
          <type>std::vector&lt; bool &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="479" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="479" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1adb21823b2db3ab01f39485b5931b8437" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void std_vector_Sl_bool_Sg__set</definition>
        <argsstring>(std::vector&lt; bool &gt; *self, int i, std::vector&lt; bool &gt;::value_type const &amp;val)</argsstring>
        <name>std_vector_Sl_bool_Sg__set</name>
        <param>
          <type>std::vector&lt; bool &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt;::value_type const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="486" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="486" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a6006d24ee9fe3386e4001686cddd520e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;::const_reference</type>
        <definition>static std::vector&lt; double &gt;::const_reference std_vector_Sl_double_Sg__get</definition>
        <argsstring>(std::vector&lt; double &gt; *self, int i)</argsstring>
        <name>std_vector_Sl_double_Sg__get</name>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="535" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="535" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1aa39c436aeaf8bc6fdc112ee8523610e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void std_vector_Sl_double_Sg__set</definition>
        <argsstring>(std::vector&lt; double &gt; *self, int i, std::vector&lt; double &gt;::value_type const &amp;val)</argsstring>
        <name>std_vector_Sl_double_Sg__set</name>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;::value_type const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="542" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="542" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a2de7a3ea84080204a84b97f11b2ae35f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; float &gt;::const_reference</type>
        <definition>static std::vector&lt; float &gt;::const_reference std_vector_Sl_float_Sg__get</definition>
        <argsstring>(std::vector&lt; float &gt; *self, int i)</argsstring>
        <name>std_vector_Sl_float_Sg__get</name>
        <param>
          <type>std::vector&lt; float &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="521" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="521" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ab83599c3a7ef16688de074cca48192d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void std_vector_Sl_float_Sg__set</definition>
        <argsstring>(std::vector&lt; float &gt; *self, int i, std::vector&lt; float &gt;::value_type const &amp;val)</argsstring>
        <name>std_vector_Sl_float_Sg__set</name>
        <param>
          <type>std::vector&lt; float &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::vector&lt; float &gt;::value_type const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="528" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="528" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a4d4fba8fe97d17e660e69e861a4e2c82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;::const_reference</type>
        <definition>static std::vector&lt; int &gt;::const_reference std_vector_Sl_int32_t_Sg__get</definition>
        <argsstring>(std::vector&lt; int32_t &gt; *self, int i)</argsstring>
        <name>std_vector_Sl_int32_t_Sg__get</name>
        <param>
          <type>std::vector&lt; int32_t &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="493" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="493" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a5e6fb7acb2927d230d171db919170dca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void std_vector_Sl_int32_t_Sg__set</definition>
        <argsstring>(std::vector&lt; int32_t &gt; *self, int i, std::vector&lt; int &gt;::value_type const &amp;val)</argsstring>
        <name>std_vector_Sl_int32_t_Sg__set</name>
        <param>
          <type>std::vector&lt; int32_t &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;::value_type const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="500" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="500" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a191c40707995910720e7b8f5f19ac2be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;::const_reference</type>
        <definition>static std::vector&lt; std::string &gt;::const_reference std_vector_Sl_std_string_Sg__get</definition>
        <argsstring>(std::vector&lt; std::string &gt; *self, int i)</argsstring>
        <name>std_vector_Sl_std_string_Sg__get</name>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="549" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="549" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1af0b29b7010eee7189dc8b51c2767b5f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void std_vector_Sl_std_string_Sg__set</definition>
        <argsstring>(std::vector&lt; std::string &gt; *self, int i, std::vector&lt; std::string &gt;::value_type const &amp;val)</argsstring>
        <name>std_vector_Sl_std_string_Sg__set</name>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;::value_type const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="556" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="556" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a883a627f9cb70795974fe946b79f01b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned int &gt;::const_reference</type>
        <definition>static std::vector&lt; unsigned int &gt;::const_reference std_vector_Sl_uint32_t_Sg__get</definition>
        <argsstring>(std::vector&lt; uint32_t &gt; *self, int i)</argsstring>
        <name>std_vector_Sl_uint32_t_Sg__get</name>
        <param>
          <type>std::vector&lt; uint32_t &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="507" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="507" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1ad47a9e3561dd7142b08dfbc47ff45aba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void std_vector_Sl_uint32_t_Sg__set</definition>
        <argsstring>(std::vector&lt; uint32_t &gt; *self, int i, std::vector&lt; unsigned int &gt;::value_type const &amp;val)</argsstring>
        <name>std_vector_Sl_uint32_t_Sg__set</name>
        <param>
          <type>std::vector&lt; uint32_t &gt; *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::vector&lt; unsigned int &gt;::value_type const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="514" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="514" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="_leap__wrap__java_8cpp_1a50835e3dfe68b1dee04cfb8d012a72e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SWIG_JavaThrowException</definition>
        <argsstring>(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg)</argsstring>
        <name>SWIG_JavaThrowException</name>
        <param>
          <type>JNIEnv *</type>
          <declname>jenv</declname>
        </param>
        <param>
          <type>SWIG_JavaExceptionCodes</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" line="231" bodyfile="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp" bodystart="231" bodyend="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>not<sp/>intended<sp/>to<sp/>be<sp/>easily<sp/>readable<sp/>and<sp/>contains<sp/>a<sp/>number<sp/>of<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>coding<sp/>conventions<sp/>designed<sp/>to<sp/>improve<sp/>portability<sp/>and<sp/>efficiency.<sp/>Do<sp/>not<sp/>make</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify<sp/>the<sp/>SWIG<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>interface<sp/>file<sp/>instead.<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(_WIN32)</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"/><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="comment">//<sp/>When<sp/>dynamically<sp/>loading<sp/>the<sp/>Leap<sp/>C#<sp/>DLL,<sp/>set<sp/>the<sp/>DLL<sp/>search<sp/>path<sp/>to<sp/>look<sp/>in</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="comment">//<sp/>the<sp/>same<sp/>the<sp/>directory.<sp/>This<sp/>will<sp/>allow<sp/>loading<sp/>the<sp/>Leap.dll.<sp/>Create<sp/>the</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight class="comment">//<sp/>Leap<sp/>C#<sp/>DLL<sp/>with<sp/>the<sp/>/DELAYLOAD:Leap.dll<sp/>link<sp/>option.</highlight><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"C"</highlight><highlight class="normal"><sp/>BOOL<sp/>WINAPI<sp/>DllMain(</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>_In_<sp/>HINSTANCE<sp/>hinstDLL,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>_In_<sp/>DWORD<sp/>fdwReason,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>_In_<sp/>LPVOID<sp/>lpvReserved)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpvReserved<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TCHAR<sp/>lpPrevPathName[1024];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>restore<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdwReason<sp/>==<sp/>DLL_PROCESS_ATTACH)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TCHAR<sp/>lpPathName[1024];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>GetDllDirectory(static_cast&lt;DWORD&gt;(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lpPrevPathName)<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpPrevPathName);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>len<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lpPrevPathName))<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpPrevPathName[len]<sp/>=<sp/></highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(GetModuleFileName(static_cast&lt;HMODULE&gt;(hinstDLL),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpPathName,<sp/>static_cast&lt;DWORD&gt;(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lpPathName))));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>len<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lpPathName))<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>len;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpPathName[i]<sp/>==<sp/></highlight><highlight class="charliteral">'\\'</highlight><highlight class="normal"><sp/>||<sp/>lpPathName[i]<sp/>==<sp/></highlight><highlight class="charliteral">'/'</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpPathName[i]<sp/>=<sp/></highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore<sp/>=<sp/>SetDllDirectory(lpPathName);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdwReason<sp/>==<sp/>DLL_PROCESS_DETACH)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(restore<sp/>&amp;&amp;<sp/>lpPrevPathName[0]<sp/>!=<sp/></highlight><highlight class="charliteral">'\0'</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDllDirectory(lpPrevPathName);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restore<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>SWIGJAVA</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"/><highlight class="preprocessor">#define<sp/>SWIG_DIRECTORS</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"/><highlight class="comment">/*<sp/>SwigValueWrapper<sp/>is<sp/>described<sp/>in<sp/>swig.swg<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"/><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SwigValueWrapper<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SwigMovePointer<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*ptr;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>SwigMovePointer(T<sp/>*p)<sp/>:<sp/>ptr(p)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>~SwigMovePointer()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ptr;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>SwigMovePointer&amp;<sp/>operator=(SwigMovePointer&amp;<sp/>rhs)<sp/>{<sp/>T*<sp/>oldptr<sp/>=<sp/>ptr;<sp/>ptr<sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>oldptr;<sp/>ptr<sp/>=<sp/>rhs.ptr;<sp/>rhs.ptr<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}<sp/>pointer;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>SwigValueWrapper&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SwigValueWrapper&lt;T&gt;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>SwigValueWrapper(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SwigValueWrapper&lt;T&gt;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>SwigValueWrapper()<sp/>:<sp/>pointer(0)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>SwigValueWrapper&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)<sp/>{<sp/>SwigMovePointer<sp/>tmp(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(t));<sp/>pointer<sp/>=<sp/>tmp;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>T&amp;()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pointer.ptr;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>T<sp/>*operator&amp;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer.ptr;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"/><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/>SwigValueInit()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"/><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>section<sp/>contains<sp/>generic<sp/>SWIG<sp/>labels<sp/>for<sp/>method/variable</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>declarations/attributes,<sp/>and<sp/>other<sp/>compiler<sp/>dependent<sp/>labels.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"/><highlight class="comment">/*<sp/>template<sp/>workaround<sp/>for<sp/>compilers<sp/>that<sp/>cannot<sp/>correctly<sp/>implement<sp/>the<sp/>C++<sp/>standard<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIGTEMPLATEDISAMBIGUATOR</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__SUNPRO_CC)<sp/>&amp;&amp;<sp/>(__SUNPRO_CC<sp/>&lt;=<sp/>0x560)</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SWIGTEMPLATEDISAMBIGUATOR<sp/>template</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__HP_aCC)</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"/><highlight class="comment">/*<sp/>Needed<sp/>even<sp/>with<sp/>`aCC<sp/>-AA'<sp/>when<sp/>`aCC<sp/>-V'<sp/>reports<sp/>HP<sp/>ANSI<sp/>C++<sp/>B3910B<sp/>A.03.55<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"/><highlight class="comment">/*<sp/>If<sp/>we<sp/>find<sp/>a<sp/>maximum<sp/>version<sp/>that<sp/>requires<sp/>this,<sp/>the<sp/>test<sp/>would<sp/>be<sp/>__HP_aCC<sp/>&lt;=<sp/>35500<sp/>for<sp/>A.03.55<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SWIGTEMPLATEDISAMBIGUATOR<sp/>template</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/>define<sp/>SWIGTEMPLATEDISAMBIGUATOR</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"/><highlight class="comment">/*<sp/>inline<sp/>attribute<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIGINLINE</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__cplusplus)<sp/>||<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__STRICT_ANSI__))</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGINLINE<sp/>inline</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGINLINE</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="112"><highlight class="normal"/><highlight class="comment">/*<sp/>attribute<sp/>recognised<sp/>by<sp/>some<sp/>compilers<sp/>to<sp/>avoid<sp/>'unused'<sp/>warnings<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIGUNUSED</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC__)</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>!(defined(__cplusplus))<sp/>||<sp/>(__GNUC__<sp/>&gt;<sp/>3<sp/>||<sp/>(__GNUC__<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>4))</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGUNUSED<sp/>__attribute__<sp/>((__unused__))<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGUNUSED</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>elif<sp/>defined(__ICC)</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGUNUSED<sp/>__attribute__<sp/>((__unused__))<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGUNUSED<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIG_MSC_UNSUPPRESS_4505</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>pragma<sp/>warning(disable<sp/>:<sp/>4505)<sp/></highlight><highlight class="comment">/*<sp/>unreferenced<sp/>local<sp/>function<sp/>has<sp/>been<sp/>removed<sp/>*/</highlight><highlight class="preprocessor"/></codeline>
<codeline lineno="130"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>endif<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIGUNUSEDPARM</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGUNUSEDPARM(p)</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGUNUSEDPARM(p)<sp/>p<sp/>SWIGUNUSED<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"/><highlight class="comment">/*<sp/>internal<sp/>SWIG<sp/>method<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIGINTERN</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>define<sp/>SWIGINTERN<sp/>static<sp/>SWIGUNUSED</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"/><highlight class="comment">/*<sp/>internal<sp/>inline<sp/>SWIG<sp/>method<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIGINTERNINLINE</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>define<sp/>SWIGINTERNINLINE<sp/>SWIGINTERN<sp/>SWIGINLINE</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"/><highlight class="comment">/*<sp/>exporting<sp/>methods<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="152"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>&gt;=<sp/>4)<sp/>||<sp/>(__GNUC__<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>4)</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>GCC_HASCLASSVISIBILITY</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>GCC_HASCLASSVISIBILITY</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="158"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIGEXPORT</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__WIN32__)<sp/>||<sp/>defined(__CYGWIN__)</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(STATIC_LINKED)</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGEXPORT</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGEXPORT<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(GCC_HASCLASSVISIBILITY)</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGEXPORT<sp/>__attribute__<sp/>((visibility("default")))</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>SWIGEXPORT</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"/><highlight class="comment">/*<sp/>calling<sp/>conventions<sp/>for<sp/>Windows<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIGSTDCALL</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__WIN32__)<sp/>||<sp/>defined(__CYGWIN__)</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGSTDCALL<sp/>__stdcall</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SWIGSTDCALL</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>endif<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="183"><highlight class="normal"/><highlight class="comment">/*<sp/>Deal<sp/>with<sp/>Microsoft's<sp/>attempt<sp/>at<sp/>deprecating<sp/>C<sp/>standard<sp/>runtime<sp/>functions<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>!defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(_CRT_SECURE_NO_DEPRECATE)</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>define<sp/>_CRT_SECURE_NO_DEPRECATE</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="188"><highlight class="normal"/><highlight class="comment">/*<sp/>Deal<sp/>with<sp/>Microsoft's<sp/>attempt<sp/>at<sp/>deprecating<sp/>methods<sp/>in<sp/>the<sp/>standard<sp/>C++<sp/>library<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="189"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>!defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(_SCL_SECURE_NO_DEPRECATE)</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>define<sp/>_SCL_SECURE_NO_DEPRECATE</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="193"><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"/></codeline>
<codeline lineno="195"><highlight class="normal"/><highlight class="comment">/*<sp/>Fix<sp/>for<sp/>jlong<sp/>on<sp/>some<sp/>versions<sp/>of<sp/>gcc<sp/>on<sp/>Windows<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__INTEL_COMPILER)</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__int64;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="200"><highlight class="normal"/><highlight class="comment">/*<sp/>Fix<sp/>for<sp/>jlong<sp/>on<sp/>64-bit<sp/>x86<sp/>Solaris<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="201"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__x86_64)</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>ifdef<sp/>_LP64</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/><sp/><sp/>undef<sp/>_LP64</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"/><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;jni.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="208"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="209"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"/></codeline>
<codeline lineno="211"><highlight class="normal"/></codeline>
<codeline lineno="212"><highlight class="normal"/><highlight class="comment">/*<sp/>Support<sp/>for<sp/>throwing<sp/>Java<sp/>exceptions<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"/><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>SWIG_JavaOutOfMemoryError<sp/>=<sp/>1,<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>SWIG_JavaIOException,<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>SWIG_JavaRuntimeException,<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>SWIG_JavaIndexOutOfBoundsException,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>SWIG_JavaArithmeticException,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>SWIG_JavaIllegalArgumentException,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>SWIG_JavaNullPointerException,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>SWIG_JavaDirectorPureVirtual,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>SWIG_JavaUnknownError</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}<sp/>SWIG_JavaExceptionCodes;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"/></codeline>
<codeline lineno="225"><highlight class="normal"/><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>SWIG_JavaExceptionCodes<sp/>code;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*java_exception;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}<sp/>SWIG_JavaExceptions_t;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"/></codeline>
<codeline lineno="231"><highlight class="normal"/><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIGUNUSED<sp/>SWIG_JavaThrowException(JNIEnv<sp/>*jenv,<sp/>SWIG_JavaExceptionCodes<sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>jclass<sp/>excep;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SWIG_JavaExceptions_t<sp/>java_exceptions[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaOutOfMemoryError,<sp/></highlight><highlight class="stringliteral">"java/lang/OutOfMemoryError"</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaIOException,<sp/></highlight><highlight class="stringliteral">"java/io/IOException"</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaRuntimeException,<sp/></highlight><highlight class="stringliteral">"java/lang/RuntimeException"</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/></highlight><highlight class="stringliteral">"java/lang/IndexOutOfBoundsException"</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaArithmeticException,<sp/></highlight><highlight class="stringliteral">"java/lang/ArithmeticException"</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaIllegalArgumentException,<sp/></highlight><highlight class="stringliteral">"java/lang/IllegalArgumentException"</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"java/lang/NullPointerException"</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaDirectorPureVirtual,<sp/></highlight><highlight class="stringliteral">"java/lang/RuntimeException"</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SWIG_JavaUnknownError,<sp/><sp/></highlight><highlight class="stringliteral">"java/lang/UnknownError"</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>(SWIG_JavaExceptionCodes)0,<sp/><sp/></highlight><highlight class="stringliteral">"java/lang/UnknownError"</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SWIG_JavaExceptions_t<sp/>*except_ptr<sp/>=<sp/>java_exceptions;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"/></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(except_ptr-&gt;code<sp/>!=<sp/>code<sp/>&amp;&amp;<sp/>except_ptr-&gt;code)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>except_ptr++;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"/></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>jenv-&gt;ExceptionClear();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>excep<sp/>=<sp/>jenv-&gt;FindClass(except_ptr-&gt;java_exception);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(excep)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;ThrowNew(excep,<sp/>msg);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"/></codeline>
<codeline lineno="257"><highlight class="normal"/><highlight class="comment">/*<sp/>Contract<sp/>support<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"/></codeline>
<codeline lineno="259"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>SWIG_contract_assert(nullreturn,<sp/>expr,<sp/>msg)<sp/>if<sp/>(!(expr))<sp/>{SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIllegalArgumentException,<sp/>msg);<sp/>return<sp/>nullreturn;<sp/>}<sp/>else</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="261"><highlight class="normal"/><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>director.swg</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>support<sp/>for<sp/>director<sp/>classes<sp/>that<sp/>proxy</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>method<sp/>calls<sp/>from<sp/>C++<sp/>to<sp/>Java<sp/>extensions.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="267"><highlight class="normal"/></codeline>
<codeline lineno="268"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="270"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"/><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="272"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Swig<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>object<sp/>wrapper<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JObjectWrapper<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>JObjectWrapper()<sp/>:<sp/>jthis_(NULL),<sp/>weak_global_(true)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"/></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>~JObjectWrapper()<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"/></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jobj,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mem_own,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>weak_global)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!jthis_)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/>weak_global;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jobj)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>((weak_global_<sp/>||<sp/>!mem_own)<sp/>?<sp/>jenv-&gt;NewWeakGlobalRef(jobj)<sp/>:<sp/>jenv-&gt;NewGlobalRef(jobj));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"JObjectWrapper::set("</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jobj<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">",<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(weak_global<sp/>?<sp/></highlight><highlight class="stringliteral">"weak_global"</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">"global_ref"</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">")<sp/>-&gt;<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jthis_<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"JObjectWrapper::set("</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jobj<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">",<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(weak_global<sp/>?<sp/></highlight><highlight class="stringliteral">"weak_global"</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">"global_ref"</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">")<sp/>-&gt;<sp/>already<sp/>set"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"/></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>jobject<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(JNIEnv<sp/>*jenv)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"JObjectWrapper::get("</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jthis_)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>jthis_;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"null"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">")<sp/>-&gt;<sp/>return<sp/>new<sp/>local<sp/>ref"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(jthis_<sp/>?<sp/>jenv-&gt;NewLocalRef(jthis_)<sp/>:<sp/>jthis_);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"/></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>release(JNIEnv<sp/>*jenv)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"JObjectWrapper::release("</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jthis_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"):<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(weak_global_<sp/>?<sp/></highlight><highlight class="stringliteral">"weak<sp/>global<sp/>ref"</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">"global<sp/>ref"</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jthis_)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weak_global_)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;IsSameObject(jthis_,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;DeleteWeakGlobalRef((jweak)jthis_);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;DeleteGlobalRef(jthis_);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"/></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"/></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>jobject<sp/>peek()<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jthis_;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"/></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>proxy<sp/>releases<sp/>ownership<sp/>of<sp/>C++<sp/>object,<sp/>C++<sp/>object<sp/>is<sp/>now</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>responsible<sp/>for<sp/>destruction<sp/>(creates<sp/>NewGlobalRef<sp/>to<sp/>pin<sp/>Java</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxy)<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>java_change_ownership(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jself,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>take_or_release)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(take_or_release)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>takes<sp/>ownership<sp/>of<sp/>C++<sp/>object's<sp/>lifetime.<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!weak_global_)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;DeleteGlobalRef(jthis_);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>jenv-&gt;NewWeakGlobalRef(jself);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>releases<sp/>ownership<sp/>of<sp/>C++<sp/>object's<sp/>lifetime<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weak_global_)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;DeleteWeakGlobalRef((jweak)jthis_);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jthis_<sp/>=<sp/>jenv-&gt;NewGlobalRef(jself);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weak_global_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"/></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>Java<sp/>object<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>jobject<sp/>jthis_;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>or<sp/>global<sp/>reference<sp/>flag<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>weak_global_;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"/></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>director<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Director<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>Java<sp/>virtual<sp/>machine<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>JavaVM<sp/>*swig_jvm_;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"/></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined<sp/>(_MSC_VER)<sp/>&amp;&amp;<sp/>(_MSC_VER&lt;1300)</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JNIEnvWrapper;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JNIEnvWrapper;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Utility<sp/>class<sp/>for<sp/>managing<sp/>the<sp/>JNI<sp/>environment<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JNIEnvWrapper<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Director<sp/>*director_;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>*jenv_;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>env_status;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnvWrapper(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Director<sp/>*director)<sp/>:<sp/>director_(director),<sp/>jenv_(0),<sp/>env_status(0)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(__ANDROID__)</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>**jenv<sp/>=<sp/>&amp;jenv_;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"/><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**jenv<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;jenv_;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env_status<sp/>=<sp/>director_-&gt;swig_jvm_-&gt;GetEnv((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;jenv_,<sp/>JNI_VERSION_1_2);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(SWIG_JAVA_ATTACH_CURRENT_THREAD_AS_DAEMON)</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attach<sp/>a<sp/>daemon<sp/>thread<sp/>to<sp/>the<sp/>JVM.<sp/>Useful<sp/>when<sp/>the<sp/>JVM<sp/>should<sp/>not<sp/>wait<sp/>for<sp/></highlight><highlight class="normal"/></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>thread<sp/>to<sp/>exit<sp/>upon<sp/>shutdown.<sp/>Only<sp/>for<sp/>jdk-1.4<sp/>and<sp/>later.</highlight><highlight class="normal"/></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director_-&gt;swig_jvm_-&gt;AttachCurrentThreadAsDaemon(jenv,<sp/>NULL);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"/><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director_-&gt;swig_jvm_-&gt;AttachCurrentThread(jenv,<sp/>NULL);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~JNIEnvWrapper()<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>!defined(SWIG_JAVA_NO_DETACH_CURRENT_THREAD)</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>JVMs,<sp/>eg<sp/>jdk-1.4.2<sp/>and<sp/>lower<sp/>on<sp/>Solaris<sp/>have<sp/>a<sp/>bug<sp/>and<sp/>crash<sp/>with<sp/>the<sp/>DetachCurrentThread<sp/>call.</highlight><highlight class="normal"/></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>without<sp/>this<sp/>call,<sp/>the<sp/>JVM<sp/>hangs<sp/>on<sp/>exit<sp/>when<sp/>the<sp/>thread<sp/>was<sp/>not<sp/>created<sp/>by<sp/>the<sp/>JVM<sp/>and<sp/>creates<sp/>a<sp/>memory<sp/>leak.</highlight><highlight class="normal"/></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_status<sp/>==<sp/>JNI_EDETACHED)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>director_-&gt;swig_jvm_-&gt;DetachCurrentThread();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>*getJNIEnv()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jenv_;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"/></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Java<sp/>object<sp/>wrapper<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>JObjectWrapper<sp/>swig_self_;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"/></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disconnect<sp/>director<sp/>from<sp/>Java<sp/>object<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swig_disconnect_director_self(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*disconn_method)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnvWrapper<sp/>jnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>*jenv<sp/>=<sp/>jnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jobject<sp/>jobj<sp/>=<sp/>swig_self_.peek();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"Swig::Director::disconnect_director_self("</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jobj<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">")"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(jobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jmethodID<sp/>disconn_meth<sp/>=<sp/>jenv-&gt;GetMethodID(jenv-&gt;GetObjectClass(jobj),<sp/>disconn_method,<sp/></highlight><highlight class="stringliteral">"()V"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disconn_meth)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"/><highlight class="preprocessor">#if<sp/>defined(DEBUG_DIRECTOR_OWNED)</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">"Swig::Director::disconnect_director_self<sp/>upcall<sp/>to<sp/>"</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>disconn_method<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"/><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;CallVoidMethod(jobj,<sp/>disconn_meth);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"/></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>Director(JNIEnv<sp/>*jenv)<sp/>:<sp/>swig_jvm_((JavaVM<sp/>*)<sp/>NULL),<sp/>swig_self_()<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Acquire<sp/>the<sp/>Java<sp/>VM<sp/>pointer<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;GetJavaVM(&amp;swig_jvm_);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"/></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~Director()<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnvWrapper<sp/>jnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JNIEnv<sp/>*jenv<sp/>=<sp/>jnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swig_self_.release(jenv);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"/></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swig_set_self(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jself,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mem_own,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>weak_global)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swig_self_.set(jenv,<sp/>jself,<sp/>mem_own,<sp/>weak_global);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"/></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>jobject<sp/>swig_get_self(JNIEnv<sp/>*jenv)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swig_self_.get(jenv);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"/></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>C++<sp/>object's<sp/>ownership,<sp/>relative<sp/>to<sp/>Java</highlight><highlight class="normal"/></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swig_java_change_ownership(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jself,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>take_or_release)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swig_self_.java_change_ownership(jenv,<sp/>jself,<sp/>take_or_release);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"/></codeline>
<codeline lineno="454"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"/></codeline>
<codeline lineno="455"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="456"><highlight class="normal"/></codeline>
<codeline lineno="457"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Swig<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>jclass<sp/>jclass_LeapJNI<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>jmethodID<sp/>director_methids[5];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"/></codeline>
<codeline lineno="464"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="465"><highlight class="normal"/></codeline>
<codeline lineno="466"><highlight class="normal"/></codeline>
<codeline lineno="467"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="468"><highlight class="normal"/></codeline>
<codeline lineno="469"><highlight class="normal"/></codeline>
<codeline lineno="470"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="471"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="472"><highlight class="normal"/></codeline>
<codeline lineno="473"><highlight class="normal"/></codeline>
<codeline lineno="474"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>C99<sp/>official<sp/>header</highlight><highlight class="normal"/></codeline>
<codeline lineno="475"><highlight class="normal"/></codeline>
<codeline lineno="476"><highlight class="normal"/></codeline>
<codeline lineno="477"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="478"><highlight class="normal"/></codeline>
<codeline lineno="479"><highlight class="normal">SWIGINTERN<sp/>std::vector&lt;<sp/>bool<sp/>&gt;::const_reference<sp/>std_vector_Sl_bool_Sg__get(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)[i];</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal">SWIGINTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>std_vector_Sl_bool_Sg__set(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,std::vector&lt;<sp/>bool<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val){</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*self)[i]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal">SWIGINTERN<sp/>std::vector&lt;<sp/>int<sp/>&gt;::const_reference<sp/>std_vector_Sl_int32_t_Sg__get(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)[i];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">SWIGINTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>std_vector_Sl_int32_t_Sg__set(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,std::vector&lt;<sp/>int<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val){</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*self)[i]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">SWIGINTERN<sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::const_reference<sp/>std_vector_Sl_uint32_t_Sg__get(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)[i];</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal">SWIGINTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>std_vector_Sl_uint32_t_Sg__set(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val){</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*self)[i]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal">SWIGINTERN<sp/>std::vector&lt;<sp/>float<sp/>&gt;::const_reference<sp/>std_vector_Sl_float_Sg__get(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)[i];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal">SWIGINTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>std_vector_Sl_float_Sg__set(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,std::vector&lt;<sp/>float<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val){</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*self)[i]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal">SWIGINTERN<sp/>std::vector&lt;<sp/>double<sp/>&gt;::const_reference<sp/>std_vector_Sl_double_Sg__get(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)[i];</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal">SWIGINTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>std_vector_Sl_double_Sg__set(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,std::vector&lt;<sp/>double<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val){</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*self)[i]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal">SWIGINTERN<sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::const_reference<sp/>std_vector_Sl_std_string_Sg__get(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)[i];</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">SWIGINTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>std_vector_Sl_std_string_Sg__set(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,std::vector&lt;<sp/>std::string<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val){</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>int(self-&gt;size());</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;=0<sp/>&amp;&amp;<sp/>i&lt;size)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*self)[i]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"/></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">"vector<sp/>index<sp/>out<sp/>of<sp/>range"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"/></codeline>
<codeline lineno="564"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>SWIG</highlight></codeline>
<codeline lineno="565"><highlight class="preprocessor"/><highlight class="preprocessor">#include<sp/>"Leap.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="566"><highlight class="normal"/></codeline>
<codeline lineno="567"><highlight class="normal"/></codeline>
<codeline lineno="568"><highlight class="normal"/></codeline>
<codeline lineno="569"><highlight class="normal"/><highlight class="comment">/*<sp/>---------------------------------------------------</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*<sp/>C++<sp/>director<sp/>class<sp/>methods</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*<sp/>---------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="572"><highlight class="normal"/></codeline>
<codeline lineno="573"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>"Leap_wrap_java.h"</highlight><highlight class="normal"/></codeline>
<codeline lineno="574"><highlight class="normal"/></codeline>
<codeline lineno="575"><highlight class="normal">SwigDirector_Listener::SwigDirector_Listener(JNIEnv<sp/>*jenv)<sp/>:<sp/>Leap::Listener(),<sp/>Swig::Director(jenv)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"/></codeline>
<codeline lineno="578"><highlight class="normal">SwigDirector_Listener::~SwigDirector_Listener()<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>swig_disconnect_director_self(</highlight><highlight class="stringliteral">"swigDirectorDisconnect"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"/></codeline>
<codeline lineno="582"><highlight class="normal"/></codeline>
<codeline lineno="583"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onInit(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[0])<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onInit(arg0);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[0],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>upcall<sp/>object"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"/></codeline>
<codeline lineno="604"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onConnect(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[1])<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onConnect(arg0);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[1],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>upcall<sp/>object"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"/></codeline>
<codeline lineno="625"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onDisconnect(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[2])<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onDisconnect(arg0);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[2],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>upcall<sp/>object"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"/></codeline>
<codeline lineno="646"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onExit(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[3])<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onExit(arg0);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[3],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>upcall<sp/>object"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"/></codeline>
<codeline lineno="667"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::onFrame(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>JNIEnvWrapper<sp/>swigjnienv(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>JNIEnv<sp/>*<sp/>jenv<sp/>=<sp/>swigjnienv.getJNIEnv()<sp/>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>jobject<sp/>swigjobj<sp/>=<sp/>(jobject)<sp/>NULL<sp/>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>jlong<sp/>jarg0<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!swig_override[4])<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>Leap::Listener::onFrame(arg0);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>swigjobj<sp/>=<sp/>swig_get_self(jenv);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj<sp/>&amp;&amp;<sp/>jenv-&gt;IsSameObject(swigjobj,<sp/>NULL)<sp/>==<sp/>JNI_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jarg0<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>&amp;arg0;<sp/></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;CallStaticVoidMethod(Swig::jclass_LeapJNI,<sp/>Swig::director_methids[4],<sp/>swigjobj,<sp/>jarg0);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jenv-&gt;ExceptionCheck()<sp/>==<sp/>JNI_TRUE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>upcall<sp/>object"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swigjobj)<sp/>jenv-&gt;DeleteLocalRef(swigjobj);</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"/></codeline>
<codeline lineno="688"><highlight class="normal"/><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwigDirector_Listener::swig_connect_director(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jself,<sp/>jclass<sp/>jcls,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swig_mem_own,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>weak_global)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mname;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mdesc;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>jmethodID<sp/>base_methid;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}<sp/>methods[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"onInit"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Controller;)V"</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"onConnect"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Controller;)V"</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"onDisconnect"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Controller;)V"</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"onExit"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Controller;)V"</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"onFrame"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Controller;)V"</highlight><highlight class="normal">,<sp/>NULL<sp/></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>jclass<sp/>baseclass<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swig_set_self(jenv,<sp/>jself,<sp/>swig_mem_own,<sp/>weak_global))<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!baseclass)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseclass<sp/>=<sp/>jenv-&gt;FindClass(</highlight><highlight class="stringliteral">"com/leapmotion/leap/Listener"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!baseclass)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseclass<sp/>=<sp/>(jclass)<sp/>jenv-&gt;NewGlobalRef(baseclass);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>derived<sp/>=<sp/>(jenv-&gt;IsSameObject(baseclass,<sp/>jcls)<sp/>?<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!methods[i].base_methid)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>methods[i].base_methid<sp/>=<sp/>jenv-&gt;GetMethodID(baseclass,<sp/>methods[i].mname,<sp/>methods[i].mdesc);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!methods[i].base_methid)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swig_override[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(derived)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jmethodID<sp/>methid<sp/>=<sp/>jenv-&gt;GetMethodID(jcls,<sp/>methods[i].mname,<sp/>methods[i].mdesc);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swig_override[i]<sp/>=<sp/>(methid<sp/>!=<sp/>methods[i].base_methid);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jenv-&gt;ExceptionClear();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"/></codeline>
<codeline lineno="735"><highlight class="normal"/></codeline>
<codeline lineno="736"><highlight class="normal"/></codeline>
<codeline lineno="737"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="738"><highlight class="preprocessor"/><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">"C"</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="740"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="741"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1BoolArray_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>bool<sp/>&gt;();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"/></codeline>
<codeline lineno="752"><highlight class="normal"/></codeline>
<codeline lineno="753"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1BoolArray_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;::size_type<sp/>arg1<sp/>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;::size_type)jarg1;<sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>bool<sp/>&gt;(arg1);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"/></codeline>
<codeline lineno="766"><highlight class="normal"/></codeline>
<codeline lineno="767"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_BoolArray_1size(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>bool<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;size();</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"/></codeline>
<codeline lineno="781"><highlight class="normal"/></codeline>
<codeline lineno="782"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_BoolArray_1capacity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>bool<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;capacity();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"/></codeline>
<codeline lineno="796"><highlight class="normal"/></codeline>
<codeline lineno="797"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_BoolArray_1reserve(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;::size_type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;::size_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>(arg1)-&gt;reserve(arg2);</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"/></codeline>
<codeline lineno="809"><highlight class="normal"/></codeline>
<codeline lineno="810"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_BoolArray_1isEmpty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((std::vector&lt;<sp/>bool<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"/></codeline>
<codeline lineno="824"><highlight class="normal"/></codeline>
<codeline lineno="825"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_BoolArray_1clear(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>(arg1)-&gt;clear();</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"/></codeline>
<codeline lineno="835"><highlight class="normal"/></codeline>
<codeline lineno="836"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_BoolArray_1add(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jboolean<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;::value_type<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;::value_type<sp/>temp2<sp/>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>temp2<sp/>=<sp/>jarg2<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;temp2;<sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>(arg1)-&gt;push_back((std::vector&lt;<sp/>bool<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"/></codeline>
<codeline lineno="850"><highlight class="normal"/></codeline>
<codeline lineno="851"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_BoolArray_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;::const_reference<sp/>result;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;::const_reference)std_vector_Sl_bool_Sg__get(arg1,arg2);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"/></codeline>
<codeline lineno="874"><highlight class="normal"/></codeline>
<codeline lineno="875"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_BoolArray_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2,<sp/>jboolean<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;::value_type<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;::value_type<sp/>temp3<sp/>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>temp3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>&amp;temp3;<sp/></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>std_vector_Sl_bool_Sg__set(arg1,arg2,(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"/></codeline>
<codeline lineno="898"><highlight class="normal"/></codeline>
<codeline lineno="899"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1BoolArray(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"/></codeline>
<codeline lineno="908"><highlight class="normal"/></codeline>
<codeline lineno="909"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Int32Array_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;();</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"/></codeline>
<codeline lineno="920"><highlight class="normal"/></codeline>
<codeline lineno="921"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Int32Array_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::size_type<sp/>arg1<sp/>;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>(std::vector&lt;<sp/>int<sp/>&gt;::size_type)jarg1;<sp/></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;(arg1);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"/></codeline>
<codeline lineno="934"><highlight class="normal"/></codeline>
<codeline lineno="935"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Int32Array_1size(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;size();</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"/></codeline>
<codeline lineno="949"><highlight class="normal"/></codeline>
<codeline lineno="950"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Int32Array_1capacity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;capacity();</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"/></codeline>
<codeline lineno="964"><highlight class="normal"/></codeline>
<codeline lineno="965"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Int32Array_1reserve(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::size_type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(std::vector&lt;<sp/>int<sp/>&gt;::size_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>(arg1)-&gt;reserve(arg2);</highlight></codeline>
<codeline lineno="975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"/></codeline>
<codeline lineno="977"><highlight class="normal"/></codeline>
<codeline lineno="978"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Int32Array_1isEmpty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"/></codeline>
<codeline lineno="992"><highlight class="normal"/></codeline>
<codeline lineno="993"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Int32Array_1clear(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>(arg1)-&gt;clear();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"/></codeline>
<codeline lineno="1003"><highlight class="normal"/></codeline>
<codeline lineno="1004"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Int32Array_1add(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::value_type<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::value_type<sp/>temp2<sp/>;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>temp2<sp/>=<sp/>(std::vector&lt;<sp/>int<sp/>&gt;::value_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;temp2;<sp/></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>(arg1)-&gt;push_back((std::vector&lt;<sp/>int<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"/></codeline>
<codeline lineno="1018"><highlight class="normal"/></codeline>
<codeline lineno="1019"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Int32Array_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::value_type<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>int<sp/>&gt;::value_type<sp/>*)<sp/>&amp;std_vector_Sl_int32_t_Sg__get(arg1,arg2);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)*result;<sp/></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"/></codeline>
<codeline lineno="1042"><highlight class="normal"/></codeline>
<codeline lineno="1043"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Int32Array_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2,<sp/>jint<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::value_type<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::value_type<sp/>temp3<sp/>;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>temp3<sp/>=<sp/>(std::vector&lt;<sp/>int<sp/>&gt;::value_type)jarg3;<sp/></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>&amp;temp3;<sp/></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>std_vector_Sl_int32_t_Sg__set(arg1,arg2,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"/></codeline>
<codeline lineno="1066"><highlight class="normal"/></codeline>
<codeline lineno="1067"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Int32Array(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"/></codeline>
<codeline lineno="1076"><highlight class="normal"/></codeline>
<codeline lineno="1077"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1UInt32Array_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;();</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"/></codeline>
<codeline lineno="1088"><highlight class="normal"/></codeline>
<codeline lineno="1089"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1UInt32Array_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::size_type<sp/>arg1<sp/>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>(std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::size_type)jarg1;<sp/></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;(arg1);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"/></codeline>
<codeline lineno="1102"><highlight class="normal"/></codeline>
<codeline lineno="1103"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1size(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;size();</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"/></codeline>
<codeline lineno="1117"><highlight class="normal"/></codeline>
<codeline lineno="1118"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1capacity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;capacity();</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"/></codeline>
<codeline lineno="1132"><highlight class="normal"/></codeline>
<codeline lineno="1133"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1reserve(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::size_type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::size_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>(arg1)-&gt;reserve(arg2);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"/></codeline>
<codeline lineno="1145"><highlight class="normal"/></codeline>
<codeline lineno="1146"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1isEmpty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"/></codeline>
<codeline lineno="1160"><highlight class="normal"/></codeline>
<codeline lineno="1161"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1clear(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>(arg1)-&gt;clear();</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"/></codeline>
<codeline lineno="1171"><highlight class="normal"/></codeline>
<codeline lineno="1172"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1add(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type<sp/>temp2<sp/>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>temp2<sp/>=<sp/>(std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;temp2;<sp/></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>(arg1)-&gt;push_back((std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"/></codeline>
<codeline lineno="1186"><highlight class="normal"/></codeline>
<codeline lineno="1187"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type<sp/>*)<sp/>&amp;std_vector_Sl_uint32_t_Sg__get(arg1,arg2);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)*result;<sp/></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"/></codeline>
<codeline lineno="1210"><highlight class="normal"/></codeline>
<codeline lineno="1211"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_UInt32Array_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2,<sp/>jlong<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type<sp/>temp3<sp/>;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>temp3<sp/>=<sp/>(std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::value_type)jarg3;<sp/></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>&amp;temp3;<sp/></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>std_vector_Sl_uint32_t_Sg__set(arg1,arg2,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"/></codeline>
<codeline lineno="1234"><highlight class="normal"/></codeline>
<codeline lineno="1235"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1UInt32Array(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"/></codeline>
<codeline lineno="1244"><highlight class="normal"/></codeline>
<codeline lineno="1245"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1FloatArray_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>float<sp/>&gt;();</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"/></codeline>
<codeline lineno="1256"><highlight class="normal"/></codeline>
<codeline lineno="1257"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1FloatArray_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::size_type<sp/>arg1<sp/>;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;::size_type)jarg1;<sp/></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>float<sp/>&gt;(arg1);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"/></codeline>
<codeline lineno="1270"><highlight class="normal"/></codeline>
<codeline lineno="1271"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FloatArray_1size(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>float<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;size();</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"/></codeline>
<codeline lineno="1285"><highlight class="normal"/></codeline>
<codeline lineno="1286"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FloatArray_1capacity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>float<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;capacity();</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"/></codeline>
<codeline lineno="1300"><highlight class="normal"/></codeline>
<codeline lineno="1301"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FloatArray_1reserve(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::size_type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;::size_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>(arg1)-&gt;reserve(arg2);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"/></codeline>
<codeline lineno="1313"><highlight class="normal"/></codeline>
<codeline lineno="1314"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FloatArray_1isEmpty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((std::vector&lt;<sp/>float<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"/></codeline>
<codeline lineno="1328"><highlight class="normal"/></codeline>
<codeline lineno="1329"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FloatArray_1clear(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>(arg1)-&gt;clear();</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"/></codeline>
<codeline lineno="1339"><highlight class="normal"/></codeline>
<codeline lineno="1340"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FloatArray_1add(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::value_type<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::value_type<sp/>temp2<sp/>;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>temp2<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;::value_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;temp2;<sp/></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>(arg1)-&gt;push_back((std::vector&lt;<sp/>float<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"/></codeline>
<codeline lineno="1354"><highlight class="normal"/></codeline>
<codeline lineno="1355"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FloatArray_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::value_type<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;::value_type<sp/>*)<sp/>&amp;std_vector_Sl_float_Sg__get(arg1,arg2);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)*result;<sp/></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"/></codeline>
<codeline lineno="1378"><highlight class="normal"/></codeline>
<codeline lineno="1379"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FloatArray_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2,<sp/>jfloat<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::value_type<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;::value_type<sp/>temp3<sp/>;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/>temp3<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;::value_type)jarg3;<sp/></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>&amp;temp3;<sp/></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>std_vector_Sl_float_Sg__set(arg1,arg2,(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"/></codeline>
<codeline lineno="1402"><highlight class="normal"/></codeline>
<codeline lineno="1403"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1FloatArray(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>float<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"/></codeline>
<codeline lineno="1412"><highlight class="normal"/></codeline>
<codeline lineno="1413"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1DoubleArray_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;();</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"/></codeline>
<codeline lineno="1424"><highlight class="normal"/></codeline>
<codeline lineno="1425"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1DoubleArray_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;::size_type<sp/>arg1<sp/>;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;::size_type)jarg1;<sp/></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;(arg1);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"/></codeline>
<codeline lineno="1438"><highlight class="normal"/></codeline>
<codeline lineno="1439"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1size(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>double<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;size();</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"/></codeline>
<codeline lineno="1453"><highlight class="normal"/></codeline>
<codeline lineno="1454"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1capacity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>double<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;capacity();</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"/></codeline>
<codeline lineno="1468"><highlight class="normal"/></codeline>
<codeline lineno="1469"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1reserve(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;::size_type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;::size_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>(arg1)-&gt;reserve(arg2);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"/></codeline>
<codeline lineno="1481"><highlight class="normal"/></codeline>
<codeline lineno="1482"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1isEmpty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((std::vector&lt;<sp/>double<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"/></codeline>
<codeline lineno="1496"><highlight class="normal"/></codeline>
<codeline lineno="1497"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1clear(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/>(arg1)-&gt;clear();</highlight></codeline>
<codeline lineno="1505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"/></codeline>
<codeline lineno="1507"><highlight class="normal"/></codeline>
<codeline lineno="1508"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1add(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jdouble<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;::value_type<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;::value_type<sp/>temp2<sp/>;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>temp2<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;::value_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;temp2;<sp/></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>(arg1)-&gt;push_back((std::vector&lt;<sp/>double<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"/></codeline>
<codeline lineno="1522"><highlight class="normal"/></codeline>
<codeline lineno="1523"><highlight class="normal">SWIGEXPORT<sp/>jdouble<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/>jdouble<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;::value_type<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;::value_type<sp/>*)<sp/>&amp;std_vector_Sl_double_Sg__get(arg1,arg2);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jdouble)*result;<sp/></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"/></codeline>
<codeline lineno="1546"><highlight class="normal"/></codeline>
<codeline lineno="1547"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_DoubleArray_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2,<sp/>jdouble<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;::value_type<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;::value_type<sp/>temp3<sp/>;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>temp3<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;::value_type)jarg3;<sp/></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>&amp;temp3;<sp/></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>std_vector_Sl_double_Sg__set(arg1,arg2,(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"/></codeline>
<codeline lineno="1570"><highlight class="normal"/></codeline>
<codeline lineno="1571"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1DoubleArray(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>double<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"/></codeline>
<codeline lineno="1580"><highlight class="normal"/></codeline>
<codeline lineno="1581"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1StringArray_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;();</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"/></codeline>
<codeline lineno="1592"><highlight class="normal"/></codeline>
<codeline lineno="1593"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1StringArray_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::size_type<sp/>arg1<sp/>;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;::size_type)jarg1;<sp/></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;(arg1);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"/></codeline>
<codeline lineno="1606"><highlight class="normal"/></codeline>
<codeline lineno="1607"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_StringArray_1size(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>std::string<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;size();</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"/></codeline>
<codeline lineno="1621"><highlight class="normal"/></codeline>
<codeline lineno="1622"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_StringArray_1capacity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::size_type<sp/>result;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((std::vector&lt;<sp/>std::string<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;capacity();</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"/></codeline>
<codeline lineno="1636"><highlight class="normal"/></codeline>
<codeline lineno="1637"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_StringArray_1reserve(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::size_type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;::size_type)jarg2;<sp/></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/>(arg1)-&gt;reserve(arg2);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"/></codeline>
<codeline lineno="1649"><highlight class="normal"/></codeline>
<codeline lineno="1650"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_StringArray_1isEmpty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((std::vector&lt;<sp/>std::string<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"/></codeline>
<codeline lineno="1664"><highlight class="normal"/></codeline>
<codeline lineno="1665"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_StringArray_1clear(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/>(arg1)-&gt;clear();</highlight></codeline>
<codeline lineno="1673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"/></codeline>
<codeline lineno="1675"><highlight class="normal"/></codeline>
<codeline lineno="1676"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_StringArray_1add(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::value_type<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/>(arg1)-&gt;push_back((std::vector&lt;<sp/>std::string<sp/>&gt;::value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"/></codeline>
<codeline lineno="1696"><highlight class="normal"/></codeline>
<codeline lineno="1697"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_StringArray_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::value_type<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;::value_type<sp/>*)<sp/>&amp;std_vector_Sl_std_string_Sg__get(arg1,arg2);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF(result-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"/></codeline>
<codeline lineno="1720"><highlight class="normal"/></codeline>
<codeline lineno="1721"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_StringArray_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2,<sp/>jstring<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;::value_type<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg3)<sp/>{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg3_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg3,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3_pstr)<sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/>std::string<sp/>arg3_str(arg3_pstr);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>&amp;arg3_str;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg3,<sp/>arg3_pstr);<sp/></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>std_vector_Sl_std_string_Sg__set(arg1,arg2,(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::out_of_range<sp/>&amp;_e)<sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaIndexOutOfBoundsException,<sp/>(&amp;_e)-&gt;what());</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"/></codeline>
<codeline lineno="1750"><highlight class="normal"/></codeline>
<codeline lineno="1751"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1StringArray(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*arg1<sp/>=<sp/>(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"/></codeline>
<codeline lineno="1760"><highlight class="normal"/></codeline>
<codeline lineno="1761"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector();</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"/></codeline>
<codeline lineno="1772"><highlight class="normal"/></codeline>
<codeline lineno="1773"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jfloat<sp/>jarg1,<sp/>jfloat<sp/>jarg2,<sp/>jfloat<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg1<sp/>;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>(float)jarg1;<sp/></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>(float)jarg3;<sp/></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector(arg1,arg2,arg3);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"/></codeline>
<codeline lineno="1790"><highlight class="normal"/></codeline>
<codeline lineno="1791"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Vector_1_1SWIG_12(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"/></codeline>
<codeline lineno="1809"><highlight class="normal"/></codeline>
<codeline lineno="1810"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1zero(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::zero();</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"/></codeline>
<codeline lineno="1821"><highlight class="normal"/></codeline>
<codeline lineno="1822"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1xAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::xAxis();</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"/></codeline>
<codeline lineno="1833"><highlight class="normal"/></codeline>
<codeline lineno="1834"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1yAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::yAxis();</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"/></codeline>
<codeline lineno="1845"><highlight class="normal"/></codeline>
<codeline lineno="1846"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1zAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::zAxis();</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"/></codeline>
<codeline lineno="1857"><highlight class="normal"/></codeline>
<codeline lineno="1858"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1left(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::left();</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"/></codeline>
<codeline lineno="1869"><highlight class="normal"/></codeline>
<codeline lineno="1870"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1right(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::right();</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"/></codeline>
<codeline lineno="1881"><highlight class="normal"/></codeline>
<codeline lineno="1882"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1down(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::down();</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"/></codeline>
<codeline lineno="1893"><highlight class="normal"/></codeline>
<codeline lineno="1894"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1up(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::up();</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"/></codeline>
<codeline lineno="1905"><highlight class="normal"/></codeline>
<codeline lineno="1906"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1forward(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::forward();</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"/></codeline>
<codeline lineno="1917"><highlight class="normal"/></codeline>
<codeline lineno="1918"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1backward(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>&amp;Leap::Vector::backward();</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"/></codeline>
<codeline lineno="1929"><highlight class="normal"/></codeline>
<codeline lineno="1930"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1magnitude(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;magnitude();</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"/></codeline>
<codeline lineno="1944"><highlight class="normal"/></codeline>
<codeline lineno="1945"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1magnitudeSquared(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;magnitudeSquared();</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"/></codeline>
<codeline lineno="1959"><highlight class="normal"/></codeline>
<codeline lineno="1960"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1distanceTo(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;distanceTo((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"/></codeline>
<codeline lineno="1981"><highlight class="normal"/></codeline>
<codeline lineno="1982"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1angleTo(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;angleTo((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"/></codeline>
<codeline lineno="2003"><highlight class="normal"/></codeline>
<codeline lineno="2004"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1pitch(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pitch();</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"/></codeline>
<codeline lineno="2018"><highlight class="normal"/></codeline>
<codeline lineno="2019"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1yaw(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;yaw();</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"/></codeline>
<codeline lineno="2033"><highlight class="normal"/></codeline>
<codeline lineno="2034"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1roll(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;roll();</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"/></codeline>
<codeline lineno="2048"><highlight class="normal"/></codeline>
<codeline lineno="2049"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1dot(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;dot((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"/></codeline>
<codeline lineno="2070"><highlight class="normal"/></codeline>
<codeline lineno="2071"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1cross(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;cross((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"/></codeline>
<codeline lineno="2092"><highlight class="normal"/></codeline>
<codeline lineno="2093"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1normalized(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;normalized();</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"/></codeline>
<codeline lineno="2107"><highlight class="normal"/></codeline>
<codeline lineno="2108"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1opposite(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>-();</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"/></codeline>
<codeline lineno="2122"><highlight class="normal"/></codeline>
<codeline lineno="2123"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1plus(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>+((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"/></codeline>
<codeline lineno="2144"><highlight class="normal"/></codeline>
<codeline lineno="2145"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1minus(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>-((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"/></codeline>
<codeline lineno="2166"><highlight class="normal"/></codeline>
<codeline lineno="2167"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1times(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>*(arg2);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"/></codeline>
<codeline lineno="2183"><highlight class="normal"/></codeline>
<codeline lineno="2184"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1divide(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>/(arg2);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"/></codeline>
<codeline lineno="2200"><highlight class="normal"/></codeline>
<codeline lineno="2201"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"/></codeline>
<codeline lineno="2215"><highlight class="normal"/></codeline>
<codeline lineno="2216"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"/></codeline>
<codeline lineno="2237"><highlight class="normal"/></codeline>
<codeline lineno="2238"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"/></codeline>
<codeline lineno="2252"><highlight class="normal"/></codeline>
<codeline lineno="2253"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)jarg2;<sp/></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>[](arg2);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"/></codeline>
<codeline lineno="2269"><highlight class="normal"/></codeline>
<codeline lineno="2270"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1x_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;x<sp/>=<sp/>arg2;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"/></codeline>
<codeline lineno="2282"><highlight class="normal"/></codeline>
<codeline lineno="2283"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1x_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)<sp/>((arg1)-&gt;x);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"/></codeline>
<codeline lineno="2297"><highlight class="normal"/></codeline>
<codeline lineno="2298"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1y_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;y<sp/>=<sp/>arg2;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"/></codeline>
<codeline lineno="2310"><highlight class="normal"/></codeline>
<codeline lineno="2311"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1y_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)<sp/>((arg1)-&gt;y);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"/></codeline>
<codeline lineno="2325"><highlight class="normal"/></codeline>
<codeline lineno="2326"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1z_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;z<sp/>=<sp/>arg2;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"/></codeline>
<codeline lineno="2338"><highlight class="normal"/></codeline>
<codeline lineno="2339"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Vector_1z_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)<sp/>((arg1)-&gt;z);</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"/></codeline>
<codeline lineno="2353"><highlight class="normal"/></codeline>
<codeline lineno="2354"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Vector(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"/></codeline>
<codeline lineno="2363"><highlight class="normal"/></codeline>
<codeline lineno="2364"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix();</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"/></codeline>
<codeline lineno="2375"><highlight class="normal"/></codeline>
<codeline lineno="2376"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Matrix<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"/></codeline>
<codeline lineno="2394"><highlight class="normal"/></codeline>
<codeline lineno="2395"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_12(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"/></codeline>
<codeline lineno="2427"><highlight class="normal"/></codeline>
<codeline lineno="2428"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_13(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_,<sp/>jlong<sp/>jarg4,<sp/>jobject<sp/>jarg4_)<sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg4<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/>(void)jarg4_;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg4;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg4)<sp/>{</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg4);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"/></codeline>
<codeline lineno="2467"><highlight class="normal"/></codeline>
<codeline lineno="2468"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_14(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1,arg2);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"/></codeline>
<codeline lineno="2488"><highlight class="normal"/></codeline>
<codeline lineno="2489"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Matrix_1_1SWIG_15(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jfloat<sp/>jarg2,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(float)jarg2;<sp/></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1,arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"/></codeline>
<codeline lineno="2516"><highlight class="normal"/></codeline>
<codeline lineno="2517"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1identity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>&amp;Leap::Matrix::identity();</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"/></codeline>
<codeline lineno="2528"><highlight class="normal"/></codeline>
<codeline lineno="2529"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1setRotation(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jfloat<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>(float)jarg3;<sp/></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/>(arg1)-&gt;setRotation((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"/></codeline>
<codeline lineno="2548"><highlight class="normal"/></codeline>
<codeline lineno="2549"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1transformPoint(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;transformPoint((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"/></codeline>
<codeline lineno="2570"><highlight class="normal"/></codeline>
<codeline lineno="2571"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1transformDirection(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;transformDirection((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"/></codeline>
<codeline lineno="2592"><highlight class="normal"/></codeline>
<codeline lineno="2593"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1rigidInverse(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>result;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rigidInverse();</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Matrix<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"/></codeline>
<codeline lineno="2607"><highlight class="normal"/></codeline>
<codeline lineno="2608"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1times(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>result;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Matrix<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>*((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Matrix<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"/></codeline>
<codeline lineno="2629"><highlight class="normal"/></codeline>
<codeline lineno="2630"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Matrix<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"/></codeline>
<codeline lineno="2651"><highlight class="normal"/></codeline>
<codeline lineno="2652"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Matrix<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"/></codeline>
<codeline lineno="2666"><highlight class="normal"/></codeline>
<codeline lineno="2667"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;<sp/></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;xBasis<sp/>=<sp/>*arg2;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"/></codeline>
<codeline lineno="2680"><highlight class="normal"/></codeline>
<codeline lineno="2681"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1xBasis_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)&amp;<sp/>((arg1)-&gt;xBasis);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"/></codeline>
<codeline lineno="2695"><highlight class="normal"/></codeline>
<codeline lineno="2696"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;<sp/></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;yBasis<sp/>=<sp/>*arg2;</highlight></codeline>
<codeline lineno="2707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"/></codeline>
<codeline lineno="2709"><highlight class="normal"/></codeline>
<codeline lineno="2710"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1yBasis_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)&amp;<sp/>((arg1)-&gt;yBasis);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"/></codeline>
<codeline lineno="2724"><highlight class="normal"/></codeline>
<codeline lineno="2725"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;<sp/></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;zBasis<sp/>=<sp/>*arg2;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"/></codeline>
<codeline lineno="2738"><highlight class="normal"/></codeline>
<codeline lineno="2739"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1zBasis_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)&amp;<sp/>((arg1)-&gt;zBasis);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"/></codeline>
<codeline lineno="2753"><highlight class="normal"/></codeline>
<codeline lineno="2754"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1set(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>(Leap::Vector<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;<sp/></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>(arg1)-&gt;origin<sp/>=<sp/>*arg2;</highlight></codeline>
<codeline lineno="2765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"/></codeline>
<codeline lineno="2767"><highlight class="normal"/></codeline>
<codeline lineno="2768"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Matrix_1origin_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Vector<sp/>*)&amp;<sp/>((arg1)-&gt;origin);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"/></codeline>
<codeline lineno="2782"><highlight class="normal"/></codeline>
<codeline lineno="2783"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Matrix(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>*arg1<sp/>=<sp/>(Leap::Matrix<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Matrix<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"/></codeline>
<codeline lineno="2792"><highlight class="normal"/></codeline>
<codeline lineno="2793"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Pointable<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable();</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"/></codeline>
<codeline lineno="2804"><highlight class="normal"/></codeline>
<codeline lineno="2805"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"/></codeline>
<codeline lineno="2819"><highlight class="normal"/></codeline>
<codeline lineno="2820"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame();</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"/></codeline>
<codeline lineno="2834"><highlight class="normal"/></codeline>
<codeline lineno="2835"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1hand(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Hand<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;hand();</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Hand((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Hand<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"/></codeline>
<codeline lineno="2849"><highlight class="normal"/></codeline>
<codeline lineno="2850"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1tipPosition(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tipPosition();</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"/></codeline>
<codeline lineno="2864"><highlight class="normal"/></codeline>
<codeline lineno="2865"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1tipVelocity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tipVelocity();</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"/></codeline>
<codeline lineno="2879"><highlight class="normal"/></codeline>
<codeline lineno="2880"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"/></codeline>
<codeline lineno="2894"><highlight class="normal"/></codeline>
<codeline lineno="2895"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1width(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;width();</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"/></codeline>
<codeline lineno="2909"><highlight class="normal"/></codeline>
<codeline lineno="2910"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1length(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;length();</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"/></codeline>
<codeline lineno="2924"><highlight class="normal"/></codeline>
<codeline lineno="2925"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1isFinger(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isFinger();</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"/></codeline>
<codeline lineno="2939"><highlight class="normal"/></codeline>
<codeline lineno="2940"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1isTool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isTool();</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"/></codeline>
<codeline lineno="2954"><highlight class="normal"/></codeline>
<codeline lineno="2955"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"/></codeline>
<codeline lineno="2969"><highlight class="normal"/></codeline>
<codeline lineno="2970"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>&amp;Leap::Pointable::invalid();</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"/></codeline>
<codeline lineno="2981"><highlight class="normal"/></codeline>
<codeline lineno="2982"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"/></codeline>
<codeline lineno="3003"><highlight class="normal"/></codeline>
<codeline lineno="3004"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"/></codeline>
<codeline lineno="3018"><highlight class="normal"/></codeline>
<codeline lineno="3019"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>(Leap::Pointable<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"/></codeline>
<codeline lineno="3028"><highlight class="normal"/></codeline>
<codeline lineno="3029"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Finger<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger();</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"/></codeline>
<codeline lineno="3040"><highlight class="normal"/></codeline>
<codeline lineno="3041"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Finger_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Finger<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"/></codeline>
<codeline lineno="3059"><highlight class="normal"/></codeline>
<codeline lineno="3060"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Finger_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Finger<sp/>*)<sp/>&amp;Leap::Finger::invalid();</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"/></codeline>
<codeline lineno="3071"><highlight class="normal"/></codeline>
<codeline lineno="3072"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Finger_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*arg1<sp/>=<sp/>(Leap::Finger<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Finger<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Finger<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"/></codeline>
<codeline lineno="3086"><highlight class="normal"/></codeline>
<codeline lineno="3087"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Finger(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>*arg1<sp/>=<sp/>(Leap::Finger<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Finger<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"/></codeline>
<codeline lineno="3096"><highlight class="normal"/></codeline>
<codeline lineno="3097"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Tool<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool();</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"/></codeline>
<codeline lineno="3108"><highlight class="normal"/></codeline>
<codeline lineno="3109"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Tool_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Tool<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"/></codeline>
<codeline lineno="3127"><highlight class="normal"/></codeline>
<codeline lineno="3128"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Tool_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Tool<sp/>*)<sp/>&amp;Leap::Tool::invalid();</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"/></codeline>
<codeline lineno="3139"><highlight class="normal"/></codeline>
<codeline lineno="3140"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Tool_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*arg1<sp/>=<sp/>(Leap::Tool<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Tool<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Tool<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"/></codeline>
<codeline lineno="3154"><highlight class="normal"/></codeline>
<codeline lineno="3155"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Tool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>*arg1<sp/>=<sp/>(Leap::Tool<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Tool<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"/></codeline>
<codeline lineno="3164"><highlight class="normal"/></codeline>
<codeline lineno="3165"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Hand(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Hand<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Hand();</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"/></codeline>
<codeline lineno="3176"><highlight class="normal"/></codeline>
<codeline lineno="3177"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"/></codeline>
<codeline lineno="3191"><highlight class="normal"/></codeline>
<codeline lineno="3192"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame();</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"/></codeline>
<codeline lineno="3206"><highlight class="normal"/></codeline>
<codeline lineno="3207"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1pointables(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::PointableList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointables();</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::PointableList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::PointableList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"/></codeline>
<codeline lineno="3221"><highlight class="normal"/></codeline>
<codeline lineno="3222"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable(arg2);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"/></codeline>
<codeline lineno="3238"><highlight class="normal"/></codeline>
<codeline lineno="3239"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1fingers(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::FingerList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;fingers();</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/>*(Leap::FingerList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::FingerList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::FingerList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"/></codeline>
<codeline lineno="3253"><highlight class="normal"/></codeline>
<codeline lineno="3254"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1finger(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>result;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;finger(arg2);</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Finger<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"/></codeline>
<codeline lineno="3270"><highlight class="normal"/></codeline>
<codeline lineno="3271"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1tools(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::ToolList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tools();</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/>*(Leap::ToolList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ToolList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::ToolList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"/></codeline>
<codeline lineno="3285"><highlight class="normal"/></codeline>
<codeline lineno="3286"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1tool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>result;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tool(arg2);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Tool<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"/></codeline>
<codeline lineno="3302"><highlight class="normal"/></codeline>
<codeline lineno="3303"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1palmPosition(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;palmPosition();</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"/></codeline>
<codeline lineno="3317"><highlight class="normal"/></codeline>
<codeline lineno="3318"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1palmVelocity(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;palmVelocity();</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"/></codeline>
<codeline lineno="3332"><highlight class="normal"/></codeline>
<codeline lineno="3333"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1palmNormal(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;palmNormal();</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"/></codeline>
<codeline lineno="3347"><highlight class="normal"/></codeline>
<codeline lineno="3348"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"/></codeline>
<codeline lineno="3362"><highlight class="normal"/></codeline>
<codeline lineno="3363"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1sphereCenter(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;sphereCenter();</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"/></codeline>
<codeline lineno="3377"><highlight class="normal"/></codeline>
<codeline lineno="3378"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1sphereRadius(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;sphereRadius();</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"/></codeline>
<codeline lineno="3392"><highlight class="normal"/></codeline>
<codeline lineno="3393"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1translation(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;translation((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"/></codeline>
<codeline lineno="3414"><highlight class="normal"/></codeline>
<codeline lineno="3415"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAxis((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"/></codeline>
<codeline lineno="3436"><highlight class="normal"/></codeline>
<codeline lineno="3437"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAngle((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"/></codeline>
<codeline lineno="3458"><highlight class="normal"/></codeline>
<codeline lineno="3459"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationAngle_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAngle((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"/></codeline>
<codeline lineno="3487"><highlight class="normal"/></codeline>
<codeline lineno="3488"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1rotationMatrix(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>result;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationMatrix((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Matrix<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"/></codeline>
<codeline lineno="3509"><highlight class="normal"/></codeline>
<codeline lineno="3510"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1scaleFactor(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;scaleFactor((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"/></codeline>
<codeline lineno="3531"><highlight class="normal"/></codeline>
<codeline lineno="3532"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"/></codeline>
<codeline lineno="3546"><highlight class="normal"/></codeline>
<codeline lineno="3547"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>&amp;Leap::Hand::invalid();</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"/></codeline>
<codeline lineno="3558"><highlight class="normal"/></codeline>
<codeline lineno="3559"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Hand<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"/></codeline>
<codeline lineno="3580"><highlight class="normal"/></codeline>
<codeline lineno="3581"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Hand<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"/></codeline>
<codeline lineno="3595"><highlight class="normal"/></codeline>
<codeline lineno="3596"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Hand(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/>Leap::Hand<sp/>*arg1<sp/>=<sp/>(Leap::Hand<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"/></codeline>
<codeline lineno="3605"><highlight class="normal"/></codeline>
<codeline lineno="3606"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Gesture();</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"/></codeline>
<codeline lineno="3617"><highlight class="normal"/></codeline>
<codeline lineno="3618"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Gesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Gesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"/></codeline>
<codeline lineno="3636"><highlight class="normal"/></codeline>
<codeline lineno="3637"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1type(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;type();</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"/></codeline>
<codeline lineno="3651"><highlight class="normal"/></codeline>
<codeline lineno="3652"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1state(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/>Leap::Gesture::State<sp/>result;</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::State)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;state();</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"/></codeline>
<codeline lineno="3666"><highlight class="normal"/></codeline>
<codeline lineno="3667"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"/></codeline>
<codeline lineno="3681"><highlight class="normal"/></codeline>
<codeline lineno="3682"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1duration(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/>int64_t<sp/>result;</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int64_t)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;duration();</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"/></codeline>
<codeline lineno="3696"><highlight class="normal"/></codeline>
<codeline lineno="3697"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1durationSeconds(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;durationSeconds();</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"/></codeline>
<codeline lineno="3711"><highlight class="normal"/></codeline>
<codeline lineno="3712"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame();</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"/></codeline>
<codeline lineno="3726"><highlight class="normal"/></codeline>
<codeline lineno="3727"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1hands(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::HandList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;hands();</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/>*(Leap::HandList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::HandList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::HandList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"/></codeline>
<codeline lineno="3741"><highlight class="normal"/></codeline>
<codeline lineno="3742"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1pointables(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::PointableList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointables();</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::PointableList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::PointableList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"/></codeline>
<codeline lineno="3756"><highlight class="normal"/></codeline>
<codeline lineno="3757"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"/></codeline>
<codeline lineno="3771"><highlight class="normal"/></codeline>
<codeline lineno="3772"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"/></codeline>
<codeline lineno="3793"><highlight class="normal"/></codeline>
<codeline lineno="3794"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"/></codeline>
<codeline lineno="3808"><highlight class="normal"/></codeline>
<codeline lineno="3809"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>&amp;Leap::Gesture::invalid();</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"/></codeline>
<codeline lineno="3820"><highlight class="normal"/></codeline>
<codeline lineno="3821"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Gesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>(Leap::Gesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"/></codeline>
<codeline lineno="3830"><highlight class="normal"/></codeline>
<codeline lineno="3831"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1classType(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)Leap::SwipeGesture::classType();</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"/></codeline>
<codeline lineno="3842"><highlight class="normal"/></codeline>
<codeline lineno="3843"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::SwipeGesture();</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/>*(Leap::SwipeGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"/></codeline>
<codeline lineno="3854"><highlight class="normal"/></codeline>
<codeline lineno="3855"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1SwipeGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::SwipeGesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/>*(Leap::SwipeGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"/></codeline>
<codeline lineno="3873"><highlight class="normal"/></codeline>
<codeline lineno="3874"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1startPosition(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;startPosition();</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"/></codeline>
<codeline lineno="3888"><highlight class="normal"/></codeline>
<codeline lineno="3889"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1position(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;position();</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"/></codeline>
<codeline lineno="3903"><highlight class="normal"/></codeline>
<codeline lineno="3904"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"/></codeline>
<codeline lineno="3918"><highlight class="normal"/></codeline>
<codeline lineno="3919"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1speed(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;speed();</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"/></codeline>
<codeline lineno="3933"><highlight class="normal"/></codeline>
<codeline lineno="3934"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::SwipeGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable();</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"/></codeline>
<codeline lineno="3948"><highlight class="normal"/></codeline>
<codeline lineno="3949"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1SwipeGesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/>Leap::SwipeGesture<sp/>*arg1<sp/>=<sp/>(Leap::SwipeGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="3956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"/></codeline>
<codeline lineno="3958"><highlight class="normal"/></codeline>
<codeline lineno="3959"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1classType(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)Leap::CircleGesture::classType();</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"/></codeline>
<codeline lineno="3970"><highlight class="normal"/></codeline>
<codeline lineno="3971"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::CircleGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::CircleGesture();</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/>*(Leap::CircleGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"/></codeline>
<codeline lineno="3982"><highlight class="normal"/></codeline>
<codeline lineno="3983"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1CircleGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::CircleGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::CircleGesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/>*(Leap::CircleGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="3999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"/></codeline>
<codeline lineno="4001"><highlight class="normal"/></codeline>
<codeline lineno="4002"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1center(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;center();</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"/></codeline>
<codeline lineno="4016"><highlight class="normal"/></codeline>
<codeline lineno="4017"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1normal(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;normal();</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"/></codeline>
<codeline lineno="4031"><highlight class="normal"/></codeline>
<codeline lineno="4032"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1progress(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;progress();</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"/></codeline>
<codeline lineno="4046"><highlight class="normal"/></codeline>
<codeline lineno="4047"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1radius(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;radius();</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"/></codeline>
<codeline lineno="4061"><highlight class="normal"/></codeline>
<codeline lineno="4062"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::CircleGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable();</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"/></codeline>
<codeline lineno="4076"><highlight class="normal"/></codeline>
<codeline lineno="4077"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1CircleGesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/>Leap::CircleGesture<sp/>*arg1<sp/>=<sp/>(Leap::CircleGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"/></codeline>
<codeline lineno="4086"><highlight class="normal"/></codeline>
<codeline lineno="4087"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1classType(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)Leap::ScreenTapGesture::classType();</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"/></codeline>
<codeline lineno="4098"><highlight class="normal"/></codeline>
<codeline lineno="4099"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ScreenTapGesture();</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"/></codeline>
<codeline lineno="4110"><highlight class="normal"/></codeline>
<codeline lineno="4111"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1ScreenTapGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ScreenTapGesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"/></codeline>
<codeline lineno="4129"><highlight class="normal"/></codeline>
<codeline lineno="4130"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1position(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;position();</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"/></codeline>
<codeline lineno="4144"><highlight class="normal"/></codeline>
<codeline lineno="4145"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"/></codeline>
<codeline lineno="4159"><highlight class="normal"/></codeline>
<codeline lineno="4160"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1progress(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::ScreenTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;progress();</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"/></codeline>
<codeline lineno="4174"><highlight class="normal"/></codeline>
<codeline lineno="4175"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable();</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"/></codeline>
<codeline lineno="4189"><highlight class="normal"/></codeline>
<codeline lineno="4190"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1ScreenTapGesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/>Leap::ScreenTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::ScreenTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"/></codeline>
<codeline lineno="4199"><highlight class="normal"/></codeline>
<codeline lineno="4200"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1classType(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>result;</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Gesture::Type)Leap::KeyTapGesture::classType();</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"/></codeline>
<codeline lineno="4211"><highlight class="normal"/></codeline>
<codeline lineno="4212"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::KeyTapGesture();</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"/></codeline>
<codeline lineno="4223"><highlight class="normal"/></codeline>
<codeline lineno="4224"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1KeyTapGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/>Leap::Gesture<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Gesture<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::KeyTapGesture((Leap::Gesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg1);</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"/></codeline>
<codeline lineno="4242"><highlight class="normal"/></codeline>
<codeline lineno="4243"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1position(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::KeyTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;position();</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"/></codeline>
<codeline lineno="4257"><highlight class="normal"/></codeline>
<codeline lineno="4258"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1direction(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::KeyTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;direction();</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"/></codeline>
<codeline lineno="4272"><highlight class="normal"/></codeline>
<codeline lineno="4273"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1progress(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::KeyTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;progress();</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"/></codeline>
<codeline lineno="4287"><highlight class="normal"/></codeline>
<codeline lineno="4288"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::KeyTapGesture<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable();</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"/></codeline>
<codeline lineno="4302"><highlight class="normal"/></codeline>
<codeline lineno="4303"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1KeyTapGesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/>Leap::KeyTapGesture<sp/>*arg1<sp/>=<sp/>(Leap::KeyTapGesture<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"/></codeline>
<codeline lineno="4312"><highlight class="normal"/></codeline>
<codeline lineno="4313"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Screen(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Screen<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen();</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"/></codeline>
<codeline lineno="4324"><highlight class="normal"/></codeline>
<codeline lineno="4325"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"/></codeline>
<codeline lineno="4339"><highlight class="normal"/></codeline>
<codeline lineno="4340"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jboolean<sp/>jarg3,<sp/>jfloat<sp/>jarg4)<sp/>{</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg4<sp/>;</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>(float)jarg4;<sp/></highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;intersect((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3,arg4);</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"/></codeline>
<codeline lineno="4365"><highlight class="normal"/></codeline>
<codeline lineno="4366"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jboolean<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;intersect((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3);</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"/></codeline>
<codeline lineno="4389"><highlight class="normal"/></codeline>
<codeline lineno="4390"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_12(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_,<sp/>jboolean<sp/>jarg4,<sp/>jfloat<sp/>jarg5)<sp/>{</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg4<sp/>;</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg5<sp/>;</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>jarg4<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/>arg5<sp/>=<sp/>(float)jarg5;<sp/></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;intersect((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3,arg4,arg5);</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"/></codeline>
<codeline lineno="4422"><highlight class="normal"/></codeline>
<codeline lineno="4423"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1intersect_1_1SWIG_13(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_,<sp/>jboolean<sp/>jarg4)<sp/>{</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg4<sp/>;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>jarg4<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;intersect((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3,arg4);</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"/></codeline>
<codeline lineno="4453"><highlight class="normal"/></codeline>
<codeline lineno="4454"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jboolean<sp/>jarg3,<sp/>jfloat<sp/>jarg4)<sp/>{</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arg4<sp/>;</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/>arg4<sp/>=<sp/>(float)jarg4;<sp/></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;project((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3,arg4);</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"/></codeline>
<codeline lineno="4479"><highlight class="normal"/></codeline>
<codeline lineno="4480"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1project_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jboolean<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;project((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,arg3);</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"/></codeline>
<codeline lineno="4503"><highlight class="normal"/></codeline>
<codeline lineno="4504"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1horizontalAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;horizontalAxis();</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"/></codeline>
<codeline lineno="4518"><highlight class="normal"/></codeline>
<codeline lineno="4519"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1verticalAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;verticalAxis();</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"/></codeline>
<codeline lineno="4533"><highlight class="normal"/></codeline>
<codeline lineno="4534"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1bottomLeftCorner(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;bottomLeftCorner();</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"/></codeline>
<codeline lineno="4548"><highlight class="normal"/></codeline>
<codeline lineno="4549"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1normal(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;normal();</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"/></codeline>
<codeline lineno="4563"><highlight class="normal"/></codeline>
<codeline lineno="4564"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1widthPixels(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;widthPixels();</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"/></codeline>
<codeline lineno="4578"><highlight class="normal"/></codeline>
<codeline lineno="4579"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1heightPixels(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;heightPixels();</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"/></codeline>
<codeline lineno="4593"><highlight class="normal"/></codeline>
<codeline lineno="4594"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1distanceToPoint(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;distanceToPoint((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"/></codeline>
<codeline lineno="4615"><highlight class="normal"/></codeline>
<codeline lineno="4616"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"/></codeline>
<codeline lineno="4630"><highlight class="normal"/></codeline>
<codeline lineno="4631"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>&amp;Leap::Screen::invalid();</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"/></codeline>
<codeline lineno="4642"><highlight class="normal"/></codeline>
<codeline lineno="4643"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Screen<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"/></codeline>
<codeline lineno="4664"><highlight class="normal"/></codeline>
<codeline lineno="4665"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Screen<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"/></codeline>
<codeline lineno="4679"><highlight class="normal"/></codeline>
<codeline lineno="4680"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Screen(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/>Leap::Screen<sp/>*arg1<sp/>=<sp/>(Leap::Screen<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"/></codeline>
<codeline lineno="4689"><highlight class="normal"/></codeline>
<codeline lineno="4690"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1PointableList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::PointableList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::PointableList();</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"/></codeline>
<codeline lineno="4701"><highlight class="normal"/></codeline>
<codeline lineno="4702"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::PointableList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"/></codeline>
<codeline lineno="4716"><highlight class="normal"/></codeline>
<codeline lineno="4717"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::PointableList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"/></codeline>
<codeline lineno="4731"><highlight class="normal"/></codeline>
<codeline lineno="4732"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::PointableList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"/></codeline>
<codeline lineno="4748"><highlight class="normal"/></codeline>
<codeline lineno="4749"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::PointableList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::PointableList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"/></codeline>
<codeline lineno="4770"><highlight class="normal"/></codeline>
<codeline lineno="4771"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::FingerList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"/></codeline>
<codeline lineno="4792"><highlight class="normal"/></codeline>
<codeline lineno="4793"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1append_1_1SWIG_12(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::ToolList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"/></codeline>
<codeline lineno="4814"><highlight class="normal"/></codeline>
<codeline lineno="4815"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1PointableList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/>Leap::PointableList<sp/>*arg1<sp/>=<sp/>(Leap::PointableList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"/></codeline>
<codeline lineno="4824"><highlight class="normal"/></codeline>
<codeline lineno="4825"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1FingerList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::FingerList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::FingerList();</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/>*(Leap::FingerList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"/></codeline>
<codeline lineno="4836"><highlight class="normal"/></codeline>
<codeline lineno="4837"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"/></codeline>
<codeline lineno="4851"><highlight class="normal"/></codeline>
<codeline lineno="4852"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"/></codeline>
<codeline lineno="4866"><highlight class="normal"/></codeline>
<codeline lineno="4867"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>result;</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Finger<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"/></codeline>
<codeline lineno="4883"><highlight class="normal"/></codeline>
<codeline lineno="4884"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1append(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::FingerList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::FingerList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/>*(Leap::FingerList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"/></codeline>
<codeline lineno="4905"><highlight class="normal"/></codeline>
<codeline lineno="4906"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1FingerList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/>Leap::FingerList<sp/>*arg1<sp/>=<sp/>(Leap::FingerList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="4913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"/></codeline>
<codeline lineno="4915"><highlight class="normal"/></codeline>
<codeline lineno="4916"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1ToolList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ToolList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ToolList();</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/>*(Leap::ToolList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"/></codeline>
<codeline lineno="4927"><highlight class="normal"/></codeline>
<codeline lineno="4928"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"/></codeline>
<codeline lineno="4942"><highlight class="normal"/></codeline>
<codeline lineno="4943"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"/></codeline>
<codeline lineno="4957"><highlight class="normal"/></codeline>
<codeline lineno="4958"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>result;</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Tool<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"/></codeline>
<codeline lineno="4974"><highlight class="normal"/></codeline>
<codeline lineno="4975"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1append(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::ToolList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::ToolList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/>*(Leap::ToolList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="4994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"/></codeline>
<codeline lineno="4996"><highlight class="normal"/></codeline>
<codeline lineno="4997"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1ToolList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/>Leap::ToolList<sp/>*arg1<sp/>=<sp/>(Leap::ToolList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="5004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"/></codeline>
<codeline lineno="5006"><highlight class="normal"/></codeline>
<codeline lineno="5007"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1HandList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::HandList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::HandList();</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/>*(Leap::HandList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"/></codeline>
<codeline lineno="5018"><highlight class="normal"/></codeline>
<codeline lineno="5019"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::HandList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"/></codeline>
<codeline lineno="5033"><highlight class="normal"/></codeline>
<codeline lineno="5034"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::HandList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"/></codeline>
<codeline lineno="5048"><highlight class="normal"/></codeline>
<codeline lineno="5049"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Hand<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::HandList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Hand((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Hand<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"/></codeline>
<codeline lineno="5065"><highlight class="normal"/></codeline>
<codeline lineno="5066"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1append(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::HandList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::HandList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/>*(Leap::HandList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"/></codeline>
<codeline lineno="5087"><highlight class="normal"/></codeline>
<codeline lineno="5088"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1HandList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/>Leap::HandList<sp/>*arg1<sp/>=<sp/>(Leap::HandList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"/></codeline>
<codeline lineno="5097"><highlight class="normal"/></codeline>
<codeline lineno="5098"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1GestureList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::GestureList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::GestureList();</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/>*(Leap::GestureList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"/></codeline>
<codeline lineno="5109"><highlight class="normal"/></codeline>
<codeline lineno="5110"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::GestureList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"/></codeline>
<codeline lineno="5124"><highlight class="normal"/></codeline>
<codeline lineno="5125"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::GestureList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"/></codeline>
<codeline lineno="5139"><highlight class="normal"/></codeline>
<codeline lineno="5140"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Gesture<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::GestureList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Gesture((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Gesture<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"/></codeline>
<codeline lineno="5156"><highlight class="normal"/></codeline>
<codeline lineno="5157"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1append(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::GestureList<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>&amp;(arg1)-&gt;append((Leap::GestureList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/>*(Leap::GestureList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"/></codeline>
<codeline lineno="5178"><highlight class="normal"/></codeline>
<codeline lineno="5179"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1GestureList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/>Leap::GestureList<sp/>*arg1<sp/>=<sp/>(Leap::GestureList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="5186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"/></codeline>
<codeline lineno="5188"><highlight class="normal"/></codeline>
<codeline lineno="5189"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1ScreenList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::ScreenList<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ScreenList();</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/>*(Leap::ScreenList<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"/></codeline>
<codeline lineno="5200"><highlight class="normal"/></codeline>
<codeline lineno="5201"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1count(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int)((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;count();</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"/></codeline>
<codeline lineno="5215"><highlight class="normal"/></codeline>
<codeline lineno="5216"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1empty(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;empty();</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"/></codeline>
<codeline lineno="5230"><highlight class="normal"/></codeline>
<codeline lineno="5231"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1get(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Screen<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;operator<sp/>[](arg2);</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Screen<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"/></codeline>
<codeline lineno="5247"><highlight class="normal"/></codeline>
<codeline lineno="5248"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/>Leap::Pointable<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Screen<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Pointable<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;closestScreenHit((Leap::Pointable<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Screen<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"/></codeline>
<codeline lineno="5269"><highlight class="normal"/></codeline>
<codeline lineno="5270"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreenHit_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Screen<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;closestScreenHit((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Screen<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"/></codeline>
<codeline lineno="5298"><highlight class="normal"/></codeline>
<codeline lineno="5299"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1closestScreen(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Screen<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::ScreenList<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;closestScreen((Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/>*(Leap::Screen<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Screen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Screen<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"/></codeline>
<codeline lineno="5320"><highlight class="normal"/></codeline>
<codeline lineno="5321"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1ScreenList(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/>Leap::ScreenList<sp/>*arg1<sp/>=<sp/>(Leap::ScreenList<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="5328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"/></codeline>
<codeline lineno="5330"><highlight class="normal"/></codeline>
<codeline lineno="5331"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Frame<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame();</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"/></codeline>
<codeline lineno="5342"><highlight class="normal"/></codeline>
<codeline lineno="5343"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1id(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/>int64_t<sp/>result;</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int64_t)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"/></codeline>
<codeline lineno="5357"><highlight class="normal"/></codeline>
<codeline lineno="5358"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1timestamp(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/>int64_t<sp/>result;</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int64_t)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;timestamp();</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"/></codeline>
<codeline lineno="5372"><highlight class="normal"/></codeline>
<codeline lineno="5373"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1hands(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::HandList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;hands();</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/>*(Leap::HandList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::HandList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::HandList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"/></codeline>
<codeline lineno="5387"><highlight class="normal"/></codeline>
<codeline lineno="5388"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1hand(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Hand<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;hand(arg2);</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/>*(Leap::Hand<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Hand((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Hand<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"/></codeline>
<codeline lineno="5404"><highlight class="normal"/></codeline>
<codeline lineno="5405"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1pointables(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::PointableList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointables();</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/>*(Leap::PointableList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::PointableList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::PointableList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"/></codeline>
<codeline lineno="5419"><highlight class="normal"/></codeline>
<codeline lineno="5420"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1pointable(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Pointable<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;pointable(arg2);</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Pointable((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Pointable<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"/></codeline>
<codeline lineno="5436"><highlight class="normal"/></codeline>
<codeline lineno="5437"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1fingers(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::FingerList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;fingers();</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/>*(Leap::FingerList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::FingerList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::FingerList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"/></codeline>
<codeline lineno="5451"><highlight class="normal"/></codeline>
<codeline lineno="5452"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1finger(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/>Leap::Finger<sp/>result;</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;finger(arg2);</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/>*(Leap::Finger<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Finger((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Finger<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"/></codeline>
<codeline lineno="5468"><highlight class="normal"/></codeline>
<codeline lineno="5469"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1tools(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::ToolList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tools();</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/>*(Leap::ToolList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ToolList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::ToolList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"/></codeline>
<codeline lineno="5483"><highlight class="normal"/></codeline>
<codeline lineno="5484"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1tool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/>Leap::Tool<sp/>result;</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;tool(arg2);</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/>*(Leap::Tool<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Tool((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Tool<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"/></codeline>
<codeline lineno="5500"><highlight class="normal"/></codeline>
<codeline lineno="5501"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1gesture(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/>int32_t<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Gesture<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int32_t)jarg2;<sp/></highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;gesture(arg2);</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Gesture((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Gesture<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"/></codeline>
<codeline lineno="5517"><highlight class="normal"/></codeline>
<codeline lineno="5518"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::GestureList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;gestures();</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/>*(Leap::GestureList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::GestureList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::GestureList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"/></codeline>
<codeline lineno="5532"><highlight class="normal"/></codeline>
<codeline lineno="5533"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1gestures_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::GestureList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;gestures((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/>*(Leap::GestureList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::GestureList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::GestureList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"/></codeline>
<codeline lineno="5554"><highlight class="normal"/></codeline>
<codeline lineno="5555"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1translation(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;translation((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"/></codeline>
<codeline lineno="5576"><highlight class="normal"/></codeline>
<codeline lineno="5577"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAxis(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>result;</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAxis((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/>*(Leap::Vector<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Vector((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Vector<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"/></codeline>
<codeline lineno="5598"><highlight class="normal"/></codeline>
<codeline lineno="5599"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAngle((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"/></codeline>
<codeline lineno="5620"><highlight class="normal"/></codeline>
<codeline lineno="5621"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationAngle_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_,<sp/>jlong<sp/>jarg3,<sp/>jobject<sp/>jarg3_)<sp/>{</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/>Leap::Vector<sp/>*arg3<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/>(void)jarg3_;</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>*(Leap::Vector<sp/>**)&amp;jarg3;</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3)<sp/>{</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Vector<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationAngle((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2,(Leap::Vector<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg3);</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"/></codeline>
<codeline lineno="5649"><highlight class="normal"/></codeline>
<codeline lineno="5650"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1rotationMatrix(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/>Leap::Matrix<sp/>result;</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;rotationMatrix((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/>*(Leap::Matrix<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Matrix((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Matrix<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"/></codeline>
<codeline lineno="5671"><highlight class="normal"/></codeline>
<codeline lineno="5672"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1scaleFactor(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;scaleFactor((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"/></codeline>
<codeline lineno="5693"><highlight class="normal"/></codeline>
<codeline lineno="5694"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1isValid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isValid();</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"/></codeline>
<codeline lineno="5708"><highlight class="normal"/></codeline>
<codeline lineno="5709"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1invalid(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>&amp;Leap::Frame::invalid();</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"/></codeline>
<codeline lineno="5720"><highlight class="normal"/></codeline>
<codeline lineno="5721"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1equals(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Frame<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>==((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"/></codeline>
<codeline lineno="5742"><highlight class="normal"/></codeline>
<codeline lineno="5743"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1toString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5752"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Frame<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;toString();</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"/></codeline>
<codeline lineno="5757"><highlight class="normal"/></codeline>
<codeline lineno="5758"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Frame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/>Leap::Frame<sp/>*arg1<sp/>=<sp/>(Leap::Frame<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="5765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"/></codeline>
<codeline lineno="5767"><highlight class="normal"/></codeline>
<codeline lineno="5768"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Config(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Config<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Config();</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/>*(Leap::Config<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"/></codeline>
<codeline lineno="5779"><highlight class="normal"/></codeline>
<codeline lineno="5780"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1type(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/>Leap::Config::ValueType<sp/>result;</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Config::ValueType)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;type((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"/></codeline>
<codeline lineno="5804"><highlight class="normal"/></codeline>
<codeline lineno="5805"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1isArray(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isArray((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"/></codeline>
<codeline lineno="5829"><highlight class="normal"/></codeline>
<codeline lineno="5830"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getBool(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getBool((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"/></codeline>
<codeline lineno="5854"><highlight class="normal"/></codeline>
<codeline lineno="5855"><highlight class="normal">SWIGEXPORT<sp/>jint<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getInt32(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/>jint<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/>int32_t<sp/>result;</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int32_t)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getInt32((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jint)result;<sp/></highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"/></codeline>
<codeline lineno="5879"><highlight class="normal"/></codeline>
<codeline lineno="5880"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getInt64(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/>int64_t<sp/>result;</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(int64_t)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getInt64((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"/></codeline>
<codeline lineno="5904"><highlight class="normal"/></codeline>
<codeline lineno="5905"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getUInt32(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/>uint32_t<sp/>result;</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(uint32_t)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getUInt32((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jlong)result;<sp/></highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"/></codeline>
<codeline lineno="5929"><highlight class="normal"/></codeline>
<codeline lineno="5930"><highlight class="normal">SWIGEXPORT<sp/>jobject<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getUInt64(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/>jobject<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/>uint64_t<sp/>result;</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(uint64_t)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getUInt64((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/>jbyteArray<sp/>ba<sp/>=<sp/>jenv-&gt;NewByteArray(9);</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/>jbyte*<sp/>bae<sp/>=<sp/>jenv-&gt;GetByteArrayElements(ba,<sp/>0);</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/><sp/><sp/>jclass<sp/>clazz<sp/>=<sp/>jenv-&gt;FindClass(</highlight><highlight class="stringliteral">"java/math/BigInteger"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/>jmethodID<sp/>mid<sp/>=<sp/>jenv-&gt;GetMethodID(clazz,<sp/></highlight><highlight class="stringliteral">"&lt;init&gt;"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"([B)V"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/>jobject<sp/>bigint;</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/>bae[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;<sp/>i&lt;9;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bae[i]<sp/>=<sp/>(jbyte)(result&gt;&gt;8*(8-i));</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/>jenv-&gt;ReleaseByteArrayElements(ba,<sp/>bae,<sp/>0);</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/>bigint<sp/>=<sp/>jenv-&gt;NewObject(clazz,<sp/>mid,<sp/>ba);</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/>jresult<sp/>=<sp/>bigint;</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"/></codeline>
<codeline lineno="5970"><highlight class="normal"/></codeline>
<codeline lineno="5971"><highlight class="normal">SWIGEXPORT<sp/>jfloat<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getFloat(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/>jfloat<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="5980"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(float)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getFloat((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jfloat)result;<sp/></highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="5993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"/></codeline>
<codeline lineno="5995"><highlight class="normal"/></codeline>
<codeline lineno="5996"><highlight class="normal">SWIGEXPORT<sp/>jdouble<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getDouble(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/>jdouble<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(double)((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getDouble((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jdouble)result;<sp/></highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"/></codeline>
<codeline lineno="6020"><highlight class="normal"/></codeline>
<codeline lineno="6021"><highlight class="normal">SWIGEXPORT<sp/>jstring<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getString(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/>jstring<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="6040"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getString((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>jenv-&gt;NewStringUTF((&amp;result)-&gt;c_str());<sp/></highlight></codeline>
<codeline lineno="6042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"/></codeline>
<codeline lineno="6045"><highlight class="normal"/></codeline>
<codeline lineno="6046"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getBoolArray(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getBoolArray((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>bool<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>bool<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"/></codeline>
<codeline lineno="6070"><highlight class="normal"/></codeline>
<codeline lineno="6071"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getInt32Array(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getInt32Array((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>int32_t<sp/>&gt;<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"/></codeline>
<codeline lineno="6095"><highlight class="normal"/></codeline>
<codeline lineno="6096"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getUInt32Array(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getUInt32Array((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6119"><highlight class="normal"/></codeline>
<codeline lineno="6120"><highlight class="normal"/></codeline>
<codeline lineno="6121"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getFloatArray(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6127"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getFloatArray((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>float<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>float<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"/></codeline>
<codeline lineno="6145"><highlight class="normal"/></codeline>
<codeline lineno="6146"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getDoubleArray(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getDoubleArray((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>double<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"/></codeline>
<codeline lineno="6170"><highlight class="normal"/></codeline>
<codeline lineno="6171"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1getStringArray(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jstring<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/>std::string<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"null<sp/>std::string"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg2_pstr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)jenv-&gt;GetStringUTFChars(jarg2,<sp/>0);<sp/></highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2_pstr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/>std::string<sp/>arg2_str(arg2_pstr);</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>&amp;arg2_str;</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/>jenv-&gt;ReleaseStringUTFChars(jarg2,<sp/>arg2_pstr);<sp/></highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Config<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;getStringArray((std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/>*(std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"/></codeline>
<codeline lineno="6195"><highlight class="normal"/></codeline>
<codeline lineno="6196"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Config(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/>Leap::Config<sp/>*arg1<sp/>=<sp/>(Leap::Config<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="6203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"/></codeline>
<codeline lineno="6205"><highlight class="normal"/></codeline>
<codeline lineno="6206"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Controller<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Controller();</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"/></codeline>
<codeline lineno="6217"><highlight class="normal"/></codeline>
<codeline lineno="6218"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Controller(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="6225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"/></codeline>
<codeline lineno="6227"><highlight class="normal"/></codeline>
<codeline lineno="6228"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Controller_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1)<sp/>{</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Listener<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Controller<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Controller(*arg1);</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/>*(Leap::Controller<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"/></codeline>
<codeline lineno="6246"><highlight class="normal"/></codeline>
<codeline lineno="6247"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1isConnected(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isConnected();</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"/></codeline>
<codeline lineno="6261"><highlight class="normal"/></codeline>
<codeline lineno="6262"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1addListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6272"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6273"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Listener<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)(arg1)-&gt;addListener(*arg2);</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"/></codeline>
<codeline lineno="6283"><highlight class="normal"/></codeline>
<codeline lineno="6284"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1removeListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Listener<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)(arg1)-&gt;removeListener(*arg2);</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"/></codeline>
<codeline lineno="6305"><highlight class="normal"/></codeline>
<codeline lineno="6306"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(int)jarg2;<sp/></highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame(arg2);</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6321"><highlight class="normal"/></codeline>
<codeline lineno="6322"><highlight class="normal"/></codeline>
<codeline lineno="6323"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1frame_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Frame<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;frame();</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/>*(Leap::Frame<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Frame((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Frame<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6336"><highlight class="normal"/></codeline>
<codeline lineno="6337"><highlight class="normal"/></codeline>
<codeline lineno="6338"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1config(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::Config<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6343"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;config();</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/>*(Leap::Config<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::Config((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::Config<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"/></codeline>
<codeline lineno="6352"><highlight class="normal"/></codeline>
<codeline lineno="6353"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1calibratedScreens(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_)<sp/>{</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/>SwigValueWrapper&lt;<sp/>Leap::ScreenList<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;calibratedScreens();</highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/>*(Leap::ScreenList<sp/>**)&amp;jresult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Leap::ScreenList((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Leap::ScreenList<sp/>&amp;)result);<sp/></highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6366"><highlight class="normal"/></codeline>
<codeline lineno="6367"><highlight class="normal"/></codeline>
<codeline lineno="6368"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_10(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2,<sp/>jboolean<sp/>jarg3)<sp/>{</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arg3<sp/>;</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(Leap::Gesture::Type)jarg2;<sp/></highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/>arg3<sp/>=<sp/>jarg3<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;enableGesture(arg2,arg3);</highlight></codeline>
<codeline lineno="6380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"/></codeline>
<codeline lineno="6382"><highlight class="normal"/></codeline>
<codeline lineno="6383"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1enableGesture_1_1SWIG_11(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(Leap::Gesture::Type)jarg2;<sp/></highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/>((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;enableGesture(arg2);</highlight></codeline>
<codeline lineno="6393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"/></codeline>
<codeline lineno="6395"><highlight class="normal"/></codeline>
<codeline lineno="6396"><highlight class="normal">SWIGEXPORT<sp/>jboolean<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1isGestureEnabled(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jint<sp/>jarg2)<sp/>{</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/>jboolean<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg1<sp/>=<sp/>(Leap::Controller<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/>Leap::Gesture::Type<sp/>arg2<sp/>;</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>(Leap::Gesture::Type)jarg2;<sp/></highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(bool)((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)arg1)-&gt;isGestureEnabled(arg2);</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><sp/><sp/>jresult<sp/>=<sp/>(jboolean)result;<sp/></highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"/></codeline>
<codeline lineno="6412"><highlight class="normal"/></codeline>
<codeline lineno="6413"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_new_1Listener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/>jlong<sp/>jresult<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(Leap::Listener<sp/>*)</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SwigDirector_Listener(jenv);</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/>*(Leap::Listener<sp/>**)&amp;jresult<sp/>=<sp/>result;<sp/></highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="6422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"/></codeline>
<codeline lineno="6424"><highlight class="normal"/></codeline>
<codeline lineno="6425"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_delete_1Listener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>arg1;</highlight></codeline>
<codeline lineno="6432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"/></codeline>
<codeline lineno="6434"><highlight class="normal"/></codeline>
<codeline lineno="6435"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onInit(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onInit((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"/></codeline>
<codeline lineno="6452"><highlight class="normal"/></codeline>
<codeline lineno="6453"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onInitSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onInit((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"/></codeline>
<codeline lineno="6470"><highlight class="normal"/></codeline>
<codeline lineno="6471"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onConnect(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6478"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6484"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onConnect((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"/></codeline>
<codeline lineno="6488"><highlight class="normal"/></codeline>
<codeline lineno="6489"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onConnectSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6495"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6496"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6497"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onConnect((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6505"><highlight class="normal"/></codeline>
<codeline lineno="6506"><highlight class="normal"/></codeline>
<codeline lineno="6507"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnect(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onDisconnect((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6523"><highlight class="normal"/></codeline>
<codeline lineno="6524"><highlight class="normal"/></codeline>
<codeline lineno="6525"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onDisconnectSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6538"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onDisconnect((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6541"><highlight class="normal"/></codeline>
<codeline lineno="6542"><highlight class="normal"/></codeline>
<codeline lineno="6543"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onExit(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6547"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6548"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6549"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6550"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6551"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6552"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6557"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onExit((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6559"><highlight class="normal"/></codeline>
<codeline lineno="6560"><highlight class="normal"/></codeline>
<codeline lineno="6561"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onExitSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6573"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6575"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onExit((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6577"><highlight class="normal"/></codeline>
<codeline lineno="6578"><highlight class="normal"/></codeline>
<codeline lineno="6579"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onFrame(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6582"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6583"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6584"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/>(arg1)-&gt;onFrame((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6595"><highlight class="normal"/></codeline>
<codeline lineno="6596"><highlight class="normal"/></codeline>
<codeline lineno="6597"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1onFrameSwigExplicitListener(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1,<sp/>jobject<sp/>jarg1_,<sp/>jlong<sp/>jarg2,<sp/>jobject<sp/>jarg2_)<sp/>{</highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*arg1<sp/>=<sp/>(Leap::Listener<sp/>*)<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"><sp/><sp/>Leap::Controller<sp/>*arg2<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/>(void)jarg1_;</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/>(void)jarg2_;</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/>arg1<sp/>=<sp/>*(Leap::Listener<sp/>**)&amp;jarg1;<sp/></highlight></codeline>
<codeline lineno="6606"><highlight class="normal"><sp/><sp/>arg2<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg2;</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2)<sp/>{</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/>SWIG_JavaThrowException(jenv,<sp/>SWIG_JavaNullPointerException,<sp/></highlight><highlight class="stringliteral">"Leap::Controller<sp/>const<sp/>&amp;<sp/>reference<sp/>is<sp/>null"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/>(arg1)-&gt;Leap::Listener::onFrame((Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)*arg2);</highlight></codeline>
<codeline lineno="6612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"/></codeline>
<codeline lineno="6614"><highlight class="normal"/></codeline>
<codeline lineno="6615"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1director_1connect(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jobject<sp/>jself,<sp/>jlong<sp/>objarg,<sp/>jboolean<sp/>jswig_mem_own,<sp/>jboolean<sp/>jweak_global)<sp/>{</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*obj<sp/>=<sp/>*((Leap::Listener<sp/>**)&amp;objarg);</highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/>SwigDirector_Listener<sp/>*director<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">SwigDirector_Listener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(director)<sp/>{</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/><sp/>director-&gt;swig_connect_director(jenv,<sp/>jself,<sp/>jenv-&gt;GetObjectClass(jself),<sp/>(jswig_mem_own<sp/>==<sp/>JNI_TRUE),<sp/>(jweak_global<sp/>==<sp/>JNI_TRUE));</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"/></codeline>
<codeline lineno="6624"><highlight class="normal"/></codeline>
<codeline lineno="6625"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Listener_1change_1ownership(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jobject<sp/>jself,<sp/>jlong<sp/>objarg,<sp/>jboolean<sp/>jtake_or_release)<sp/>{</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/>Leap::Listener<sp/>*obj<sp/>=<sp/>*((Leap::Listener<sp/>**)&amp;objarg);</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/>SwigDirector_Listener<sp/>*director<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">SwigDirector_Listener<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(director)<sp/>{</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/><sp/>director-&gt;swig_java_change_ownership(jenv,<sp/>jself,<sp/>jtake_or_release<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"/></codeline>
<codeline lineno="6634"><highlight class="normal"/></codeline>
<codeline lineno="6635"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Pointable_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Pointable<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"/></codeline>
<codeline lineno="6643"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Finger_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Finger<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"/></codeline>
<codeline lineno="6651"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Tool_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6653"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Pointable<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Tool<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"/></codeline>
<codeline lineno="6659"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Hand_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Hand<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"/></codeline>
<codeline lineno="6667"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Gesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6669"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Gesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6674"><highlight class="normal"/></codeline>
<codeline lineno="6675"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_SwipeGesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6677"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::SwipeGesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6682"><highlight class="normal"/></codeline>
<codeline lineno="6683"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_CircleGesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::CircleGesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6690"><highlight class="normal"/></codeline>
<codeline lineno="6691"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenTapGesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6692"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6693"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6694"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::ScreenTapGesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6698"><highlight class="normal"/></codeline>
<codeline lineno="6699"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_KeyTapGesture_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6703"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Gesture<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::KeyTapGesture<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"/></codeline>
<codeline lineno="6707"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Screen_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Screen<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6714"><highlight class="normal"/></codeline>
<codeline lineno="6715"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_PointableList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::PointableList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"/></codeline>
<codeline lineno="6723"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_FingerList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::FingerList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"/></codeline>
<codeline lineno="6731"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ToolList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::ToolList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"/></codeline>
<codeline lineno="6739"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_HandList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6743"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::HandList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"/></codeline>
<codeline lineno="6747"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_GestureList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6748"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6750"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::GestureList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"/></codeline>
<codeline lineno="6755"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_ScreenList_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::ScreenList<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"/></codeline>
<codeline lineno="6763"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Frame_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Frame<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"/></codeline>
<codeline lineno="6771"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Config_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6775"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Config<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"/></codeline>
<codeline lineno="6779"><highlight class="normal">SWIGEXPORT<sp/>jlong<sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_Controller_1SWIGUpcast(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls,<sp/>jlong<sp/>jarg1)<sp/>{</highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/><sp/><sp/>jlong<sp/>baseptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jenv;</highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)jcls;</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/><sp/>*(Leap::Interface<sp/>**)&amp;baseptr<sp/>=<sp/>*(Leap::Controller<sp/>**)&amp;jarg1;</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseptr;</highlight></codeline>
<codeline lineno="6785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"/></codeline>
<codeline lineno="6787"><highlight class="normal">SWIGEXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JNICALL<sp/>Java_com_leapmotion_leap_LeapJNI_swig_1module_1init(JNIEnv<sp/>*jenv,<sp/>jclass<sp/>jcls)<sp/>{</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*method;</highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signature;</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/>}<sp/>methods[5]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"SwigDirector_Listener_onInit"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Listener;J)V"</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"SwigDirector_Listener_onConnect"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Listener;J)V"</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"SwigDirector_Listener_onDisconnect"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Listener;J)V"</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"SwigDirector_Listener_onExit"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Listener;J)V"</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">"SwigDirector_Listener_onFrame"</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">"(Lcom/leapmotion/leap/Listener;J)V"</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/>Swig::jclass_LeapJNI<sp/>=<sp/>(jclass)<sp/>jenv-&gt;NewGlobalRef(jcls);</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Swig::jclass_LeapJNI)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(methods)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(methods[0]));<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/><sp/><sp/>Swig::director_methids[i]<sp/>=<sp/>jenv-&gt;GetStaticMethodID(jcls,<sp/>methods[i].method,<sp/>methods[i].signature);</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Swig::director_methids[i])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"/></codeline>
<codeline lineno="6818"><highlight class="normal"/></codeline>
<codeline lineno="6819"><highlight class="normal"/><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="6820"><highlight class="preprocessor"/><highlight class="normal">}</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6822"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="_leap__wrap__java_8h" kind="file">
    <compoundname>Leap_wrap_java.h</compoundname>
    <includedby refid="_leap__wrap__java_8cpp" local="yes">/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.cpp</includedby>
    <innerclass refid="class_swig_director___listener" prot="public">SwigDirector_Listener</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>2.0.6</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>not<sp/>intended<sp/>to<sp/>be<sp/>easily<sp/>readable<sp/>and<sp/>contains<sp/>a<sp/>number<sp/>of<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>coding<sp/>conventions<sp/>designed<sp/>to<sp/>improve<sp/>portability<sp/>and<sp/>efficiency.<sp/>Do<sp/>not<sp/>make</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify<sp/>the<sp/>SWIG<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>interface<sp/>file<sp/>instead.<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>SWIG_Leap_WRAP_H_</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"/><highlight class="preprocessor">#define<sp/>SWIG_Leap_WRAP_H_</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"/><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="keyword">class<sp/></highlight><highlight class="normal">SwigDirector_Listener<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Leap::Listener,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Swig::Director<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swig_connect_director(JNIEnv<sp/>*jenv,<sp/>jobject<sp/>jself,<sp/>jclass<sp/>jcls,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swig_mem_own,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>weak_global);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>SwigDirector_Listener(JNIEnv<sp/>*jenv);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~SwigDirector_Listener();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onInit(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onConnect(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onDisconnect(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onExit(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onFrame(Leap::Controller<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;arg0);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swig_overrides(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>5<sp/>?<sp/>swig_override[n]<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swig_override[5];</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"/><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Volumes/LEAP/docs-build/temp/java/Leap_wrap_java.h"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_270f00a52c7ce0f5d1191211cfde0ea3" kind="dir">
    <compoundname>/Volumes/LEAP/docs-build/temp/java/com</compoundname>
    <innerdir refid="dir_725b360bfa0932a45d14a340bdbb2c3b">/Volumes/LEAP/docs-build/temp/java/com/leapmotion</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_a05c61139515c4ab60024905805031ab" kind="dir">
    <compoundname>/Volumes/LEAP/docs-build</compoundname>
    <innerdir refid="dir_6e831c213168990d467b2d80919a6d9b">/Volumes/LEAP/docs-build/temp</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_6f4b143aafc629aeab079d9c8f401a77" kind="dir">
    <compoundname>/Volumes/LEAP/docs-build/temp/java</compoundname>
    <innerdir refid="dir_270f00a52c7ce0f5d1191211cfde0ea3">/Volumes/LEAP/docs-build/temp/java/com</innerdir>
    <innerfile refid="_leap__wrap__java_8cpp">Leap_wrap_java.cpp</innerfile>
    <innerfile refid="_leap__wrap__java_8h">Leap_wrap_java.h</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_fd811d2d59a72d4ec15953607b57a629" kind="dir">
    <compoundname>/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap</compoundname>
    <innerfile refid="_bool_array_8java">BoolArray.java</innerfile>
    <innerfile refid="_circle_gesture_8java">CircleGesture.java</innerfile>
    <innerfile refid="_config_8java">Config.java</innerfile>
    <innerfile refid="_controller_8java">Controller.java</innerfile>
    <innerfile refid="_double_array_8java">DoubleArray.java</innerfile>
    <innerfile refid="_finger_8java">Finger.java</innerfile>
    <innerfile refid="_finger_list_8java">FingerList.java</innerfile>
    <innerfile refid="_float_array_8java">FloatArray.java</innerfile>
    <innerfile refid="_frame_8java">Frame.java</innerfile>
    <innerfile refid="_gesture_8java">Gesture.java</innerfile>
    <innerfile refid="_gesture_list_8java">GestureList.java</innerfile>
    <innerfile refid="_hand_8java">Hand.java</innerfile>
    <innerfile refid="_hand_list_8java">HandList.java</innerfile>
    <innerfile refid="_int32_array_8java">Int32Array.java</innerfile>
    <innerfile refid="_interface_8java">Interface.java</innerfile>
    <innerfile refid="_key_tap_gesture_8java">KeyTapGesture.java</innerfile>
    <innerfile refid="_leap_8java">Leap.java</innerfile>
    <innerfile refid="_leap_j_n_i_8java">LeapJNI.java</innerfile>
    <innerfile refid="_listener_8java">Listener.java</innerfile>
    <innerfile refid="_matrix_8java">Matrix.java</innerfile>
    <innerfile refid="_pointable_8java">Pointable.java</innerfile>
    <innerfile refid="_pointable_list_8java">PointableList.java</innerfile>
    <innerfile refid="_screen_8java">Screen.java</innerfile>
    <innerfile refid="_screen_list_8java">ScreenList.java</innerfile>
    <innerfile refid="_screen_tap_gesture_8java">ScreenTapGesture.java</innerfile>
    <innerfile refid="_string_array_8java">StringArray.java</innerfile>
    <innerfile refid="_swipe_gesture_8java">SwipeGesture.java</innerfile>
    <innerfile refid="_tool_8java">Tool.java</innerfile>
    <innerfile refid="_tool_list_8java">ToolList.java</innerfile>
    <innerfile refid="_u_int32_array_8java">UInt32Array.java</innerfile>
    <innerfile refid="_vector_8java">Vector.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_725b360bfa0932a45d14a340bdbb2c3b" kind="dir">
    <compoundname>/Volumes/LEAP/docs-build/temp/java/com/leapmotion</compoundname>
    <innerdir refid="dir_fd811d2d59a72d4ec15953607b57a629">/Volumes/LEAP/docs-build/temp/java/com/leapmotion/leap</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/java/com/leapmotion/"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="dir_6e831c213168990d467b2d80919a6d9b" kind="dir">
    <compoundname>/Volumes/LEAP/docs-build/temp</compoundname>
    <innerdir refid="dir_6f4b143aafc629aeab079d9c8f401a77">/Volumes/LEAP/docs-build/temp/java</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Volumes/LEAP/docs-build/temp/"/>
  </compounddef></doxygen>
